!function(){let e,t,r,n,a,i,s,o;function u(e,t,r,n){Object.defineProperty(e,t,{get:r,set:n,enumerable:!0,configurable:!0})}var l,d,h="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{};function p(e,t){return Object.keys(t).forEach(function(r){"default"===r||"__esModule"===r||Object.prototype.hasOwnProperty.call(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[r]}})}),e}var c={},f={},m=h.parcelRequire0b73;null==m&&((m=function(e){if(e in c)return c[e].exports;if(e in f){var t=f[e];delete f[e];var r={id:e,exports:{}};return c[e]=r,t.call(r.exports,r,r.exports),r.exports}var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,t){f[e]=t},h.parcelRequire0b73=m);var g=m.register;g("2cpeF",function(e,t){}),g("7k5xL",function(e,t){!function(e,t,r){function n(e){var t,r=this,n=(t=4022871197,function(e){e=String(e);for(var r=0;r<e.length;r++){var n=.02519603282416938*(t+=e.charCodeAt(r));t=n>>>0,n-=t,n*=t,t=n>>>0,n-=t,t+=4294967296*n}return(t>>>0)*23283064365386963e-26});r.next=function(){var e=2091639*r.s0+23283064365386963e-26*r.c;return r.s0=r.s1,r.s1=r.s2,r.s2=e-(r.c=0|e)},r.c=1,r.s0=n(" "),r.s1=n(" "),r.s2=n(" "),r.s0-=n(e),r.s0<0&&(r.s0+=1),r.s1-=n(e),r.s1<0&&(r.s1+=1),r.s2-=n(e),r.s2<0&&(r.s2+=1)}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function i(e,t){var r=new n(e),i=t&&t.state,s=r.next;return s.int32=function(){return 4294967296*r.next()|0},s.double=function(){return s()+(2097152*s()|0)*11102230246251565e-32},s.quick=s,i&&("object"==typeof i&&a(i,r),s.state=function(){return a(r,{})}),s}t&&t.exports?t.exports=i:r&&r.amd?r(function(){return i}):this.alea=i}(0,e,"function"==typeof define&&define)}),g("hrQbz",function(e,t){!function(e,t,r){function n(e){var t=this,r="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:r+=e;for(var n=0;n<r.length+64;n++)t.x^=0|r.charCodeAt(n),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function i(e,t){var r=new n(e),i=t&&t.state,s=function(){return(r.next()>>>0)/4294967296};return s.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},s.int32=r.next,s.quick=s,i&&("object"==typeof i&&a(i,r),s.state=function(){return a(r,{})}),s}t&&t.exports?t.exports=i:r&&r.amd?r(function(){return i}):this.xor128=i}(0,e,"function"==typeof define&&define)}),g("gPZYR",function(e,t){!function(e,t,r){function n(e){var t=this,r="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^(e^e<<1))|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:r+=e;for(var n=0;n<r.length+64;n++)t.x^=0|r.charCodeAt(n),n==r.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function i(e,t){var r=new n(e),i=t&&t.state,s=function(){return(r.next()>>>0)/4294967296};return s.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},s.int32=r.next,s.quick=s,i&&("object"==typeof i&&a(i,r),s.state=function(){return a(r,{})}),s}t&&t.exports?t.exports=i:r&&r.amd?r(function(){return i}):this.xorwow=i}(0,e,"function"==typeof define&&define)}),g("7tLAq",function(e,t){!function(e,t,r){function n(e){var t=this;t.next=function(){var e,r,n=t.x,a=t.i;return e=n[a],e^=e>>>7,r=e^e<<24^((e=n[a+1&7])^e>>>10)^((e=n[a+3&7])^e>>>3)^((e=n[a+4&7])^e<<7),e=n[a+7&7],e^=e<<13,r^=e^e<<9,n[a]=r,t.i=a+1&7,r},function(e,t){var r,n=[];if(t===(0|t))n[0]=t;else for(r=0,t=""+t;r<t.length;++r)n[7&r]=n[7&r]<<15^t.charCodeAt(r)+n[r+1&7]<<13;for(;n.length<8;)n.push(0);for(r=0;r<8&&0===n[r];++r);for(8==r?n[7]=-1:n[r],e.x=n,e.i=0,r=256;r>0;--r)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function i(e,t){null==e&&(e=+new Date);var r=new n(e),i=t&&t.state,s=function(){return(r.next()>>>0)/4294967296};return s.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},s.int32=r.next,s.quick=s,i&&(i.x&&a(i,r),s.state=function(){return a(r,{})}),s}t&&t.exports?t.exports=i:r&&r.amd?r(function(){return i}):this.xorshift7=i}(0,e,"function"==typeof define&&define)}),g("hvHyM",function(e,t){!function(e,t,r){function n(e){var t=this;t.next=function(){var e,r,n=t.w,a=t.X,i=t.i;return t.w=n=n+1640531527|0,r=a[i+34&127],e=a[i=i+1&127],r^=r<<13,e^=e<<17,r^=r>>>15,e^=e>>>12,r=a[i]=r^e,t.i=i,r+(n^n>>>16)|0},function(e,t){var r,n,a,i,s,o=[],u=128;for(t===(0|t)?(n=t,t=null):(t+="\0",n=0,u=Math.max(u,t.length)),a=0,i=-32;i<u;++i)t&&(n^=t.charCodeAt((i+32)%t.length)),0===i&&(s=n),n^=n<<10,n^=n>>>15,n^=n<<4,n^=n>>>13,i>=0&&(s=s+1640531527|0,a=0==(r=o[127&i]^=n+s)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,i=512;i>0;--i)n=o[a+34&127],r=o[a=a+1&127],n^=n<<13,r^=r<<17,n^=n>>>15,r^=r>>>12,o[a]=n^r;e.w=s,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function i(e,t){null==e&&(e=+new Date);var r=new n(e),i=t&&t.state,s=function(){return(r.next()>>>0)/4294967296};return s.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},s.int32=r.next,s.quick=s,i&&(i.X&&a(i,r),s.state=function(){return a(r,{})}),s}t&&t.exports?t.exports=i:r&&r.amd?r(function(){return i}):this.xor4096=i}(0,e,"function"==typeof define&&define)}),g("gX9JT",function(e,t){!function(e,t,r){function n(e){var t=this,r="";t.next=function(){var e=t.b,r=t.c,n=t.d,a=t.a;return e=e<<25^e>>>7^r,r=r-n|0,n=n<<24^n>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^r,t.c=r=r-n|0,t.d=n<<16^r>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):r+=e;for(var n=0;n<r.length+20;n++)t.b^=0|r.charCodeAt(n),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function i(e,t){var r=new n(e),i=t&&t.state,s=function(){return(r.next()>>>0)/4294967296};return s.double=function(){do var e=r.next()>>>11,t=(r.next()>>>0)/4294967296,n=(e+t)/2097152;while(0===n)return n},s.int32=r.next,s.quick=s,i&&("object"==typeof i&&a(i,r),s.state=function(){return a(r,{})}),s}t&&t.exports?t.exports=i:r&&r.amd?r(function(){return i}):this.tychei=i}(0,e,"function"==typeof define&&define)});class y{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class x{refCount(e){return b("refCount")}incRef(e){return b("incRef")}timerAvailable(){return!0}time(e){return b("time")}read(e){return b("read")}readSync(e){return b("readSync")}readToGPU(e,t){return b("readToGPU")}numDataIds(){return b("numDataIds")}disposeData(e,t){return b("disposeData")}write(e,t,r){return b("write")}move(e,t,r,n,a){return b("move")}createTensorFromGPUData(e,t,r){return b("createTensorFromGPUData")}memory(){return b("memory")}floatPrecision(){return b("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return b("dispose")}}function b(e){throw Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var v={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w(e){let t=e.length,r=0;for(;t>0;)r=Math.random()*t|0,I(e,--t,r)}function S(e,t){if(e.length!==t.length)throw Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let r=e.length,n=0;for(;r>0;)n=Math.random()*r|0,I(e,--r,n),I(t,r,n)}function k(e,t,r){return Math.max(e,Math.min(t,r))}function C(e){return e%2==0?e:e+1}function I(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function T(e){let t=0;for(let r=0;r<e.length;r++)t+=e[r];return t}function $(e,t){let r=Math.random();return t*r+(1-r)*e}function N(e,t){let r=0;for(let n=0;n<e.length;n++){let a=Number(e[n])-Number(t[n]);r+=a*a}return r}function E(e,t){if(!e)throw Error("string"==typeof t?t:t())}function R(e,t,r=""){E(D(e,t),()=>r+` Shapes ${e} and ${t} must match`)}function A(e){E(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function _(e){if(0===e.length)return 1;let t=e[0];for(let r=1;r<e.length;r++)t*=e[r];return t}function O(e){return 0===e.length}function F(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(null!==e[r]&&null!==t[r]&&e[r]!==t[r])return!1;return!0}function D(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function P(e){return e%1==0}function M(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;{if(e===-1/0)return -1;let t=Math.exp(2*e);return(t-1)/(t+1)}}function L(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function B(e){let t=new Uint32Array(e);for(let r=0;r<e;++r)t[r]=r;return w(t),t}function z(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function U(e,t=e=>0,r,n){return new Promise((a,i)=>{let s=0,o=()=>{if(e()){a();return}let u=t(++s);if(null!=r&&s>=r){i();return}null!=n?n(o,u):setTimeout(o,u)};o()})}function V(e,t){let r=1,n=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)r*=e[t];else if(-1===e[t]){if(-1!==n)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${t}`);n=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===n){if(t>0&&t!==r)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===r)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%r!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${r}`);let a=e.slice();return a[n]=t/r,a}function W(e,t){let r=t.length;return E((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-r&&e<r),()=>`All values in axis param must be in range [-${r}, ${r}) but got axis ${e}`),E(e.every(e=>P(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?r+e:e)}function G(e,t){let r=[],n=[],a=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||a?null:W(t,e).sort(),s=0;for(let t=0;t<e.length;++t){if(null!=i){if(i[s]===t&&1!==e[t])throw Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==i[s]||i[s]>t)&&1===e[t]&&(r.push(e[t]),n.push(t)),i[s]<=t&&s++}1!==e[t]&&(r.push(e[t]),n.push(t))}return{newShape:r,keptDims:n}}function H(e,t){return j(e,t)}function j(e,t){let r=null;if(null==e||"float32"===e)r=new Float32Array(t);else if("int32"===e)r=new Int32Array(t);else if("bool"===e)r=new Uint8Array(t);else if("string"===e)r=Array(t);else throw Error(`Unknown data type ${e}`);return r}function K(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function q(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function X(e,t){return"complex64"!==t&&("float32"!==t||"complex64"===e)&&("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)}function Y(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw Error(`Unknown dtype ${e}`)}function Q(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function Z(e){return"string"==typeof e||e instanceof String}function J(e){return"boolean"==typeof e}function ee(e){return"number"==typeof e}function et(e){if(Array.isArray(e))return et(e[0]);if(e instanceof Float32Array);else if(e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray)return"int32";else if(ee(e));else if(Z(e))return"string";else if(J(e))return"bool";return"float32"}function er(e){return!!(e&&e.constructor&&e.call&&e.apply)}function en(e,t){for(let r=t;r<e;++r)if(e%r==0)return r;return e}function ea(e){let t=e.length;if(t<2)return[];let r=Array(t-1);r[t-2]=e[t-1];for(let n=t-3;n>=0;--n)r[n]=r[n+1]*e[n+1];return r}function ei(e,t,r=!1){if(0===e.length)return t[0];let n=e.reduce((e,t)=>e*t)*(r?2:1);if(0===n)return[];if(n!==t.length)throw Error(`[${e}] does not match the input size ${t.length}${r?" for a complex tensor":""}.`);return function e(t,r,n,a=!1){let i=[];if(1===r.length){let e=r[0]*(a?2:1);for(let r=0;r<e;r++)i[r]=n[t+r]}else{let s=r[0],o=r.slice(1),u=o.reduce((e,t)=>e*t)*(a?2:1);for(let r=0;r<s;r++)i[r]=e(t+r*u,o,n,a)}return i}(0,e,t,r)}function es(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw Error(`Unknown dtype ${t}`)}function eo(e,t){let r=eu(e,t);for(let e=0;e<r.length;e++)r[e]=1;return r}function eu(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw Error(`Unknown data type ${t}`)}function el(e,t){let r=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return ei(e,new Float32Array(r));if("int32"===t)return ei(e,new Int32Array(r));if("bool"===t)return ei(e,new Uint8Array(r));throw Error(`Unknown data type ${t}`)}function ed(e){e.forEach(t=>{E(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function eh(e,t,r){if(0===t)return 0;if(1===t)return e[0];let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=r[t]*e[t];return n}function ep(e,t,r){if(0===t)return[];if(1===t)return[e];let n=Array(t);for(let t=0;t<n.length-1;++t)n[t]=Math.floor(e/r[t]),e-=n[t]*r[t];return n[n.length-1]=e,n}function ec(e){return e&&e.then&&"function"==typeof e.then}u(v,"shuffle",function(){return w}),u(v,"swap",function(){return I}),u(v,"shuffleCombo",function(){return S}),u(v,"clamp",function(){return k}),u(v,"nearestLargerEven",function(){return C}),u(v,"sum",function(){return T}),u(v,"randUniform",function(){return $}),u(v,"distSquared",function(){return N}),u(v,"assert",function(){return E}),u(v,"assertShapesMatch",function(){return R}),u(v,"arraysEqual",function(){return D}),u(v,"assertNonNull",function(){return A}),u(v,"sizeFromShape",function(){return _}),u(v,"isScalarShape",function(){return O}),u(v,"arraysEqualWithNull",function(){return F}),u(v,"isInt",function(){return P}),u(v,"tanh",function(){return M}),u(v,"sizeToSquarishShape",function(){return L}),u(v,"createShuffledIndices",function(){return B}),u(v,"rightPad",function(){return z}),u(v,"repeatedTry",function(){return U}),u(v,"inferFromImplicitShape",function(){return V}),u(v,"parseAxisParam",function(){return W}),u(v,"squeezeShape",function(){return G}),u(v,"getTypedArrayFromDType",function(){return H}),u(v,"getArrayFromDType",function(){return j}),u(v,"checkConversionForErrors",function(){return K}),u(v,"isValidDtype",function(){return q}),u(v,"hasEncodingLoss",function(){return X}),u(v,"bytesPerElement",function(){return Y}),u(v,"bytesFromStringArray",function(){return Q}),u(v,"isString",function(){return Z}),u(v,"isBoolean",function(){return J}),u(v,"isNumber",function(){return ee}),u(v,"inferDtype",function(){return et}),u(v,"isFunction",function(){return er}),u(v,"nearestDivisor",function(){return en}),u(v,"computeStrides",function(){return ea}),u(v,"toNestedArray",function(){return ei}),u(v,"convertBackendValuesAndArrayBuffer",function(){return es}),u(v,"makeOnesTypedArray",function(){return eo}),u(v,"makeZerosTypedArray",function(){return eu}),u(v,"makeZerosNestedTypedArray",function(){return el}),u(v,"assertNonNegativeIntegerDimensions",function(){return ed}),u(v,"locToIndex",function(){return eh}),u(v,"indexToLoc",function(){return ep}),u(v,"isPromise",function(){return ec});let ef="tfjsflags";class em{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=eg,this.populateURLFlags()}setPlatform(e,t){null==this.platform||ey.getBool("IS_TEST")||ey.getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},null!=this.urlFlags[e]){let t=this.urlFlags[e];ey.getBool("IS_TEST")||ey.getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(ec(t))throw Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);ef in e&&e[ef].split(",").forEach(e=>{let[t,r]=e.split(":");this.urlFlags[t]=function(e,t){let r=t.toLowerCase();return"true"===r||"false"===r?"true"===r:`${+r}`===r?+r:t}(0,r)})}}function eg(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>{var n,a;return n=r[0],a=r[1],t[decodeURIComponent(n)]=decodeURIComponent(a||""),r.join("=")}),t}let ey=null;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ex={},eb=ex={};function ev(){throw Error("setTimeout has not been defined")}function ew(){throw Error("clearTimeout has not been defined")}function eS(e){if(TU===setTimeout)return setTimeout(e,0);if((TU===ev||!TU)&&setTimeout)return TU=setTimeout,setTimeout(e,0);try{return TU(e,0)}catch(t){try{return TU.call(null,e,0)}catch(t){return TU.call(this,e,0)}}}!function(){try{TU="function"==typeof setTimeout?setTimeout:ev}catch(e){TU=ev}try{TV="function"==typeof clearTimeout?clearTimeout:ew}catch(e){TV=ew}}();var ek=[],eC=!1,eI=-1;function eT(){eC&&TW&&(eC=!1,TW.length?ek=TW.concat(ek):eI=-1,ek.length&&e$())}function e$(){if(!eC){var e=eS(eT);eC=!0;for(var t=ek.length;t;){for(TW=ek,ek=[];++eI<t;)TW&&TW[eI].run();eI=-1,t=ek.length}TW=null,eC=!1,function(e){if(TV===clearTimeout)return clearTimeout(e);if((TV===ew||!TV)&&clearTimeout)return TV=clearTimeout,clearTimeout(e);try{TV(e)}catch(t){try{return TV.call(null,e)}catch(t){return TV.call(this,e)}}}(e)}}function eN(e,t){this.fun=e,this.array=t}function eE(){}function eR(){if(null==e){let t;if("undefined"!=typeof window)t=window;else if(void 0!==h)t=h;else if(void 0!==ex)t=ex;else if("undefined"!=typeof self)t=self;else throw Error("Could not find a global object");e=t}return e}function eA(e,t){let r=function(){let e=eR();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(r.has(e))return r.get(e);{let n=t();return r.set(e,n),r.get(e)}}eb.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];ek.push(new eN(e,t)),1!==ek.length||eC||eS(e$)},eN.prototype.run=function(){this.fun.apply(null,this.array)},eb.title="browser",eb.browser=!0,eb.env={},eb.argv=[],eb.version="",eb.versions={},eb.on=eE,eb.addListener=eE,eb.once=eE,eb.off=eE,eb.removeListener=eE,eb.removeAllListeners=eE,eb.emit=eE,eb.prependListener=eE,eb.prependOnceListener=eE,eb.listeners=function(e){return[]},eb.binding=function(e){throw Error("process.binding is not supported")},eb.cwd=function(){return"/"},eb.chdir=function(e){throw Error("process.chdir is not supported")},eb.umask=function(){return 0};let e_="Acos",eO="Acosh",eF="AddN",eD="ArgMax",eP="ArgMin",eM="Asin",eL="Asinh",eB="Atan",ez="Atanh",eU="Atan2",eV="AvgPool",eW="AvgPoolGrad",eG="AvgPool3D",eH="AvgPool3DGrad",ej="BatchMatMul",eK="BatchToSpaceND",eq="Bincount",eX="BitwiseAnd",eY="BroadcastArgs",eQ="Cast",eZ="Ceil",eJ="ClipByValue",e0="Complex",e1="ComplexAbs",e2="Concat",e3="Conv2D",e4="Conv2DBackpropFilter",e6="Conv2DBackpropInput",e5="Conv3D",e8="Conv3DBackpropFilterV2",e7="Conv3DBackpropInputV2",e9="Cosh",te="Cumprod",tt="Cumsum",tr="CropAndResize",tn="DenseBincount",ta="DepthToSpace",ti="DepthwiseConv2dNative",ts="DepthwiseConv2dNativeBackpropFilter",to="DepthwiseConv2dNativeBackpropInput",tu="Diag",tl="Dilation2D",td="Draw",th="RealDiv",tp="Einsum",tc="EluGrad",tf="Equal",tm="ExpandDims",tg="Expm1",ty="Fill",tx="FlipLeftRight",tb="Floor",tv="FloorDiv",tw="FusedBatchNorm",tS="GatherV2",tk="GatherNd",tC="Greater",tI="GreaterEqual",tT="Identity",t$="IFFT",tN="Imag",tE="IsFinite",tR="IsInf",tA="IsNan",t_="LeakyRelu",tO="Less",tF="LessEqual",tD="LinSpace",tP="Log1p",tM="LogicalAnd",tL="LogicalNot",tB="LogicalOr",tz="LRNGrad",tU="Maximum",tV="MaxPool",tW="MaxPoolGrad",tG="MaxPool3D",tH="MaxPool3DGrad",tj="MaxPoolWithArgmax",tK="Mean",tq="Minimum",tX="MirrorPad",tY="Multinomial",tQ="Multiply",tZ="NotEqual",tJ="NonMaxSuppressionV3",t0="NonMaxSuppressionV4",t1="NonMaxSuppressionV5",t2="OnesLike",t3="OneHot",t4="Pack",t6="PadV2",t5="Prelu",t8="Prod",t7="RaggedGather",t9="RaggedRange",re="RaggedTensorToTensor",rt="Range",rr="Real",rn="Reciprocal",ra="Relu",ri="Reshape",rs="ResizeNearestNeighbor",ro="ResizeNearestNeighborGrad",ru="ResizeBilinear",rl="ResizeBilinearGrad",rd="Relu6",rh="Reverse",rp="Round",rc="Rsqrt",rf="ScatterNd",rm="TensorScatterUpdate",rg="SearchSorted",ry="Select",rx="Selu",rb="Slice",rv="Sinh",rw="Sign",rS="Sigmoid",rk="Softplus",rC="Sqrt",rI="SpaceToBatchND",rT="SplitV",r$="Softmax",rN="SparseFillEmptyRows",rE="SparseReshape",rR="SparseSegmentMean",rA="SparseSegmentSum",r_="SparseToDense",rO="SquaredDifference",rF="Square",rD="StaticRegexReplace",rP="StridedSlice",rM="StringNGrams",rL="StringSplit",rB="StringToHashBucketFast",rz="Tanh",rU="Tile",rV="TopK",rW="Transform",rG="Transpose",rH="Unique",rj="Unpack",rK="UnsortedSegmentSum",rq="ZerosLike",rX="Step",rY="FromPixels",rQ="RotateWithOffset",rZ="_FusedMatMul",rJ="FusedConv2D",r0="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r1={};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r2(...e){ey.getBool("IS_TEST")||ey.getBool("PROD")||console.warn(...e)}function r3(...e){ey.getBool("IS_TEST")||ey.getBool("PROD")||console.log(...e)}u(r1,"warn",function(){return r2}),u(r1,"log",function(){return r3});let r4=eA("kernelRegistry",()=>new Map),r6=eA("gradRegistry",()=>new Map);function r5(e,t){let r=`${t}_${e}`;return r4.get(r)}function r8(e){let t=r4.entries(),r=[];for(;;){let{done:n,value:a}=t.next();if(n)break;let[i,s]=a,[o]=i.split("_");o===e&&r.push(s)}return r}function r7(e){let{kernelName:t,backendName:r}=e,n=`${r}_${t}`;r4.has(n)&&r2(`The kernel '${t}' for backend '${r}' is already registered`),r4.set(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var r9={};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ne(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}u(r9,"createScalarValue",function(){return nB}),u(r9,"encodeString",function(){return nW}),u(r9,"toTypedArray",function(){return nz}),u(r9,"flatten",function(){return nj}),u(r9,"now",function(){return nU}),u(r9,"fetch",function(){return nV}),u(r9,"decodeString",function(){return nG}),u(r9,"isTypedArray",function(){return nH});var nt={};u(nt,"hexToLong",function(){return nN}),u(nt,"fingerPrint64",function(){return nL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var nr={};nr=na;var nn=null;try{nn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function na(e,t,r){this.low=0|e,this.high=0|t,this.unsigned=!!r}function ni(e){return!0===(e&&e.__isLong__)}na.prototype.__isLong__,Object.defineProperty(na.prototype,"__isLong__",{value:!0}),na.isLong=ni;var ns={},no={};function nu(e,t){var r,n,a;return t?(e>>>=0,(a=0<=e&&e<256)&&(n=no[e]))?n:(r=nd(e,(0|e)<0?-1:0,!0),a&&(no[e]=r),r):(e|=0,(a=-128<=e&&e<128)&&(n=ns[e]))?n:(r=nd(e,e<0?-1:0,!1),a&&(ns[e]=r),r)}function nl(e,t){if(isNaN(e))return t?nb:nx;if(t){if(e<0)return nb;if(e>=nm)return nC}else{if(e<=-ng)return nI;if(e+1>=ng)return nk}return e<0?nl(-e,t).neg():nd(e%nf|0,e/nf|0,t)}function nd(e,t,r){return new na(e,t,r)}na.fromInt=nu,na.fromNumber=nl,na.fromBits=nd;var nh=Math.pow;function np(e,t,r){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return nx;if("number"==typeof t?(r=t,t=!1):t=!!t,(r=r||10)<2||36<r)throw RangeError("radix");if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return np(e.substring(1),t,r).neg();for(var n,a=nl(nh(r,8)),i=nx,s=0;s<e.length;s+=8){var o=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+o),r);if(o<8){var l=nl(nh(r,o));i=i.mul(l).add(nl(u))}else i=(i=i.mul(a)).add(nl(u))}return i.unsigned=t,i}function nc(e,t){return"number"==typeof e?nl(e,t):"string"==typeof e?np(e,t):nd(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}na.fromString=np,na.fromValue=nc;var nf=4294967296,nm=18446744073709552e3,ng=0x7fffffffffffffff,ny=nu(16777216),nx=nu(0);na.ZERO=nx;var nb=nu(0,!0);na.UZERO=nb;var nv=nu(1);na.ONE=nv;var nw=nu(1,!0);na.UONE=nw;var nS=nu(-1);na.NEG_ONE=nS;var nk=nd(-1,2147483647,!1);na.MAX_VALUE=nk;var nC=nd(-1,-1,!0);na.MAX_UNSIGNED_VALUE=nC;var nI=nd(0,-2147483648,!1);na.MIN_VALUE=nI;var nT=na.prototype;nT.toInt=function(){return this.unsigned?this.low>>>0:this.low},nT.toNumber=function(){return this.unsigned?(this.high>>>0)*nf+(this.low>>>0):this.high*nf+(this.low>>>0)},nT.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(!this.eq(nI))return"-"+this.neg().toString(e);var t=nl(e),r=this.div(t),n=r.mul(t).sub(this);return r.toString(e)+n.toInt().toString(e)}for(var a=nl(nh(e,6),this.unsigned),i=this,s="";;){var o=i.div(a),u=(i.sub(o.mul(a)).toInt()>>>0).toString(e);if((i=o).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},nT.getHighBits=function(){return this.high},nT.getHighBitsUnsigned=function(){return this.high>>>0},nT.getLowBits=function(){return this.low},nT.getLowBitsUnsigned=function(){return this.low>>>0},nT.getNumBitsAbs=function(){if(this.isNegative())return this.eq(nI)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return 0!=this.high?t+33:t+1},nT.isZero=function(){return 0===this.high&&0===this.low},nT.eqz=nT.isZero,nT.isNegative=function(){return!this.unsigned&&this.high<0},nT.isPositive=function(){return this.unsigned||this.high>=0},nT.isOdd=function(){return(1&this.low)==1},nT.isEven=function(){return(1&this.low)==0},nT.equals=function(e){return ni(e)||(e=nc(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},nT.eq=nT.equals,nT.notEquals=function(e){return!this.eq(e)},nT.neq=nT.notEquals,nT.ne=nT.notEquals,nT.lessThan=function(e){return 0>this.comp(e)},nT.lt=nT.lessThan,nT.lessThanOrEqual=function(e){return 0>=this.comp(e)},nT.lte=nT.lessThanOrEqual,nT.le=nT.lessThanOrEqual,nT.greaterThan=function(e){return this.comp(e)>0},nT.gt=nT.greaterThan,nT.greaterThanOrEqual=function(e){return this.comp(e)>=0},nT.gte=nT.greaterThanOrEqual,nT.ge=nT.greaterThanOrEqual,nT.compare=function(e){if(ni(e)||(e=nc(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},nT.comp=nT.compare,nT.negate=function(){return!this.unsigned&&this.eq(nI)?nI:this.not().add(nv)},nT.neg=nT.negate,nT.add=function(e){ni(e)||(e=nc(e));var t,r,n=this.high>>>16,a=65535&this.high,i=this.low>>>16,s=65535&this.low,o=e.high>>>16,u=65535&e.high,l=e.low>>>16,d=65535&e.low,h=0,p=0;return t=0+((r=0+(s+d))>>>16),r&=65535,t+=i+l,p+=t>>>16,t&=65535,p+=a+u,h+=p>>>16,p&=65535,h+=n+o,nd(t<<16|r,(h&=65535)<<16|p,this.unsigned)},nT.subtract=function(e){return ni(e)||(e=nc(e)),this.add(e.neg())},nT.sub=nT.subtract,nT.multiply=function(e){if(this.isZero())return nx;if(ni(e)||(e=nc(e)),nn)return nd(nn.mul(this.low,this.high,e.low,e.high),nn.get_high(),this.unsigned);if(e.isZero())return nx;if(this.eq(nI))return e.isOdd()?nI:nx;if(e.eq(nI))return this.isOdd()?nI:nx;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(ny)&&e.lt(ny))return nl(this.toNumber()*e.toNumber(),this.unsigned);var t,r,n=this.high>>>16,a=65535&this.high,i=this.low>>>16,s=65535&this.low,o=e.high>>>16,u=65535&e.high,l=e.low>>>16,d=65535&e.low,h=0,p=0;return t=0+((r=0+s*d)>>>16),r&=65535,t+=i*d,p+=t>>>16,t&=65535,t+=s*l,p+=t>>>16,t&=65535,p+=a*d,h+=p>>>16,p&=65535,p+=i*l,h+=p>>>16,p&=65535,p+=s*u,h+=p>>>16,p&=65535,h+=n*d+a*l+i*u+s*o,nd(t<<16|r,(h&=65535)<<16|p,this.unsigned)},nT.mul=nT.multiply,nT.divide=function(e){if(ni(e)||(e=nc(e)),e.isZero())throw Error("division by zero");if(nn){var t,r,n;return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?nd((this.unsigned?nn.div_u:nn.div_s)(this.low,this.high,e.low,e.high),nn.get_high(),this.unsigned):this}if(this.isZero())return this.unsigned?nb:nx;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return nb;if(e.gt(this.shru(1)))return nw;n=nb}else{if(this.eq(nI))return e.eq(nv)||e.eq(nS)?nI:e.eq(nI)?nv:(t=this.shr(1).div(e).shl(1)).eq(nx)?e.isNegative()?nv:nS:(r=this.sub(e.mul(t)),n=t.add(r.div(e)));if(e.eq(nI))return this.unsigned?nb:nx;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();n=nx}for(r=this;r.gte(e);){for(var a=Math.ceil(Math.log(t=Math.max(1,Math.floor(r.toNumber()/e.toNumber())))/Math.LN2),i=a<=48?1:nh(2,a-48),s=nl(t),o=s.mul(e);o.isNegative()||o.gt(r);)t-=i,o=(s=nl(t,this.unsigned)).mul(e);s.isZero()&&(s=nv),n=n.add(s),r=r.sub(o)}return n},nT.div=nT.divide,nT.modulo=function(e){return(ni(e)||(e=nc(e)),nn)?nd((this.unsigned?nn.rem_u:nn.rem_s)(this.low,this.high,e.low,e.high),nn.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},nT.mod=nT.modulo,nT.rem=nT.modulo,nT.not=function(){return nd(~this.low,~this.high,this.unsigned)},nT.and=function(e){return ni(e)||(e=nc(e)),nd(this.low&e.low,this.high&e.high,this.unsigned)},nT.or=function(e){return ni(e)||(e=nc(e)),nd(this.low|e.low,this.high|e.high,this.unsigned)},nT.xor=function(e){return ni(e)||(e=nc(e)),nd(this.low^e.low,this.high^e.high,this.unsigned)},nT.shiftLeft=function(e){return(ni(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?nd(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):nd(0,this.low<<e-32,this.unsigned)},nT.shl=nT.shiftLeft,nT.shiftRight=function(e){return(ni(e)&&(e=e.toInt()),0==(e&=63))?this:e<32?nd(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):nd(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},nT.shr=nT.shiftRight,nT.shiftRightUnsigned=function(e){if(ni(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?nd(this.low>>>e|t<<32-e,t>>>e,this.unsigned):32===e?nd(t,0,this.unsigned):nd(t>>>e-32,0,this.unsigned)},nT.shru=nT.shiftRightUnsigned,nT.shr_u=nT.shiftRightUnsigned,nT.toSigned=function(){return this.unsigned?nd(this.low,this.high,!1):this},nT.toUnsigned=function(){return this.unsigned?this:nd(this.low,this.high,!0)},nT.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},nT.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},nT.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},na.fromBytes=function(e,t,r){return r?na.fromBytesLE(e,t):na.fromBytesBE(e,t)},na.fromBytesLE=function(e,t){return new na(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},na.fromBytesBE=function(e,t){return new na(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};let n$=nr.default||nr;function nN(e){return n$.fromString(e,!0,16)}let nE=nN("c3a5c85c97cb3127"),nR=nN("b492b66fbe98f273"),nA=nN("9ae16a3b2f90404f");function n_(e){return e.xor(e.shru(47))}function nO(e,t,r){let n=e.slice(t,t+r);return n$.fromBytes(Array.from(n),!0,!0)}function nF(e,t){return nO(e,t,8)}function nD(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function nP(e,t,r=nN("9ddfea08eb382d69")){let n=e.xor(t).mul(r);n=n.xor(n.shru(47));let a=t.xor(n).mul(r);return(a=a.xor(a.shru(47))).mul(r)}function nM(e,t,r,n){return function(e,t,r,n,a,i){a=a.add(e),i=nD(i.add(a).add(n),21);let s=a;return a=(a=a.add(t)).add(r),i=i.add(nD(a,44)),[a.add(n),i.add(s)]}(nF(e,t),nF(e,t+8),nF(e,t+16),nF(e,t+24),r,n)}function nL(e,t=e.length){let r=n$.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){let r=nA.add(2*t),n=nF(e,0).add(nA),a=nF(e,t-8);return nP(nD(a,37).mul(r).add(n),nD(n,25).add(a).mul(r),r)}if(t>=4){let r=nA.add(2*t);return nP(nO(e,0,4).shl(3).add(t),nO(e,t-4,4),r)}if(t>0){let r=e[0],n=e[t>>1],a=e[t-1];return n_(nA.mul(r+(n<<8)).xor(nE.mul(t+(a<<2)))).mul(nA)}return nA}(e,t):function(e,t=e.length){let r=nA.add(2*t),n=nF(e,0).mul(nR),a=nF(e,8),i=nF(e,t-8).mul(r),s=nF(e,t-16).mul(nA);return nP(nD(n.add(a),43).add(nD(i,30)).add(s),n.add(nD(a.add(nA),18)).add(i),r)}(e,t);if(t<=64)return function(e,t=e.length){let r=nA.add(2*t),n=nF(e,0).mul(nA),a=nF(e,8),i=nF(e,t-8).mul(r),s=nF(e,t-16).mul(nA),o=nD(n.add(a),43).add(nD(i,30)).add(s),u=nP(o,n.add(nD(a.add(nA),18)).add(i),r),l=nF(e,16).mul(r),d=nF(e,24),h=o.add(nF(e,t-32)).mul(r),p=u.add(nF(e,t-24)).mul(r);return nP(nD(l.add(d),43).add(nD(h,30)).add(p),l.add(nD(d.add(n),18)).add(h),r)}(e,t);let n=r,a=r.mul(nR).add(113),i=n_(a.mul(nA).add(113)).mul(nA),s=[n$.UZERO,n$.UZERO],o=[n$.UZERO,n$.UZERO];n=n.mul(nA).add(nF(e,0));let u=0,l=(t-1>>6)*64,d=l+(t-1&63)-63;do n=nD(n.add(a).add(s[0]).add(nF(e,u+8)),37).mul(nR),a=nD(a.add(s[1]).add(nF(e,u+48)),42).mul(nR),n=n.xor(o[1]),a=a.add(s[0]).add(nF(e,u+40)),i=nD(i.add(o[0]),33).mul(nR),s=nM(e,u,s[1].mul(nR),n.add(o[0])),o=nM(e,u+32,i.add(o[1]),a.add(nF(e,u+16))),[i,n]=[n,i],u+=64;while(u!==l)let h=nR.add(i.and(255).shl(1));return u=d,o[0]=o[0].add(t-1&63),s[0]=s[0].add(o[0]),o[0]=o[0].add(s[0]),n=nD(n.add(a).add(s[0]).add(nF(e,u+8)),37).mul(h),a=nD(a.add(s[1]).add(nF(e,u+48)),42).mul(h),n=n.xor(o[1].mul(9)),a=a.add(s[0].mul(9).add(nF(e,u+40))),i=nD(i.add(o[0]),33).mul(h),s=nM(e,u,s[1].mul(h),n.add(o[0])),o=nM(e,u+32,i.add(o[1]),a.add(nF(e,u+16))),[i,n]=[n,i],nP(nP(s[0],o[0],h).add(n_(a).mul(nE)).add(i),nP(s[1],o[1],h).add(n),h)}function nB(e,t){return"string"===t?nW(e):nz([e],t)}function nz(e,t){var r;if("string"===t)throw Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=nj(e)),ey.getBool("DEBUG")&&K(e,t),(r=e)instanceof Float32Array&&"float32"===t||r instanceof Int32Array&&"int32"===t||r instanceof Uint8Array&&"bool"===t)return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let r=0;r<t.length;++r)0!==Math.round(e[r])&&(t[r]=1);return t}throw Error(`Unknown data type ${t}`)}function nU(){return ey.platform.now()}function nV(e,t){return ey.platform.fetch(e,t)}function nW(e,t="utf-8"){return t=t||"utf-8",ey.platform.encode(e,t)}function nG(e,t="utf-8"){return t=t||"utf-8",ey.platform.decode(e,t)}function nH(e){return null!=ey.platform.isTypedArray?ey.platform.isTypedArray(e):ne(e)}function nj(e,t=[],r=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||ec(e)||null==e||nH(e)&&r)t.push(e);else if(Array.isArray(e)||nH(e))for(let n=0;n<e.length;++n)nj(e[n],t,r);else{let n=-1;for(let t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(n=Math.max(n,Number(t)));for(let a=0;a<=n;a++)nj(e[a],t,r)}return t}p(r9,v),p(r9,nt);class nK{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new nq)}profileKernel(e,t,r){let n,a;let i=()=>{n=r()},s=nU();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{for(let e of(i(),n))e.dataSync();a=Promise.resolve({kernelMs:nU()-s})}if(ey.getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<n.length;t++){let r=n[t];r.data().then(t=>{!function(e,t,r){if("float32"===t)for(let t=0;t<e.length;t++){let n=e[t];if(isNaN(n)||!isFinite(n))return console.warn(`Found ${n} in the result of '${r}'`),!0}}(t,r.dtype,e)})}return{kernelName:e,outputs:n,inputs:t,timeMs:a.then(e=>e.kernelMs),extraInfo:a.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:r,timeMs:n,inputs:a,extraInfo:i}=e;r.forEach(e=>{Promise.all([e.data(),n,i]).then(r=>{this.logger.logKernelProfile(t,e,r[0],r[1],a,r[2])})})}}class nq{logKernelProfile(e,t,r,n,a,i){let s="number"==typeof n?z(`${n}ms`,9):n.error,o=z(e,25),u=t.rank,l=t.size,d=z(t.shape.toString(),14),h="";for(let e in a){let r=a[e];if(null!=r){let n=r.shape||t.shape,a=n.length;h+=`${e}: ${a}D ${a>0?n:""} `}}console.log(`%c${o}	%c${s}	%c${u}D ${d}	%c${l}	%c${h}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function nX(e,t,r){return z(Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Z(e)?`'${e}'`:"bool"===r?nY(e):parseFloat(e.toFixed(7)).toString(),t)}function nY(e){return 0===e?"false":"true"}function nQ(e){let t=[];for(let r=0;r<e.length;r+=2)t.push([e[r],e[r+1]]);return t}class nZ{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=_(e),null!=r){let e=r.length;E(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||j(t,this.size),this.strides=ea(e)}set(e,...t){0===t.length&&(t=[0]),E(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let r=this.locToIndex(t);this.values[r]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t])throw Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=this.strides[t]*e[t];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return nJ().makeTensor(this.values,this.shape,this.dtype)}}let nJ=null,n0=null;class n1{constructor(e,t,r,n){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=_(e),this.strides=ea(e),this.dataId=r,this.id=n,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return n0.buffer(this.shape,this.dtype,e)}bufferSync(){return n0.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return ei(this.shape,e,"complex64"===this.dtype)}arraySync(){return ei(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=nJ().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map(e=>nG(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),nJ().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=nJ().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>nG(e))}catch(e){throw Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await nJ().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),nJ().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw Error("Tensor is disposed.")}print(e=!1){return n0.print(this,e)}clone(){return this.throwIfDisposed(),n0.clone(this)}toString(e=!1){return function(e,t,r,n){let a=ea(t),i=function(e,t,r,n){let a=_(t),i=n[n.length-1],s=Array(i).fill(0),o=t.length,u="complex64"===r?nQ(e):e;if(o>1)for(let e=0;e<a/i;e++){let t=e*i;for(let e=0;e<i;e++)s[e]=Math.max(s[e],nX(u[t+e],0,r).length)}return s}(e,t,r,a),s=t.length,o=function e(t,r,n,a,i,s=!0){let o="complex64"===n?2:1,u=r[0],l=r.length;if(0===l)return"complex64"===n?[nX(nQ(t)[0],0,n)]:"bool"===n?[nY(t[0])]:[t[0].toString()];if(1===l){if(u>20){let e=Array.from(t.slice(0,3*o)),r=Array.from(t.slice((u-3)*o,u*o));return"complex64"===n&&(e=nQ(e),r=nQ(r)),["["+e.map((e,t)=>nX(e,i[t],n)).join(", ")+", ..., "+r.map((e,t)=>nX(e,i[u-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?nQ(t):Array.from(t)).map((e,t)=>nX(e,i[t],n)).join(", ")+"]"]}let d=r.slice(1),h=a.slice(1),p=a[0]*o,c=[];if(u>20){for(let r=0;r<3;r++){let a=r*p,s=a+p;c.push(...e(t.slice(a,s),d,n,h,i,!1))}c.push("...");for(let r=u-3;r<u;r++){let a=r*p,s=a+p;c.push(...e(t.slice(a,s),d,n,h,i,r===u-1))}}else for(let r=0;r<u;r++){let a=r*p,s=a+p;c.push(...e(t.slice(a,s),d,n,h,i,r===u-1))}let f=2===l?",":"";c[0]="["+(u>0?c[0]+f:"");for(let e=1;e<c.length-1;e++)c[e]=" "+c[e]+f;let m=",\n";for(let e=2;e<l;e++)m+="\n";return c[c.length-1]=" "+c[c.length-1]+"]"+(s?"":m),c}(e,t,r,a,i),u=["Tensor"];return n&&(u.push(`  dtype: ${r}`),u.push(`  rank: ${s}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),n0.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),nJ().makeVariable(this,e,t,r)}}function n2(){return eA("Tensor",()=>n1)}Object.defineProperty(n1,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),n2();class n3 extends n1{constructor(e,t,r,n){super(e.shape,e.dtype,e.dataId,n),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!D(e.shape,this.shape))throw Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);nJ().disposeTensor(this),this.dataId=e.dataId,nJ().incRef(this,null)}dispose(){nJ().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(n3,Symbol.hasInstance,{value:e=>e instanceof n1&&null!=e.assign&&e.assign instanceof Function}),(TS=TG||(TG={})).R0="R0",TS.R1="R1",TS.R2="R2",TS.R3="R3",TS.R4="R4",TS.R5="R5",TS.R6="R6",(Tk=TH||(TH={})).float32="float32",Tk.int32="int32",Tk.bool="int32",Tk.complex64="complex64",(TC=Tj||(Tj={})).float32="float32",TC.int32="int32",TC.bool="bool",TC.complex64="complex64",(TI=TK||(TK={})).float32="float32",TI.int32="float32",TI.bool="float32",TI.complex64="complex64",(TT=Tq||(Tq={})).float32="complex64",TT.int32="complex64",TT.bool="complex64",TT.complex64="complex64";let n4={float32:TK,int32:TH,bool:Tj,complex64:Tq};function n6(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw Error(`Can not upcast ${e} with ${t}`)}return n4[e][t]}function n5(e){return n6(e,"int32")}function n8(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function n7(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function n9(e,t){if(e.dtype===t.dtype)return[e,t];let r=n6(e.dtype,t.dtype);return[e.cast(r),t.cast(r)]}function ae(e){let t=[];return function e(t,r,n){if(null!=t){if(t instanceof n1){r.push(t);return}if(Array.isArray(t)||"object"==typeof t)for(let a in t){let i=t[a];n.has(i)||(n.add(i),e(i,r,n))}}}(e,t,new Set),t}function at(e){return null!=e.kernelName}class ar{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}}class an{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ar}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(r2(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(null==this.registryFactory[e])throw Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new nK(this.backendInstance),!0}setupRegisteredKernels(){r8(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){r8(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw Error(`Cannot initialize backend ${e}, no registration found.`);try{let r=t.factory();if(!r||r instanceof x||"function"!=typeof r.then)return this.registry[e]=r,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,n=r.then(r=>!(t<this.pendingBackendInitId)&&(this.registry[e]=r,this.pendingBackendInit=null,!0)).catch(r=>!(t<this.pendingBackendInitId)&&(this.pendingBackendInit=null,r2(`Initialization of backend ${e} failed`),r2(r.stack||r.message),!1));return this.pendingBackendInit=n,{success:n,asyncInit:!0}}}catch(t){return r2(`Initialization of backend ${e} failed`),r2(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let r=e[t],{success:n,asyncInit:a}=this.initializeBackend(r);if(a||n)return{name:r,asyncInit:a}}throw Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let r=this.state.tensorInfo.get(t),n=r.backend,a=this.readSync(t),i=n.refCount(t);n.disposeData(t,!0),r.backend=e,e.move(t,a,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r,n=null;if(null==t){if("function"!=typeof e)throw Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>((r=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,r){e();try{let e=r();return t(),e}catch(e){throw t(),e}}nextTensorId(){return an.nextTensorId++}nextVariableId(){return an.nextVariableId++}clone(e){let t=ai.runKernel(tT,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],e=>({x:()=>ai.runKernel(eQ,{x:e},{dtype:"float32"})}),[],{}),t}runKernel(e,t,r){if(null==this.backendName&&this.backend,!(null!=r5(e,this.backendName)))throw Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){let n=this.backend.numDataIds(),a=0;r.forEach(e=>{a+="complex64"===e.dtype?3:1});let i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=n-t-a-i;if(s>0)throw Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${e}'`)}runKernelFunc(e){let t,r,n,a;let i=[],s=this.isTapeOn(),o=this.state.numBytes,u=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let l=at(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(at(e)){let{kernelName:t,inputs:a,attrs:o}=e;null==this.backendName&&this.backend;let u=r5(t,this.backendName);E(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),r=()=>{let e=this.backend.numDataIds(),r=Array.isArray(n=u.kernelFunc({inputs:a,attrs:o,backend:this.backend}))?n:[n];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,r);let l=r.map(e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e));if(s){let e=this.getTensorsForGradient(t,a,l);i=this.saveTensorsForBackwardMode(e)}return l}}else{let{forwardFunc:t}=e,a=e=>{s&&(i=e.map(e=>this.keep(this.clone(e))))};r=()=>{let e=this.backend.numDataIds(),r=Array.isArray(n=this.tidy(()=>t(this.backend,a)))?n:[n];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,r),r}}let{inputs:d,attrs:h}=e,p=at(e)?null:e.backwardsFunc;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(a=this.profiler.profileKernel(l,d,()=>r()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(a),t=a.outputs):t=r()}),s&&this.addTapeNode(l,d,t,p,i,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-u,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(e=>null!=d[e]?d[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:a.timeMs,extraInfo:a.extraInfo}),Array.isArray(n)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,r){let n=r6.get(e);if(null!=n){let e;let a=n.inputsToSave||[],i=n.outputsToSave||[];n.saveAllInputs?(E(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),e=Object.keys(t).map(e=>t[e])):e=a.map(e=>t[e]);let s=r.filter((e,t)=>i[t]);return e.concat(s)}return[]}makeTensor(e,t,r,n){if(null==e)throw Error("Values passed to engine.makeTensor() are null");r=r||"float32",n=n||this.backend;let a=e;"string"===r&&Z(e[0])&&(a=e.map(e=>nW(e)));let i=n.write(a,t,r),s=new n1(t,r,i,this.nextTensorId());if(this.trackTensor(s,n),"string"===r){let e=this.state.tensorInfo.get(i),t=Q(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return s}makeTensorFromDataId(e,t,r,n){let a={dataId:e,shape:t,dtype:r=r||"float32"};return this.makeTensorFromTensorInfo(a,n)}makeTensorFromTensorInfo(e,t){let{dataId:r,shape:n,dtype:a}=e,i=new n1(n,a,r,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,r,n){r=r||this.nextVariableId().toString(),null!=n&&n!==e.dtype&&(e=e.cast(n));let a=new n3(e,t,r,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*Y(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof n3||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*Y(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,r=this.state.numTensors;for(let n of(this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r,this.state.activeProfile.kernels))n.kernelTimeMs=await n.kernelTimeMs,n.extraInfo=await n.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,r,n,a,i){let s={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:a},o=r6.get(e);null!=o&&(n=o.gradFunc),null!=n&&(s.gradient=e=>(e=e.map((e,t)=>{if(null==e){let e=r[t],n=eu(e.size,e.dtype);return this.makeTensor(n,e.shape,e.dtype)}return e}),n(e.length>1?e:e[0],a,i))),this.state.activeTape.push(s)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=ae(e),r=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];t.kept||r.has(t.id)||t.dispose()}let n=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==n.id||this.track(e)})}gradients(e,t,r,n=!1){if(E(t.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));E(a instanceof n1,()=>"The result y returned by f() must be a tensor.");let i=/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n={},a={};for(let e=0;e<t.length;e++)n[t[e].id]=!0;for(let r=0;r<e.length;r++){let i=e[r],s=i.inputs;for(let e in s){let r=s[e],o=!1;for(let e=0;e<t.length;e++)if(n[r.id]){i.outputs.forEach(e=>n[e.id]=!0),o=!0,a[i.id]=!0;break}if(o)break}}let i={};i[r.id]=!0;let s={};for(let t=e.length-1;t>=0;t--){let r=e[t],n=r.inputs;for(let e=0;e<r.outputs.length;e++)if(i[r.outputs[e].id]){for(let e in n)i[n[e].id]=!0,s[r.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let r=e[t];if(a[r.id]&&s[r.id]){let e={};for(let t in r.inputs){let a=r.inputs[t];n[a.id]&&(e[t]=a)}let t=Object.assign({},r);t.inputs=e,t.outputs=r.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!n&&0===i.length&&t.length>0)throw Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let e={};e[a.id]=null==r?function(e){let t=eo(_(e),"float32");return ai.makeTensor(t,e,"float32")}(a.shape):r,function(e,t,r,n){for(let a=t.length-1;a>=0;a--){let i=t[a],s=[];if(i.outputs.forEach(t=>{let r=e[t.id];null!=r?s.push(r):s.push(null)}),null==i.gradient)throw Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);let o=i.gradient(s);for(let t in i.inputs){if(!(t in o))throw Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let a=r(()=>o[t]());if("float32"!==a.dtype)throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);let s=i.inputs[t];if(!D(a.shape,s.shape))throw Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${s.shape}'`);if(null==e[s.id])e[s.id]=a;else{let t=e[s.id];e[s.id]=n(t,a),t.dispose()}}}}(e,i,e=>this.tidy(e),as);let n=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(let t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:n}})}customGrad(e){return E(er(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let r;E(t.every(e=>e instanceof n1),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n={};return t.forEach((e,t)=>{n[t]=e}),this.runKernelFunc({forwardFunc:(n,a)=>(E((r=e(...[...t,a])).value instanceof n1,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),E(er(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(e,n)=>{let a=r.gradFunc(e,n),i=Array.isArray(a)?a:[a];E(i.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),E(i.every(e=>e instanceof n1),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let s={};return i.forEach((e,t)=>{s[t]=()=>e}),s},inputs:n})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=nU(),r=await this.backend.time(e);return r.wallMs=nU()-t,r}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){for(let e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ar,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function aa(){let e=eR();if(null==e._tfengine){let t=new em(e);e._tfengine=new an(t)}return ey=e._tfengine.ENV,nJ=()=>e._tfengine,e._tfengine}an.nextTensorId=0,an.nextVariableId=0;let ai=aa();function as(e,t){return ai.runKernel("Add",{a:e,b:t})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ao={};function au(e){t=e}function al(e){if(void 0!==t)return t;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ad(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}u(ao,"mockIsMobile",function(){return au}),u(ao,"isMobile",function(){return al}),u(ao,"isBrowser",function(){return ad});let ah=ey;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ap(e,t){let r=e;if(nH(e))return"string"===t?[]:[e.length];if(n8(e)){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(n7(e))return[e.buffer.size/(null==t?4:Y(t))];if(!Array.isArray(e))return[];let n=[];for(;Array.isArray(r)||nH(r)&&"string"!==t;)n.push(r.length),r=r[0];return Array.isArray(e)&&ey.getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,r,n){if(n=n||[],!Array.isArray(t)&&!nH(t)){E(0===r.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${r[0]} elements`);return}E(r.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),E(t.length===r[0],()=>`Element arr[${n.join("][")}] should have ${r[0]} elements, but has ${t.length} elements`);let a=r.slice(1);for(let r=0;r<t.length;++r)e(t[r],a,n.concat(r))}(e,n,[]),n}function ac(e,t,r,n){if("string_or_numeric"!==e){if(null==e)throw Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw Error(`Argument '${r}' passed to '${n}' must be ${e} tensor, but got ${t} tensor`)}}function af(e,t,r,n="numeric"){if(e instanceof n2())return ac(n,e.dtype,t,r),e;let a=et(e);if("string"!==a&&["bool","int32","float32"].indexOf(n)>=0&&(a=n),ac(n,a,t,r),null==e||!nH(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let n=null==e?"null":e.constructor.name;throw Error(`Argument '${t}' passed to '${r}' must be a Tensor or TensorLike, but got '${n}'`)}let i=ap(e,a);nH(e)||Array.isArray(e)||(e=[e]);let s="string"!==a?nz(e,a):nj(e,[],!0);return ai.makeTensor(s,i,a)}function am(e,t,r,n="numeric"){if(!Array.isArray(e))throw Error(`Argument ${t} passed to ${r} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>af(e,`${t}[${a}]`,r,n))}ah.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),ah.registerFlag("IS_BROWSER",()=>ad()),ah.registerFlag("IS_NODE",()=>void 0!==ex&&void 0!==ex.versions&&void 0!==ex.versions.node),ah.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),ah.registerFlag("IS_SAFARI",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor)),ah.registerFlag("PROD",()=>!1),ah.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>ah.getBool("DEBUG")),ah.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),ah.registerFlag("IS_TEST",()=>!1),ah.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>ah.getBool("DEBUG")),ah.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),ah.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),ah.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ag="__op";function ay(e){let t=Object.keys(e);if(1!==t.length)throw Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let r=t[0],n=e[r];r.endsWith("_")&&(r=r.substring(0,r.length-1));let a=(...e)=>{ai.startScope(r);try{let t=n(...e);return ec(t)&&console.error("Cannot return a Promise inside of tidy."),ai.endScope(t),t}catch(e){throw ai.endScope(null),e}};return Object.defineProperty(a,"name",{value:r+=ag,configurable:!0}),a}let ax=ay({complex_:function(e,t){let r=af(e,"real","complex"),n=af(t,"imag","complex");return R(r.shape,n.shape,`real and imag shapes, ${r.shape} and ${n.shape}, must match in call to tf.complex().`),ai.runKernel(e0,{real:r,imag:n})}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(e,t,r,n){if(null==n)n=et(e);else if("complex64"===n)throw Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(n7(e)||n8(e)){if("float32"!==n&&"int32"!==n)throw Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return ai.backend.createTensorFromGPUData(e,t||r,n)}if(!nH(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ed(t);let e=_(t),n=_(r);E(e===n,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${n}`);for(let e=0;e<r.length;++e){let n=r[e],a=e!==r.length-1||n!==_(t.slice(e));E(r[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${r}) does not match the provided shape (${t}). `)}}return nH(e)||Array.isArray(e)||(e=[e]),t=t||r,e="string"!==n?nz(e,n):nj(e,[],!0),ai.makeTensor(e,t,n)}function av(e,t,r){let n=ap(e,r);return ab(e,t,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let aw={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class aS{static join(e){return new aS(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e||(e instanceof Array||(e=[e]),0===(e=e.map(e=>nH(e)?e.buffer:e)).length))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){let n=e[r];r!==e.length-1&&n.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+n.byteLength;this.shards.push({buffer:n,start:t,end:a}),t=a}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length||(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e))return new ArrayBuffer(0);let r=this.findShardForByte(e);if(-1===r)throw Error(`Could not find start shard for byte ${e}`);let n=new ArrayBuffer(t-e),a=new Uint8Array(n),i=0;for(let n=r;n<this.shards.length;n++){let r=this.shards[n],s=e+i-r.start,o=i,u=Math.min(t,r.end)-r.start,l=new Uint8Array(r.buffer,s,u-s);if(a.set(l,o),i+=l.length,t<r.end)break}return n}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return -1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;let r=function(e,t){let r=0,n=e.length;for(;r<=n;){let a=Math.floor((n-r)/2)+r,i=t(e[a]);if(0===i)return a;i<0?n=a:r=a+1}return -1}(this.shards,t);return -1===r?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function ak(e,t){return ai.tidy(e,t)}function aC(e){ae(e).forEach(e=>e.dispose())}function aI(e){return ai.keep(e)}function aT(){return ai.backendName}function a$(e,t,r=1){return ai.registerBackend(e,t,r)}function aN(){return ai.backend}TX=function(e){var t,r,n=function(e){var t=e.length;if(t%4>0)throw Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");-1===r&&(r=t);var n=r===t?0:4-r%4;return[r,n]}(e),a=n[0],i=n[1],s=new aA((a+i)*3/4-i),o=0,u=i>0?a-4:a;for(r=0;r<u;r+=4)t=aR[e.charCodeAt(r)]<<18|aR[e.charCodeAt(r+1)]<<12|aR[e.charCodeAt(r+2)]<<6|aR[e.charCodeAt(r+3)],s[o++]=t>>16&255,s[o++]=t>>8&255,s[o++]=255&t;return 2===i&&(t=aR[e.charCodeAt(r)]<<2|aR[e.charCodeAt(r+1)]>>4,s[o++]=255&t),1===i&&(t=aR[e.charCodeAt(r)]<<10|aR[e.charCodeAt(r+1)]<<4|aR[e.charCodeAt(r+2)]>>2,s[o++]=t>>8&255,s[o++]=255&t),s},TY=function(e){for(var t,r=e.length,n=r%3,a=[],i=0,s=r-n;i<s;i+=16383)a.push(function(e,t,r){for(var n,a=[],i=t;i<r;i+=3)a.push(aE[(n=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]))>>18&63]+aE[n>>12&63]+aE[n>>6&63]+aE[63&n]);return a.join("")}(e,i,i+16383>s?s:i+16383));return 1===n?a.push(aE[(t=e[r-1])>>2]+aE[t<<4&63]+"=="):2===n&&a.push(aE[(t=(e[r-2]<<8)+e[r-1])>>10]+aE[t>>4&63]+aE[t<<2&63]+"="),a.join("")};for(var aE=[],aR=[],aA="undefined"!=typeof Uint8Array?Uint8Array:Array,a_="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",aO=0,aF=a_.length;aO<aF;++aO)aE[aO]=a_[aO],aR[a_.charCodeAt(aO)]=aO;aR["-".charCodeAt(0)]=62,aR["_".charCodeAt(0)]=63,TQ=function(e,t,r,n,a){var i,s,o=8*a-n-1,u=(1<<o)-1,l=u>>1,d=-7,h=r?a-1:0,p=r?-1:1,c=e[t+h];for(h+=p,i=c&(1<<-d)-1,c>>=-d,d+=o;d>0;i=256*i+e[t+h],h+=p,d-=8);for(s=i&(1<<-d)-1,i>>=-d,d+=n;d>0;s=256*s+e[t+h],h+=p,d-=8);if(0===i)i=1-l;else{if(i===u)return s?NaN:1/0*(c?-1:1);s+=Math.pow(2,n),i-=l}return(c?-1:1)*s*Math.pow(2,i-n)},TZ=function(e,t,r,n,a,i){var s,o,u,l=8*i-a-1,d=(1<<l)-1,h=d>>1,p=23===a?5960464477539062e-23:0,c=n?0:i-1,f=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(isNaN(t=Math.abs(t))||t===1/0?(o=isNaN(t)?1:0,s=d):(s=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-s))<1&&(s--,u*=2),s+h>=1?t+=p/u:t+=p*Math.pow(2,1-h),t*u>=2&&(s++,u/=2),s+h>=d?(o=0,s=d):s+h>=1?(o=(t*u-1)*Math.pow(2,a),s+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,a),s=0));a>=8;e[r+c]=255&o,c+=f,o/=256,a-=8);for(s=s<<a|o,l+=a;l>0;e[r+c]=255&s,c+=f,s/=256,l-=8);e[r+c-f]|=128*m};let aD="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function aP(e){if(e>2147483647)throw RangeError('The value "'+e+'" is invalid for option "size"');let t=new Uint8Array(e);return Object.setPrototypeOf(t,aM.prototype),t}function aM(e,t,r){if("number"==typeof e){if("string"==typeof t)throw TypeError('The "string" argument must be of type string. Received type number');return az(e)}return aL(e,t,r)}function aL(e,t,r){if("string"==typeof e)return function(e,t){if(("string"!=typeof t||""===t)&&(t="utf8"),!aM.isEncoding(t))throw TypeError("Unknown encoding: "+t);let r=0|aG(e,t),n=aP(r),a=n.write(e,t);return a!==r&&(n=n.slice(0,a)),n}(e,t);if(ArrayBuffer.isView(e))return function(e){if(ia(e,Uint8Array)){let t=new Uint8Array(e);return aV(t.buffer,t.byteOffset,t.byteLength)}return aU(e)}(e);if(null==e)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(ia(e,ArrayBuffer)||e&&ia(e.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(ia(e,SharedArrayBuffer)||e&&ia(e.buffer,SharedArrayBuffer)))return aV(e,t,r);if("number"==typeof e)throw TypeError('The "value" argument must not be of type number. Received type number');let n=e.valueOf&&e.valueOf();if(null!=n&&n!==e)return aM.from(n,t,r);let a=function(e){var t;if(aM.isBuffer(e)){let t=0|aW(e.length),r=aP(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||(t=e.length)!=t?aP(0):aU(e):"Buffer"===e.type&&Array.isArray(e.data)?aU(e.data):void 0}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return aM.from(e[Symbol.toPrimitive]("string"),t,r);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function aB(e){if("number"!=typeof e)throw TypeError('"size" argument must be of type number');if(e<0)throw RangeError('The value "'+e+'" is invalid for option "size"')}function az(e){return aB(e),aP(e<0?0:0|aW(e))}function aU(e){let t=e.length<0?0:0|aW(e.length),r=aP(t);for(let n=0;n<t;n+=1)r[n]=255&e[n];return r}function aV(e,t,r){let n;if(t<0||e.byteLength<t)throw RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(n=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),aM.prototype),n}function aW(e){if(e>=2147483647)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|e}function aG(e,t){if(aM.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||ia(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);let r=e.length,n=arguments.length>2&&!0===arguments[2];if(!n&&0===r)return 0;let a=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return ie(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return it(e).length;default:if(a)return n?-1:ie(e).length;t=(""+t).toLowerCase(),a=!0}}function aH(e,t,r){let n=!1;if((void 0===t||t<0)&&(t=0),t>this.length||((void 0===r||r>this.length)&&(r=this.length),r<=0||(r>>>=0)<=(t>>>=0)))return"";for(e||(e="utf8");;)switch(e){case"hex":return function(e,t,r){let n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);let a="";for(let n=t;n<r;++n)a+=ii[e[n]];return a}(this,t,r);case"utf8":case"utf-8":return aX(this,t,r);case"ascii":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let a=t;a<r;++a)n+=String.fromCharCode(127&e[a]);return n}(this,t,r);case"latin1":case"binary":return function(e,t,r){let n="";r=Math.min(e.length,r);for(let a=t;a<r;++a)n+=String.fromCharCode(e[a]);return n}(this,t,r);case"base64":var a,i;return a=t,i=r,0===a&&i===this.length?TY(this):TY(this.slice(a,i));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(e,t,r){let n=e.slice(t,r),a="";for(let e=0;e<n.length-1;e+=2)a+=String.fromCharCode(n[e]+256*n[e+1]);return a}(this,t,r);default:if(n)throw TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function aj(e,t,r){let n=e[t];e[t]=e[r],e[r]=n}function aK(e,t,r,n,a){var i;if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),(i=r=+r)!=i&&(r=a?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(a)return -1;r=e.length-1}else if(r<0){if(!a)return -1;r=0}if("string"==typeof t&&(t=aM.from(t,n)),aM.isBuffer(t))return 0===t.length?-1:aq(e,t,r,n,a);if("number"==typeof t)return(t&=255,"function"==typeof Uint8Array.prototype.indexOf)?a?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):aq(e,[t],r,n,a);throw TypeError("val must be string, number or Buffer")}function aq(e,t,r,n,a){let i,s=1,o=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;s=2,o/=2,u/=2,r/=2}function l(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(a){let n=-1;for(i=r;i<o;i++)if(l(e,i)===l(t,-1===n?0:i-n)){if(-1===n&&(n=i),i-n+1===u)return n*s}else -1!==n&&(i-=i-n),n=-1}else for(r+u>o&&(r=o-u),i=r;i>=0;i--){let r=!0;for(let n=0;n<u;n++)if(l(e,i+n)!==l(t,n)){r=!1;break}if(r)return i}return -1}function aX(e,t,r){r=Math.min(e.length,r);let n=[],a=t;for(;a<r;){let t=e[a],i=null,s=t>239?4:t>223?3:t>191?2:1;if(a+s<=r){let r,n,o,u;switch(s){case 1:t<128&&(i=t);break;case 2:(192&(r=e[a+1]))==128&&(u=(31&t)<<6|63&r)>127&&(i=u);break;case 3:r=e[a+1],n=e[a+2],(192&r)==128&&(192&n)==128&&(u=(15&t)<<12|(63&r)<<6|63&n)>2047&&(u<55296||u>57343)&&(i=u);break;case 4:r=e[a+1],n=e[a+2],o=e[a+3],(192&r)==128&&(192&n)==128&&(192&o)==128&&(u=(15&t)<<18|(63&r)<<12|(63&n)<<6|63&o)>65535&&u<1114112&&(i=u)}}null===i?(i=65533,s=1):i>65535&&(i-=65536,n.push(i>>>10&1023|55296),i=56320|1023&i),n.push(i),a+=s}return function(e){let t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);let r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}function aY(e,t,r){if(e%1!=0||e<0)throw RangeError("offset is not uint");if(e+t>r)throw RangeError("Trying to access beyond buffer length")}function aQ(e,t,r,n,a,i){if(!aM.isBuffer(e))throw TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<i)throw RangeError('"value" argument is out of bounds');if(r+n>e.length)throw RangeError("Index out of range")}function aZ(e,t,r,n,a){a5(t,n,a,e,r,7);let i=Number(t&BigInt(4294967295));e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,r}function aJ(e,t,r,n,a){a5(t,n,a,e,r,7);let i=Number(t&BigInt(4294967295));e[r+7]=i,i>>=8,e[r+6]=i,i>>=8,e[r+5]=i,i>>=8,e[r+4]=i;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=s,s>>=8,e[r+2]=s,s>>=8,e[r+1]=s,s>>=8,e[r]=s,r+8}function a0(e,t,r,n,a,i){if(r+n>e.length||r<0)throw RangeError("Index out of range")}function a1(e,t,r,n,a){return t=+t,r>>>=0,a||a0(e,t,r,4,34028234663852886e22,-34028234663852886e22),TZ(e,t,r,n,23,4),r+4}function a2(e,t,r,n,a){return t=+t,r>>>=0,a||a0(e,t,r,8,17976931348623157e292,-17976931348623157e292),TZ(e,t,r,n,52,8),r+8}aM.TYPED_ARRAY_SUPPORT=function(){try{let e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),aM.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(aM.prototype,"parent",{enumerable:!0,get:function(){if(aM.isBuffer(this))return this.buffer}}),Object.defineProperty(aM.prototype,"offset",{enumerable:!0,get:function(){if(aM.isBuffer(this))return this.byteOffset}}),aM.poolSize=8192,aM.from=function(e,t,r){return aL(e,t,r)},Object.setPrototypeOf(aM.prototype,Uint8Array.prototype),Object.setPrototypeOf(aM,Uint8Array),aM.alloc=function(e,t,r){return(aB(e),e<=0)?aP(e):void 0!==t?"string"==typeof r?aP(e).fill(t,r):aP(e).fill(t):aP(e)},aM.allocUnsafe=function(e){return az(e)},aM.allocUnsafeSlow=function(e){return az(e)},aM.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==aM.prototype},aM.compare=function(e,t){if(ia(e,Uint8Array)&&(e=aM.from(e,e.offset,e.byteLength)),ia(t,Uint8Array)&&(t=aM.from(t,t.offset,t.byteLength)),!aM.isBuffer(e)||!aM.isBuffer(t))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,n=t.length;for(let a=0,i=Math.min(r,n);a<i;++a)if(e[a]!==t[a]){r=e[a],n=t[a];break}return r<n?-1:n<r?1:0},aM.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},aM.concat=function(e,t){let r;if(!Array.isArray(e))throw TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return aM.alloc(0);if(void 0===t)for(r=0,t=0;r<e.length;++r)t+=e[r].length;let n=aM.allocUnsafe(t),a=0;for(r=0;r<e.length;++r){let t=e[r];if(ia(t,Uint8Array))a+t.length>n.length?(aM.isBuffer(t)||(t=aM.from(t)),t.copy(n,a)):Uint8Array.prototype.set.call(n,t,a);else if(aM.isBuffer(t))t.copy(n,a);else throw TypeError('"list" argument must be an Array of Buffers');a+=t.length}return n},aM.byteLength=aG,aM.prototype._isBuffer=!0,aM.prototype.swap16=function(){let e=this.length;if(e%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)aj(this,t,t+1);return this},aM.prototype.swap32=function(){let e=this.length;if(e%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)aj(this,t,t+3),aj(this,t+1,t+2);return this},aM.prototype.swap64=function(){let e=this.length;if(e%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)aj(this,t,t+7),aj(this,t+1,t+6),aj(this,t+2,t+5),aj(this,t+3,t+4);return this},aM.prototype.toString=function(){let e=this.length;return 0===e?"":0==arguments.length?aX(this,0,e):aH.apply(this,arguments)},aM.prototype.toLocaleString=aM.prototype.toString,aM.prototype.equals=function(e){if(!aM.isBuffer(e))throw TypeError("Argument must be a Buffer");return this===e||0===aM.compare(this,e)},aM.prototype.inspect=function(){let e="";return e=this.toString("hex",0,50).replace(/(.{2})/g,"$1 ").trim(),this.length>50&&(e+=" ... "),"<Buffer "+e+">"},aD&&(aM.prototype[aD]=aM.prototype.inspect),aM.prototype.compare=function(e,t,r,n,a){if(ia(e,Uint8Array)&&(e=aM.from(e,e.offset,e.byteLength)),!aM.isBuffer(e))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===a&&(a=this.length),t<0||r>e.length||n<0||a>this.length)throw RangeError("out of range index");if(n>=a&&t>=r)return 0;if(n>=a)return -1;if(t>=r)return 1;if(t>>>=0,r>>>=0,n>>>=0,a>>>=0,this===e)return 0;let i=a-n,s=r-t,o=Math.min(i,s),u=this.slice(n,a),l=e.slice(t,r);for(let e=0;e<o;++e)if(u[e]!==l[e]){i=u[e],s=l[e];break}return i<s?-1:s<i?1:0},aM.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},aM.prototype.indexOf=function(e,t,r){return aK(this,e,t,r,!0)},aM.prototype.lastIndexOf=function(e,t,r){return aK(this,e,t,r,!1)},aM.prototype.write=function(e,t,r,n){var a,i,s,o,u,l,d,h;if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else if(isFinite(t))t>>>=0,isFinite(r)?(r>>>=0,void 0===n&&(n="utf8")):(n=r,r=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");let p=this.length-t;if((void 0===r||r>p)&&(r=p),e.length>0&&(r<0||t<0)||t>this.length)throw RangeError("Attempt to write outside buffer bounds");n||(n="utf8");let c=!1;for(;;)switch(n){case"hex":return function(e,t,r,n){let a;r=Number(r)||0;let i=e.length-r;n?(n=Number(n))>i&&(n=i):n=i;let s=t.length;for(n>s/2&&(n=s/2),a=0;a<n;++a){let n=parseInt(t.substr(2*a,2),16);if(n!=n)break;e[r+a]=n}return a}(this,e,t,r);case"utf8":case"utf-8":return a=t,i=r,ir(ie(e,this.length-a),this,a,i);case"ascii":case"latin1":case"binary":return s=t,o=r,ir(function(e){let t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(e),this,s,o);case"base64":return u=t,l=r,ir(it(e),this,u,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return d=t,h=r,ir(function(e,t){let r,n;let a=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)n=(r=e.charCodeAt(i))>>8,a.push(r%256),a.push(n);return a}(e,this.length-d),this,d,h);default:if(c)throw TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),c=!0}},aM.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},aM.prototype.slice=function(e,t){let r=this.length;e=~~e,t=void 0===t?r:~~t,e<0?(e+=r)<0&&(e=0):e>r&&(e=r),t<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);let n=this.subarray(e,t);return Object.setPrototypeOf(n,aM.prototype),n},aM.prototype.readUintLE=aM.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||aY(e,t,this.length);let n=this[e],a=1,i=0;for(;++i<t&&(a*=256);)n+=this[e+i]*a;return n},aM.prototype.readUintBE=aM.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||aY(e,t,this.length);let n=this[e+--t],a=1;for(;t>0&&(a*=256);)n+=this[e+--t]*a;return n},aM.prototype.readUint8=aM.prototype.readUInt8=function(e,t){return e>>>=0,t||aY(e,1,this.length),this[e]},aM.prototype.readUint16LE=aM.prototype.readUInt16LE=function(e,t){return e>>>=0,t||aY(e,2,this.length),this[e]|this[e+1]<<8},aM.prototype.readUint16BE=aM.prototype.readUInt16BE=function(e,t){return e>>>=0,t||aY(e,2,this.length),this[e]<<8|this[e+1]},aM.prototype.readUint32LE=aM.prototype.readUInt32LE=function(e,t){return e>>>=0,t||aY(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},aM.prototype.readUint32BE=aM.prototype.readUInt32BE=function(e,t){return e>>>=0,t||aY(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},aM.prototype.readBigUInt64LE=is(function(e){a8(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&a7(e,this.length-8);let n=t+256*this[++e]+65536*this[++e]+16777216*this[++e],a=this[++e]+256*this[++e]+65536*this[++e]+16777216*r;return BigInt(n)+(BigInt(a)<<BigInt(32))}),aM.prototype.readBigUInt64BE=is(function(e){a8(e>>>=0,"offset");let t=this[e],r=this[e+7];(void 0===t||void 0===r)&&a7(e,this.length-8);let n=16777216*t+65536*this[++e]+256*this[++e]+this[++e],a=16777216*this[++e]+65536*this[++e]+256*this[++e]+r;return(BigInt(n)<<BigInt(32))+BigInt(a)}),aM.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||aY(e,t,this.length);let n=this[e],a=1,i=0;for(;++i<t&&(a*=256);)n+=this[e+i]*a;return n>=(a*=128)&&(n-=Math.pow(2,8*t)),n},aM.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||aY(e,t,this.length);let n=t,a=1,i=this[e+--n];for(;n>0&&(a*=256);)i+=this[e+--n]*a;return i>=(a*=128)&&(i-=Math.pow(2,8*t)),i},aM.prototype.readInt8=function(e,t){return(e>>>=0,t||aY(e,1,this.length),128&this[e])?-((255-this[e]+1)*1):this[e]},aM.prototype.readInt16LE=function(e,t){e>>>=0,t||aY(e,2,this.length);let r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},aM.prototype.readInt16BE=function(e,t){e>>>=0,t||aY(e,2,this.length);let r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},aM.prototype.readInt32LE=function(e,t){return e>>>=0,t||aY(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},aM.prototype.readInt32BE=function(e,t){return e>>>=0,t||aY(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},aM.prototype.readBigInt64LE=is(function(e){a8(e>>>=0,"offset");let t=this[e],r=this[e+7];return(void 0===t||void 0===r)&&a7(e,this.length-8),(BigInt(this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24))<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+16777216*this[++e])}),aM.prototype.readBigInt64BE=is(function(e){a8(e>>>=0,"offset");let t=this[e],r=this[e+7];return(void 0===t||void 0===r)&&a7(e,this.length-8),(BigInt((t<<24)+65536*this[++e]+256*this[++e]+this[++e])<<BigInt(32))+BigInt(16777216*this[++e]+65536*this[++e]+256*this[++e]+r)}),aM.prototype.readFloatLE=function(e,t){return e>>>=0,t||aY(e,4,this.length),TQ(this,e,!0,23,4)},aM.prototype.readFloatBE=function(e,t){return e>>>=0,t||aY(e,4,this.length),TQ(this,e,!1,23,4)},aM.prototype.readDoubleLE=function(e,t){return e>>>=0,t||aY(e,8,this.length),TQ(this,e,!0,52,8)},aM.prototype.readDoubleBE=function(e,t){return e>>>=0,t||aY(e,8,this.length),TQ(this,e,!1,52,8)},aM.prototype.writeUintLE=aM.prototype.writeUIntLE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;aQ(this,e,t,r,n,0)}let a=1,i=0;for(this[t]=255&e;++i<r&&(a*=256);)this[t+i]=e/a&255;return t+r},aM.prototype.writeUintBE=aM.prototype.writeUIntBE=function(e,t,r,n){if(e=+e,t>>>=0,r>>>=0,!n){let n=Math.pow(2,8*r)-1;aQ(this,e,t,r,n,0)}let a=r-1,i=1;for(this[t+a]=255&e;--a>=0&&(i*=256);)this[t+a]=e/i&255;return t+r},aM.prototype.writeUint8=aM.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,1,255,0),this[t]=255&e,t+1},aM.prototype.writeUint16LE=aM.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},aM.prototype.writeUint16BE=aM.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},aM.prototype.writeUint32LE=aM.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},aM.prototype.writeUint32BE=aM.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},aM.prototype.writeBigUInt64LE=is(function(e,t=0){return aZ(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),aM.prototype.writeBigUInt64BE=is(function(e,t=0){return aJ(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),aM.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);aQ(this,e,t,r,n-1,-n)}let a=0,i=1,s=0;for(this[t]=255&e;++a<r&&(i*=256);)e<0&&0===s&&0!==this[t+a-1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},aM.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t>>>=0,!n){let n=Math.pow(2,8*r-1);aQ(this,e,t,r,n-1,-n)}let a=r-1,i=1,s=0;for(this[t+a]=255&e;--a>=0&&(i*=256);)e<0&&0===s&&0!==this[t+a+1]&&(s=1),this[t+a]=(e/i>>0)-s&255;return t+r},aM.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},aM.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},aM.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},aM.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},aM.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||aQ(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},aM.prototype.writeBigInt64LE=is(function(e,t=0){return aZ(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),aM.prototype.writeBigInt64BE=is(function(e,t=0){return aJ(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),aM.prototype.writeFloatLE=function(e,t,r){return a1(this,e,t,!0,r)},aM.prototype.writeFloatBE=function(e,t,r){return a1(this,e,t,!1,r)},aM.prototype.writeDoubleLE=function(e,t,r){return a2(this,e,t,!0,r)},aM.prototype.writeDoubleBE=function(e,t,r){return a2(this,e,t,!1,r)},aM.prototype.copy=function(e,t,r,n){if(!aM.isBuffer(e))throw TypeError("argument should be a Buffer");if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r||0===e.length||0===this.length)return 0;if(t<0)throw RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw RangeError("Index out of range");if(n<0)throw RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);let a=n-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,n):Uint8Array.prototype.set.call(e,this.subarray(r,n),t),a},aM.prototype.fill=function(e,t,r,n){let a;if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),void 0!==n&&"string"!=typeof n)throw TypeError("encoding must be a string");if("string"==typeof n&&!aM.isEncoding(n))throw TypeError("Unknown encoding: "+n);if(1===e.length){let t=e.charCodeAt(0);("utf8"===n&&t<128||"latin1"===n)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw RangeError("Out of range index");if(r<=t)return this;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(a=t;a<r;++a)this[a]=e;else{let i=aM.isBuffer(e)?e:aM.from(e,n),s=i.length;if(0===s)throw TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=i[a%s]}return this};let a3={};function a4(e,t,r){a3[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function a6(e){let t="",r=e.length,n="-"===e[0]?1:0;for(;r>=n+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function a5(e,t,r,n,a,i){if(e>r||e<t){let n;let a="bigint"==typeof t?"n":"";throw n=i>3?0===t||t===BigInt(0)?`>= 0${a} and < 2${a} ** ${(i+1)*8}${a}`:`>= -(2${a} ** ${(i+1)*8-1}${a}) and < 2 ** ${(i+1)*8-1}${a}`:`>= ${t}${a} and <= ${r}${a}`,new a3.ERR_OUT_OF_RANGE("value",n,e)}a8(a,"offset"),(void 0===n[a]||void 0===n[a+i])&&a7(a,n.length-(i+1))}function a8(e,t){if("number"!=typeof e)throw new a3.ERR_INVALID_ARG_TYPE(t,"number",e)}function a7(e,t,r){if(Math.floor(e)!==e)throw a8(e,r),new a3.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new a3.ERR_BUFFER_OUT_OF_BOUNDS;throw new a3.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}a4("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),a4("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),a4("ERR_OUT_OF_RANGE",function(e,t,r){let n=`The value of "${e}" is out of range.`,a=r;return Number.isInteger(r)&&Math.abs(r)>4294967296?a=a6(String(r)):"bigint"==typeof r&&(a=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(a=a6(a)),a+="n"),n+=` It must be ${t}. Received ${a}`},RangeError);let a9=/[^+/0-9A-Za-z-_]/g;function ie(e,t){let r;t=t||1/0;let n=e.length,a=null,i=[];for(let s=0;s<n;++s){if((r=e.charCodeAt(s))>55295&&r<57344){if(!a){if(r>56319||s+1===n){(t-=3)>-1&&i.push(239,191,189);continue}a=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),a=r;continue}r=(a-55296<<10|r-56320)+65536}else a&&(t-=3)>-1&&i.push(239,191,189);if(a=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else if(r<1114112){if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}else throw Error("Invalid code point")}return i}function it(e){return TX(function(e){if((e=(e=e.split("=")[0]).trim().replace(a9,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function ir(e,t,r,n){let a;for(a=0;a<n&&!(a+r>=t.length)&&!(a>=e.length);++a)t[a+r]=e[a];return a}function ia(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}let ii=function(){let e="0123456789abcdef",t=Array(256);for(let r=0;r<16;++r){let n=16*r;for(let a=0;a<16;++a)t[n+a]=e[r]+e[a]}return t}();function is(e){return"undefined"==typeof BigInt?io:e}function io(){throw Error("BigInt not supported")}async function iu(e,t){let r=[],n=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let i=0;i<a.length;++i){let s=a[i],o=Array.isArray(e)?e[i].tensor:e[s];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw Error(`Unsupported dtype in weight '${s}': ${o.dtype}`);let u={name:s,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise(async e=>{let t=await o.bytes(),r=new Uint8Array(t.reduce((e,t)=>e+t.length,0)+4*t.length),n=0;for(let e=0;e<t.length;e++){let a=t[e],i=new Uint8Array(new Uint32Array([a.length]).buffer);r.set(i,n),n+=4,r.set(a,n),n+=a.length}e(r)});n.push(e)}else n.push(o.data());null!=t&&(u.group=t),r.push(u)}return{data:function(e){if(null===e)throw Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,r=[];e.forEach(e=>{if(t+=e.byteLength,r.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});let n=new Uint8Array(t),a=0;return r.forEach(e=>{n.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),n.buffer}(await Promise.all(n)),specs:r}}function il(e,t){let r=new aS(e),n={},a=0;for(let e of t){let t=function(e,t){let r;let n=_(e.shape);if("quantization"in e)r=aw[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(t(e,e+4))[0];return e}else r=aw[e.dtype];return n*r}(e,(e,t)=>r.slice(a+e,a+t));n[e.name]=ih(e,r.slice(a,a+t)),a+=t}return n}async function id(e,t){let r;let n=_(e.shape);if("quantization"in e)r=aw[e.quantization.dtype];else if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}else r=aw[e.dtype];return n*r}function ih(e,t){let r;let n=e.name,a=e.dtype,i=e.shape,s=_(i),o=0;if("quantization"in e){let i=e.quantization;if("uint8"===i.dtype||"uint16"===i.dtype){if(!("min"in i&&"scale"in i))throw Error(`Weight ${e.name} with quantization ${i.dtype} doesn't have corresponding metadata min and scale.`)}else if("float16"===i.dtype){if("float32"!==a)throw Error(`Weight ${e.name} is quantized with ${i.dtype} which only supports weights of type float32 not ${a}.`)}else throw Error(`Weight ${e.name} has unknown quantization dtype ${i.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=aw[i.dtype],l="uint8"===i.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===a){if("uint8"===i.dtype||"uint16"===i.dtype){r=new Float32Array(l.length);for(let e=0;e<l.length;e++){let t=l[e];r[e]=t*i.scale+i.min}}else if("float16"===i.dtype)r=(function(){let e=function(){let e=e=>{let t=e<<13,r=0;for(;(8388608&t)==0;)r-=8388608,t<<=1;return(t&=-8388609)|(r+=947912704)},t=new Uint32Array(2048);t[0]=0;for(let r=1;r<1024;r++)t[r]=e(r);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),r=function(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return n=>{let a=new ArrayBuffer(4*n.length),i=new Uint32Array(a);for(let a=0;a<n.length;a++){let s=n[a],o=e[r[s>>10]+(1023&s)]+t[s>>10];i[a]=o}return new Float32Array(a)}})()(l);else throw Error(`Unsupported quantization type ${i.dtype} for weight type float32.`)}else if("int32"===a){if("uint8"!==i.dtype&&"uint16"!==i.dtype)throw Error(`Unsupported quantization type ${i.dtype} for weight type int32.`);r=new Int32Array(l.length);for(let e=0;e<l.length;e++){let t=l[e];r[e]=Math.round(t*i.scale+i.min)}}else throw Error(`Unsupported dtype in weight '${n}': ${a}`);o+=s*u}else if("string"===a){let n=_(e.shape);r=[];for(let e=0;e<n;e++){let e=new Uint32Array(t.slice(o,o+4))[0];o+=4;let n=new Uint8Array(t.slice(o,o+e));r.push(n),o+=e}}else{let e=aw[a];if("float32"===a)r=new Float32Array(t);else if("int32"===a)r=new Int32Array(t);else if("bool"===a)r=new Uint8Array(t);else if("complex64"===a){r=new Float32Array(t);let e=new Float32Array(r.length/2),n=new Float32Array(r.length/2);for(let t=0;t<e.length;t++)e[t]=r[2*t],n[t]=r[2*t+1];let a=av(e,i,"float32"),s=av(n,i,"float32"),o=ax(a,s);return a.dispose(),s.dispose(),o}else throw Error(`Unsupported dtype in weight '${n}': ${a}`);o+=s*e}return av(r,i,a)}async function ip(e,t,r){let n=new Uint8Array(t);for(;n.byteLength<r;){let{done:t,value:a}=await e.read();if(t&&null==a){let e=r-n.byteLength;throw Error(`Reader is done but ${e} bytes are still expected`)}let i=new Uint8Array(n.length+a.byteLength);i.set(n,0),i.set(new Uint8Array(a),n.length),n=i}return n.buffer}async function ic(e,t){let r={},n=e.getReader(),a=new ArrayBuffer(0);for(let e of t){let t=await id(e,async(e,t)=>(a=await ip(n,a,t)).slice(e,t)),i=(a=await ip(n,a,t)).slice(0,t);a=a.slice(t);let s=ih(e,i);if(r[e.name]=s,"webgpu"===aT()){let e=aN();"uploadToGPU"in e&&_(s.shape)>=ey.get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(s.dataId)}}return r}let im="undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa;function ig(e){return im?aM.byteLength(e,"utf8"):new Blob([e]).size}function iy(e){return aS.join(e)}function ix(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function ib(e,t){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),r}function iv(e,t,r){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw Error("modelJSON has weightsManifest but weightSpecs is null");if(!r)throw Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),n}async function iw(e,t){let r,n;return null!=e.weightsManifest&&([r,n]=await t(e.weightsManifest)),iv(e,r,n)}function iS(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ig(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ig(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new aS(e.weightData).byteLength}}function ik(e){let t=[];for(let r of e)t.push(...r.weights);return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iC{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==iC.instance&&(iC.instance=new iC),iC.instance}static registerSaveRouter(e){iC.getInstance().saveRouters.push(e)}static registerLoadRouter(e){iC.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return iC.getHandlers(e,"save")}static getLoadHandlers(e,t){return iC.getHandlers(e,"load",t)}static getHandlers(e,t,r){let n=[];return("load"===t?iC.getInstance().loadRouters:iC.getInstance().saveRouters).forEach(t=>{let a=t(e,r);null!==a&&n.push(a)}),n}}let iI=e=>iC.registerSaveRouter(e),iT=e=>iC.registerLoadRouter(e),i$=e=>iC.getSaveHandlers(e),iN=(e,t)=>iC.getLoadHandlers(e,t),iE="tensorflowjs",iR="models_store",iA="model_info_store";function i_(){if(!ey.getBool("IS_BROWSER"))throw Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw Error("The current browser does not appear to support IndexedDB.");return t}function iO(e){let t=e.result;t.createObjectStore(iR,{keyPath:"modelPath"}),t.createObjectStore(iA,{keyPath:"modelPath"})}class iF{constructor(e){if(this.indexedDB=i_(),null==e||!e)throw Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,r)=>{let n=this.indexedDB.open(iE,1);n.onupgradeneeded=()=>iO(n),n.onsuccess=()=>{let a=n.result;if(null==t){let t=a.transaction(iR,"readonly"),n=t.objectStore(iR).get(this.modelPath);n.onsuccess=()=>{if(null==n.result)return a.close(),r(Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(n.result.modelArtifacts)},n.onerror=e=>(a.close(),r(n.error)),t.oncomplete=()=>a.close()}else{let n,i;t.weightData=aS.join(t.weightData);let s=iS(t),o=a.transaction(iA,"readwrite"),u=o.objectStore(iA);try{n=u.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(e){return r(e)}n.onsuccess=()=>{let n;let l=(i=a.transaction(iR,"readwrite")).objectStore(iR);try{n=l.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(e){return r(e)}n.onsuccess=()=>e({modelArtifactsInfo:s}),n.onerror=e=>{let t=(u=o.objectStore(iA)).delete(this.modelPath);t.onsuccess=()=>(a.close(),r(n.error)),t.onerror=e=>(a.close(),r(n.error))}},n.onerror=e=>(a.close(),r(n.error)),o.oncomplete=()=>{null==i?a.close():i.oncomplete=()=>a.close()}}},n.onerror=e=>r(n.error)})}}iF.URL_SCHEME="indexeddb://";let iD=e=>{var t;return ey.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(iF.URL_SCHEME)?(t=e.slice(iF.URL_SCHEME.length),new iF(t)):null};iC.registerSaveRouter(iD),iC.registerLoadRouter(iD);let iP="tensorflowjs_models",iM="info";function iL(e){return{info:[iP,e,iM].join("/"),topology:[iP,e,"model_topology"].join("/"),weightSpecs:[iP,e,"weight_specs"].join("/"),weightData:[iP,e,"weight_data"].join("/"),modelMetadata:[iP,e,"model_metadata"].join("/")}}function iB(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}class iz{constructor(e){if(!ey.getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=iL(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),n=iS(e),a=aS.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(n)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(im)return aM.from(e).toString("base64");let t=new Uint8Array(e),r="";for(let e=0,n=t.length;e<n;e++)r+=String.fromCharCode(t[e]);return btoa(r)}(a));let i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:n}}catch(e){throw iB(this.keys),Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${n.modelTopologyBytes}, weightSpecsBytes=${n.weightSpecsBytes}, weightDataBytes=${n.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(null==r)throw Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;let n=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==n)throw Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=n;let a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){let e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let i=this.LS.getItem(this.keys.weightData);if(null==i)throw Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(im){let t=aM.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),r=new Uint8Array(t.length);for(let e=0;e<t.length;++e)r.set([t.charCodeAt(e)],e);return r.buffer}(i),t}}iz.URL_SCHEME="localstorage://";let iU=e=>{var t;return ey.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(iz.URL_SCHEME)?(t=e.slice(iz.URL_SCHEME.length),new iz(t)):null};iC.registerSaveRouter(iU),iC.registerLoadRouter(iU);class iV{constructor(){this.managers={}}static getInstance(){return null==iV.instance&&(iV.instance=new iV),iV.instance}static registerManager(e,t){E(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),E(e.length>0,()=>"scheme must not be an empty string.");let r=iV.getInstance();E(null==r.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){let t=iV.getInstance().managers[e];if(null==t)throw Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(iV.getInstance().managers)}}function iW(e){if(-1===e.indexOf("://"))throw Error(`The url string provided does not contain a scheme. Supported schemes are: ${iV.getSchemes().join(",")}`);return{scheme:e.split("://")[0],path:e.split("://")[1]}}async function iG(e,t,r=!1){E(e!==t,()=>`Old path and new path are the same: '${e}'`);let n=iC.getLoadHandlers(e);E(n.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),E(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${e}.`);let a=n[0],i=iC.getSaveHandlers(t);E(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),E(i.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let s=i[0],o=iW(e).scheme,u=iW(e).path,l=o===iW(e).scheme,d=await a.load();r&&l&&await iV.getManager(o).removeModel(u);let h=await s.save(d);return r&&!l&&await iV.getManager(o).removeModel(u),h.modelArtifactsInfo}async function iH(){let e=iV.getSchemes(),t={};for(let r of e){let e=await iV.getManager(r).listModels();for(let n in e)t[r+"://"+n]=e[n]}return t}async function ij(e){let t=iW(e);return iV.getManager(t.scheme).removeModel(t.path)}async function iK(e,t){return iG(e,t,!1)}async function iq(e,t){return iG(e,t,!0)}if(ey.get("IS_BROWSER")){ey.setPlatform("browser",new class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if("undefined"==typeof window||!ey.getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))}isTypedArray(e){return ne(e)}});try{iV.registerManager(iz.URL_SCHEME,new class{constructor(){E(ey.getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),E("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=iP+"/",r="/"+iM;for(let n=0;n<this.LS.length;++n){let a=this.LS.key(n);a.startsWith(t)&&a.endsWith(r)&&(e[function(e){let t=e.split("/");if(t.length<3)throw Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join("/")}(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;let r=iL(e=(t=e).startsWith(iz.URL_SCHEME)?t.slice(iz.URL_SCHEME.length):t);if(null==this.LS.getItem(r.info))throw Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(r.info));return iB(r),n}})}catch(e){}try{iV.registerManager(iF.URL_SCHEME,new class{constructor(){this.indexedDB=i_()}async listModels(){return new Promise((e,t)=>{let r=this.indexedDB.open(iE,1);r.onupgradeneeded=()=>iO(r),r.onsuccess=()=>{let n=r.result,a=n.transaction(iA,"readonly"),i=a.objectStore(iA).getAll();i.onsuccess=()=>{let t={};for(let e of i.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},i.onerror=e=>(n.close(),t(i.error)),a.oncomplete=()=>n.close()},r.onerror=e=>t(r.error)})}async removeModel(e){var t;return e=(t=e).startsWith(iF.URL_SCHEME)?t.slice(iF.URL_SCHEME.length):t,new Promise((t,r)=>{let n=this.indexedDB.open(iE,1);n.onupgradeneeded=()=>iO(n),n.onsuccess=()=>{let a;let i=n.result,s=i.transaction(iA,"readwrite"),o=s.objectStore(iA),u=o.get(e);u.onsuccess=()=>{if(null==u.result)return i.close(),r(Error(`Cannot find model with path '${e}' in IndexedDB.`));{let n=o.delete(e),s=()=>{let n=(a=i.transaction(iR,"readwrite")).objectStore(iR).delete(e);n.onsuccess=()=>t(u.result.modelArtifactsInfo),n.onerror=e=>r(u.error)};n.onsuccess=s,n.onerror=e=>(s(),i.close(),r(u.error))}},u.onerror=e=>(i.close(),r(u.error)),s.oncomplete=()=>{null==a?i.close():a.oncomplete=()=>i.close()}},n.onerror=e=>r(n.error)})}})}catch(e){}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iX={importFetch:()=>m("2cpeF")};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(e,t="float32",r){return t=t||"float32",ed(e),new nZ(e,t,r)}ey.get("IS_NODE")&&!ey.get("IS_BROWSER")&&ey.setPlatform("node",new class{constructor(){this.util=m("2cpeF"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ey.global.fetch?ey.global.fetch(e,t):(null==r&&(r=iX.importFetch()),r(e,t))}now(){let e=ex.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});let iQ=ay({cast_:/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","cast");if(!q(t))throw Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==r.dtype||"string"!==t&&"string"===r.dtype)throw Error("Only strings can be casted to strings");return ai.runKernel(eQ,{x:r},{dtype:t})}}),iZ=ay({clone_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","clone","string_or_numeric");return ai.runKernel(tT,{x:t})}});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iJ(e,t=!1){console.log(e.toString(t))}aa(),n0={buffer:iY,cast:iQ,clone:iZ,print:iJ};let i0=ay({add_:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","add"),n=af(t,"b","add");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel("Add",a)}}),i1=ay({floorDiv_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","floorDiv"),n=af(t,"b","floorDiv");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel(tv,a)}}),i2=ay({div_:function(e,t){let r=af(e,"a","div"),n=af(t,"b","div");if([r,n]=n9(r,n),"int32"===r.dtype&&"int32"===n.dtype)return i1(r,n);let a={a:r,b:n};return ai.runKernel(th,a,{})}}),i3=ay({mul_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","mul"),n=af(t,"b","mul");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel(tQ,a)}}),i4=ay({sqrt_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","sqrt","float32");return ai.runKernel(rC,{x:t})}}),i6=ay({square_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","square");return ai.runKernel("Square",{x:t},{})}}),i5=ay({zerosLike_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","zerosLike");return ai.runKernel(rq,{x:t})}});function i8(e){return ai.customGrad(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i7(e,t){if((nH(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&nH(e)&&!(e instanceof Uint8Array))throw Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ab(e,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let i9=new Map,se=new Map;class st{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class sr{constructor(){this.classNameMap={}}static getMap(){return null==sr.instance&&(sr.instance=new sr),sr.instance}static register(e){sr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}class sn extends st{minimize(e,t=!1,r){let{value:n,grads:a}=this.computeGradients(e,r);if(null!=r){let e=r.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return(aC(a),t)?n:(n.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){E(er(e),()=>"The f passed in variableGrads(f) must be a function"),E(null==t||Array.isArray(t)&&t.every(e=>e instanceof n3),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let r=null!=t;if(!r)for(let e in t=[],ai.registeredVariables)t.push(ai.registeredVariables[e]);let n=r?t.filter(e=>!e.trainable):null,a=t.length;E((t=t.filter(e=>e.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let{value:i,grads:s}=ai.gradients(e,t,null,!0);E(s.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),E(0===i.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let o={};return t.forEach((e,t)=>{null!=s[t]&&(o[e.name]=s[t])}),null!=n&&n.forEach(e=>o[e.name]=null),{value:i,grads:o}}(e,t)}dispose(){null!=this.iterations_&&aC(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:i7(this.iterations_,"int32")}}async getWeights(){throw Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sa(e,t,r){ed(e),r=r||et(t);let n={shape:e,value:t,dtype:r};return ai.runKernel(ty,{},n)}Object.defineProperty(sn,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});let si=ay({pow_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"base","pow"),n=af(t,"exp","pow");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel("Pow",a)}}),ss=ay({sub_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","sub"),n=af(t,"b","sub");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel("Sub",a)}}),so=ay({abs_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","abs");return"complex64"===t.dtype?ai.runKernel(e1,{x:t}):ai.runKernel("Abs",{x:t})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var su={};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(e,t){let r=e.length,n=[];for(let a=0;a<r;a++){let i=r-1-a,s=e[i]||1;(t[t.length-1-a]||1)>1&&1===s&&n.unshift(i)}return n}function sd(e,t){let r=[];for(let n=0;n<t.length;n++){let a=e[e.length-n-1],i=t.length-n-1,s=t[i];(null==a||1===a&&s>1)&&r.unshift(i)}return r}function sh(e,t){let r=Math.max(e.length,t.length),n=Array(r);for(let a=0;a<r;a++){let i=e[e.length-a-1];null==i&&(i=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===i)n[r-a-1]=s;else if(1===s)n[r-a-1]=i;else if(i!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);else n[r-a-1]=i}return n}u(su,"getBroadcastDims",function(){return sl}),u(su,"getReductionAxes",function(){return sd}),u(su,"assertAndGetBroadcastShape",function(){return sh});let sp=ay({maximum_:function(e,t){let r=af(e,"a","maximum"),n=af(t,"b","maximum");[r,n]=n9(r,n),"bool"===r.dtype&&(r=iQ(r,"int32"),n=iQ(n,"int32")),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tU,a)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sc extends sn{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=Array.isArray(e)?e[r].tensor:e[t];if(null==n)return;let a=ai.registeredVariables[t];ak(()=>{let e=i0(i3(this.c,n),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=aI(i7(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}let sf=[class extends sn{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==r&&(this.epsilon=ai.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=ai.registeredVariables[t];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:ak(()=>i5(n).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:ak(()=>i5(n).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(null==a)return;let i=this.accumulatedGrads[r].variable,s=this.accumulatedUpdates[r].variable;ak(()=>{let e=i0(i3(i,this.rho),i3(i6(a),1-this.rho)),t=i3(i2(i4(i0(s,this.epsilon)),i4(i0(i,this.epsilon))),a),r=i0(i3(s,this.rho),i3(i6(t),1-this.rho));i.assign(e),s.assign(r);let o=i0(i3(t,-this.learningRate),n);n.assign(o)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(aC(this.accumulatedGrads.map(e=>e.variable)),aC(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},class extends sn{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=ai.registeredVariables[t];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:ak(()=>sa(n.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(null==a)return;let i=this.accumulatedGrads[r].variable;ak(()=>{let e=i0(i,i6(a));i.assign(e);let t=i0(i3(i2(a,i4(i0(e,ai.backend.epsilon()))),-this.learningRate),n);n.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&aC(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},class extends sn{static get className(){return"Adam"}constructor(e,t,r,n=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ak(()=>{this.accBeta1=i7(t).variable(),this.accBeta2=i7(r).variable()}),null==n&&(this.epsilon=ai.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);ak(()=>{let r=ss(1,this.accBeta1),n=ss(1,this.accBeta2);t.forEach((t,a)=>{let i=ai.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:ak(()=>i5(i).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:ak(()=>i5(i).variable(!1))});let s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;let o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=i0(i3(o,this.beta1),i3(s,1-this.beta1)),d=i0(i3(u,this.beta2),i3(i6(s),1-this.beta2)),h=i2(l,r),p=i2(d,n);o.assign(l),u.assign(d);let c=i0(i3(i2(h,i0(i4(p),this.epsilon)),-this.learningRate),i);i.assign(c)}),this.accBeta1.assign(i3(this.accBeta1,this.beta1)),this.accBeta2.assign(i3(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&aC(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&aC(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),ak(()=>{this.accBeta1.assign(si(this.beta1,this.iterations_+1)),this.accBeta2.assign(si(this.beta2,this.iterations_+1))});let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},class extends sn{static get className(){return"Adamax"}constructor(e,t,r,n=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=n,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ak(()=>{this.iteration=i7(0).variable(),this.accBeta1=i7(t).variable()}),null==n&&(this.epsilon=ai.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);ak(()=>{let r=ss(1,this.accBeta1),n=i2(-this.learningRate,i0(i3(this.iteration,this.decay),1));t.forEach((t,a)=>{let i=ai.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:i5(i).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:i5(i).variable(!1)});let s=Array.isArray(e)?e[a].tensor:e[t];if(null==s)return;let o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=i0(i3(o,this.beta1),i3(s,1-this.beta1)),d=sp(i3(u,this.beta2),so(s));o.assign(l),u.assign(d);let h=i0(i3(i2(n,r),i2(l,i0(d,this.epsilon))),i);i.assign(h)}),this.iteration.assign(i0(this.iteration,1)),this.accBeta1.assign(i3(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&aC(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&aC(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},class extends sc{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=i7(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=ai.registeredVariables[t];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:ak(()=>i5(n).variable(!1))});let a=this.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[t];null!=i&&ak(()=>{let e;let t=i0(i3(this.m,a),i);e=this.useNesterov?i0(i3(this.c,i0(i,i3(t,this.m))),n):i0(i3(this.c,t),n),a.assign(t),n.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&aC(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class extends sn{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,n=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=n,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==n&&(this.epsilon=ai.backend.epsilon()),null==e)throw Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,r)=>{let n=ai.registeredVariables[t];null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:ak(()=>i5(n).variable(!1))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:ak(()=>i5(n).variable(!1))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:ak(()=>i5(n).variable(!1))});let a=Array.isArray(e)?e[r].tensor:e[t];if(null==a)return;let i=this.accumulatedMeanSquares[r].variable,s=this.accumulatedMoments[r].variable;ak(()=>{let e=i0(i3(i,this.decay),i3(i6(a),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[r].variable,o=i0(i3(t,this.decay),i3(a,1-this.decay)),u=i2(i3(a,this.learningRate),i4(ss(e,i0(i6(o),this.epsilon)))),l=i0(i3(s,this.momentum),u);i.assign(e),t.assign(o),s.assign(l);let d=ss(n,l);n.assign(d)}else{let e=i0(i3(i,this.decay),i3(i6(a),1-this.decay)),t=i0(i3(s,this.momentum),i2(i3(a,this.learningRate),i4(i0(e,this.epsilon))));i.assign(e),s.assign(t);let r=ss(n,t);n.assign(r)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&aC(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&aC(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&aC(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},sc],sm=ay({argMax_:/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=af(e,"x","argMax");return ai.runKernel(eD,{x:r},{axis:t})}});var sg={};u(sg,"fromUint8ToStringArray",function(){return uy}),u(sg,"fromStringArrayToUint8",function(){return ux}),u(sg,"slice_util",function(){return on}),u(sg,"upcastType",function(){return n6}),u(sg,"segment_util",function(){return uc});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var sy={};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sx(e,t){for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0}function sb(e,t,r){let n=e.length+t.length,a=[],i=0,s=0;for(let o=0;o<n;o++)-1===r.indexOf(o)?a.push(e[i++]):a.push(t[s++]);return a}function sv(e,t){let r=[],n=e.length;for(let a=0;a<n;a++)-1===t.indexOf(a)&&r.push(e[a]);return[r,t.map(t=>e[t])]}function sw(e,t){return sb(e,t.map(e=>1),t)}function sS(e,t,r){E(sx(t,r),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${r} input.`)}function sk(e,t){if(sx(e,t))return null;let r=[];for(let n=0;n<t;++n)-1===e.indexOf(n)&&r.push(n);return e.forEach(e=>r.push(e)),r}function sC(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function sI(e,t){let r=[];for(let n=t-e;n<t;++n)r.push(n);return r}u(sy,"axesAreInnerMostDims",function(){return sx}),u(sy,"combineLocations",function(){return sb}),u(sy,"computeOutAndReduceShapes",function(){return sv}),u(sy,"expandShapeToKeepDim",function(){return sw}),u(sy,"assertAxesAreInnerMostDims",function(){return sS}),u(sy,"getAxesPermutation",function(){return sk}),u(sy,"getUndoAxesPermutation",function(){return sC}),u(sy,"getInnerMostAxes",function(){return sI});var sT={};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(e,t){let r=e[0].length;e.forEach((e,t)=>{E(e.length===r,()=>`Error in concat${r}D: rank of tensors[${t}] must be the same as the rank of the rest (${r})`)}),E(t>=0&&t<r,()=>`Error in concat${r}D: axis must be between 0 and ${r-1}.`);let n=e[0];e.forEach((e,a)=>{for(let i=0;i<r;i++)E(i===t||e[i]===n[i],()=>`Error in concat${r}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${n}) along the non-concatenated axis ${a}.`)})}function sN(e,t){let r=e[0].slice();for(let n=1;n<e.length;n++)r[t]+=e[n][t];return r}u(sT,"assertParamsConsistent",function(){return s$}),u(sT,"computeOutShape",function(){return sN});var sE={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(e,t,r,n,a="NHWC",i){let s=[...t,e[3]];return sO(e,s,r,i,n,null,null,sW(a))}function sA(e,t,r,n,a,i,s="channelsLast"){let o;let[u,l]=sP(t);if("channelsLast"===s)o=[u,l,e[3],e[3]];else if("channelsFirst"===s)o=[u,l,e[1],e[1]];else throw Error(`Unknown dataFormat ${s}`);return sO(e,o,r,n,a,i,!1,s)}function s_(e,t,r,n,a,i,s="NDHWC"){let o,u;let[l,d,h]=sM(t);if("NDHWC"===s)u="channelsLast",o=[l,d,h,e[4],e[4]];else if("NCDHW"===s)u="channelsFirst",o=[l,d,h,e[1],e[1]];else throw Error(`Unknown dataFormat ${s}`);return sF(e,o,r,n,a,!1,u,i)}function sO(e,t,r,n,a,i,s=!1,o="channelsLast"){let u,[l,d,h,p]=[-1,-1,-1,-1];if("channelsLast"===o)[l,d,h,p]=e;else if("channelsFirst"===o)[l,p,d,h]=e;else throw Error(`Unknown dataFormat ${o}`);let[c,f,,m]=t,[g,y]=sP(r),[x,b]=sP(n),v=sL(c,x),w=sL(f,b),{padInfo:S,outHeight:k,outWidth:C}=function(e,t,r,n,a,i,s,o,u){let l,d,h;if("number"==typeof e){let a=0===e?"VALID":"NUMBER";l={top:e,bottom:e,left:e,right:e,type:a};let s=function(e,t,r,n,a){null==n&&(n=sD(e,t,r));let i=e[0],s=e[1];return[sB((i-t+2*n)/r+1,a),sB((s-t+2*n)/r+1,a)]}([t,r],i,n,e,o);d=s[0],h=s[1]}else if("same"===e){let e=Math.max(0,((d=Math.ceil(t/n))-1)*n+i-t),o=Math.max(0,((h=Math.ceil(r/a))-1)*a+s-r),u=Math.floor(e/2),p=Math.floor(o/2);l={top:u,bottom:e-u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-i+1)/n),h=Math.ceil((r-s+1)/a);else if("object"==typeof e){let p="channelsLast"===u?e[1][0]:e[2][0],c="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:c,left:f,right:m,type:0===p&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},d=sB((t-i+p+c)/n+1,o),h=sB((r-s+f+m)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:d,outWidth:h}}(a,d,h,g,y,v,w,i,o),I=s?m*p:m;return"channelsFirst"===o?u=[l,I,k,C]:"channelsLast"===o&&(u=[l,k,C,I]),{batchSize:l,dataFormat:o,inHeight:d,inWidth:h,inChannels:p,outHeight:k,outWidth:C,outChannels:I,padInfo:S,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:x,dilationWidth:b,inShape:e,outShape:u,filterShape:t}}function sF(e,t,r,n,a,i=!1,s="channelsLast",o){let u,[l,d,h,p,c]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[l,d,h,p,c]=e;else if("channelsFirst"===s)[l,c,d,h,p]=e;else throw Error(`Unknown dataFormat ${s}`);let[f,m,g,,y]=t,[x,b,v]=sM(r),[w,S,k]=sM(n),C=sL(f,w),I=sL(m,S),T=sL(g,k),{padInfo:$,outDepth:N,outHeight:E,outWidth:R}=function(e,t,r,n,a,i,s,o,u,l,d){let h,p,c,f;if("valid"===e&&(e=0),"number"==typeof e){let m=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:m};let g=function(e,t,r,n,a,i){null==a&&(a=sD(e,t[0],n[0]));let s=[0,0,0,1];for(let r=0;r<3;r++)e[r]+2*a>=t[r]&&(s[r]=sB((e[r]-t[r]+2*a)/n[r]+1,i));return s}([t,r,n,1],[o,u,l],0,[a,i,s],e,d);p=g[0],c=g[1],f=g[2]}else if("same"===e){let e=((p=Math.ceil(t/a))-1)*a+o-t,d=((c=Math.ceil(r/i))-1)*i+u-r,m=((f=Math.ceil(n/s))-1)*s+l-n,g=Math.floor(e/2),y=Math.floor(d/2),x=Math.floor(m/2);h={top:y,bottom:d-y,left:x,right:m-x,front:g,back:e-g,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:p,outHeight:c,outWidth:f}}(a,d,h,p,x,b,v,C,I,T,o),A=i?y*c:y;return"channelsFirst"===s?u=[l,A,N,E,R]:"channelsLast"===s&&(u=[l,N,E,R,A]),{batchSize:l,dataFormat:s,inDepth:d,inHeight:h,inWidth:p,inChannels:c,outDepth:N,outHeight:E,outWidth:R,outChannels:A,padInfo:$,strideDepth:x,strideHeight:b,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:C,effectiveFilterHeight:I,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:S,dilationWidth:k,inShape:e,outShape:u,filterShape:t}}function sD(e,t,r,n=1){let a=sL(t,n);return Math.floor((e[0]*(r-1)-r+a)/2)}function sP(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function sM(e){return"number"==typeof e?[e,e,e]:e}function sL(e,t){return t<=1?e:e+(e-1)*(t-1)}function sB(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw Error(`Unknown roundingMode ${t}`)}}function sz(e){let[t,r,n]=sP(e);return 1===t&&1===r&&1===n}function sU(e,t){return sz(e)||sz(t)}function sV(e){return sP(e).every(e=>e>0)}function sW(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw Error(`Unknown dataFormat ${e}`)}function sG(e,t,r){if(null!=r){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);if("number"==typeof t)E(P(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`);else if("object"==typeof t)t.forEach(t=>{t.forEach(t=>{E(P(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${r} but got pad ${t}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}u(sE,"computeDilation2DInfo",function(){return sR}),u(sE,"convertConv2DDataFormat",function(){return sW}),u(sE,"computeConv2DInfo",function(){return sO}),u(sE,"computePool2DInfo",function(){return sA}),u(sE,"computePool3DInfo",function(){return s_}),u(sE,"computeConv3DInfo",function(){return sF}),u(sE,"computeDefaultPad",function(){return sD}),u(sE,"tupleValuesAreOne",function(){return sz}),u(sE,"eitherStridesOrDilationsAreOne",function(){return sU}),u(sE,"stridesOrDilationsArePositive",function(){return sV}),u(sE,"checkPadOnDimRoundingMode",function(){return sG});var sH={};u(sH,"getFusedDyActivation",function(){return s1}),u(sH,"getFusedBiasGradient",function(){return s2}),u(sH,"applyActivation",function(){return s3}),u(sH,"shouldFuse",function(){return s4});let sj=ay({elu_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","elu","float32");return ai.runKernel("Elu",{x:t})}}),sK=ay({leakyRelu_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=.2){let r=af(e,"x","leakyRelu");return ai.runKernel(t_,{x:r},{alpha:t})}}),sq=ay({prelu_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","prelu"),n=af(t,"alpha","prelu");return ai.runKernel(t5,{x:r,alpha:n})}}),sX=ay({relu_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","relu");return ai.runKernel(ra,{x:t})}}),sY=ay({relu6_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","relu6");return ai.runKernel(rd,{x:t})}}),sQ=ay({reshape_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","reshape","string_or_numeric");return ai.runKernel(ri,{x:r},{shape:t})}}),sZ=ay({sigmoid_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","sigmoid","float32");return ai.runKernel(rS,{x:t})}}),sJ=ay({step_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=af(e,"x","step");return ai.runKernel(rX,{x:r},{alpha:t})}}),s0=ay({sum_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","sum");"bool"===n.dtype&&(n=iQ(n,"int32"));let a={x:n};return ai.runKernel("Sum",a,{axis:t,keepDims:r})}});function s1(e,t,r){if(null==r||"linear"===r)return e;if("relu"===r)return i3(e,sJ(t));throw Error(`Cannot compute gradient for fused activation ${r}.`)}function s2(e,t){let r=t,n=sd(e.shape,t.shape);return n.length>0&&(r=s0(r,n)),sQ(r,e.shape)}function s3(e,t,r,n){if("linear"===t)return e;if("relu"===t)return sX(e);if("elu"===t)return sj(e);if("relu6"===t)return sY(e);if("prelu"===t)return sq(e,r);if("leakyrelu"===t)return sK(e,n);if("sigmoid"===t)return sZ(e);throw Error(`Unknown fused activation ${t}.`)}let s4=(e,t)=>!(e>0)||"linear"===t;/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var s6={};function s5(e,t,r){let n=[];if(null==r&&null==t)return n;if(null==t)for(;n.length<e+r.length;)n.push(-1);else n=t.slice();if(null==r)return n;if(e+r.length!==n.length)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+r.length}, but shape.rank = ${n.length}`);for(let a=1;a<r.length;++a){let i=r[a],s=n[n.length-r.length+a],o=n[s];if(i>=0){if(o>=0){if(o!==i)throw Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${i} but shape[${a+e}] = ${o}`)}else n[s]=i}}return n}function s8(e){let t={FIRST_DIM_SIZE:TJ.FIRST_DIM_SIZE,VALUE_ROWIDS:TJ.VALUE_ROWIDS,ROW_LENGTHS:TJ.ROW_LENGTHS,ROW_SPLITS:TJ.ROW_SPLITS,ROW_LIMITS:TJ.ROW_LIMITS,ROW_STARTS:TJ.ROW_STARTS},r=[];for(let n of e)if(n in t)r.push(t[n]);else break;return r}function s7(e){return 0===e.length?0:e[0]===TJ.FIRST_DIM_SIZE?e.length-1:e.length}function s9(e,t){if(null==e||null==t)return;let r=e.length,n=t.length;if(r>=n)throw Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${r} must be less than ragged tensor input flatValues.rank = ${n})`);for(let a=0;a<Math.min(r,n-1);++a){let r=e[a],n=t[a+1];if(r>=0&&n>=0&&1!==r&&r!==n)throw Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${r} but ragged tensor input.flatValues.shape[${a-e.length}] = ${n}`)}}u(s6,"RowPartitionType",function(){return TJ}),u(s6,"combineRaggedTensorToTensorShapes",function(){return s5}),u(s6,"getRowPartitionTypesHelper",function(){return s8}),u(s6,"getRaggedRank",function(){return s7}),u(s6,"validateDefaultValueShape",function(){return s9}),(T$=TJ||(TJ={}))[T$.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",T$[T$.VALUE_ROWIDS=1]="VALUE_ROWIDS",T$[T$.ROW_LENGTHS=2]="ROW_LENGTHS",T$[T$.ROW_SPLITS=3]="ROW_SPLITS",T$[T$.ROW_LIMITS=4]="ROW_LIMITS",T$[T$.ROW_STARTS=5]="ROW_STARTS";var oe={};u(oe,"PARALLELIZE_THRESHOLD",function(){return ot}),u(oe,"computeOptimalWindowSize",function(){return or});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ot=30;function or(e){return e<=ot?e:en(e,Math.floor(Math.sqrt(e)))}var on={};function oa(e,t,r){let n=e.shape.length;E(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),E(n===r.length,()=>`Error in slice${n}D: Length of size ${r} must match the rank of the array (${n}).`);for(let a=0;a<n;++a)E(t[a]+r[a]<=e.shape[a],()=>`Error in slice${n}D: begin[${a}] + size[${a}] (${t[a]+r[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function oi(e){let t=[],r=0;for(;e>0;)1&e&&t.push(r),e/=2,r++;return t}function os(e,t,r){let n=[];for(let a=0;a<e.length;a++)n[a]=Math.ceil((t[a]-e[a])/r[a]);return n}function oo(e,t,r,n){let a=[...e];for(let e=a.length;e<n.length;e++)a.push(1);for(let e=0;e<r;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ou(e,t){let r=[];for(let n=0;n<e;n++)r.push(t+n);return r}function ol(e,t,r,n,a,i,s,o,u){let l=e.length,d=Array(l),h=Array(l),p=Array(l);if(t.length&&r>0){let u=t[0],l=r+1;d=od(s,u,l,n,e),h=oh(o,u,l,a,e),p=oo(i,u,l,e)}else for(let t=0;t<l;t++)d[t]=oc(s,n,i,e,t,u),h[t]=of(o,a,i,e,t,u),p[t]=op(i,t,u);return{begin:d,end:h,strides:p}}function od(e,t,r,n,a){let i=[...a],s=ou(r,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=0;else{var o;let s=(o=a)<=t?o:o-(r-1),u=n[s];e&1<<s&&(u=0),i[a]=u}return i}function oh(e,t,r,n,a){let i=[...a],s=ou(r,t);for(let a=0;a<i.length;a++)if(s.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{var o;let s=(o=a)<=t?o:o-(r-1),u=n[s];e&1<<s&&(u=Number.MAX_SAFE_INTEGER),i[a]=u}for(let e=0;e<i.length;e++){let t=a[e];i[e]<0&&(i[e]+=t),i[e]=k(0,i[e],a[e])}return i}function op(e,t,r){let n=e[t];return(r&1<<t||null==n)&&(n=1),n}function oc(e,t,r,n,a,i){let s=t[a],o=r[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let u=n[a];return s<0&&(s+=u),s=k(0,s,u-1)}function of(e,t,r,n,a,i){let s=t[a],o=r[a]||1;(e&1<<a||i&1<<a||null==s)&&(s=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let u=n[a];return s<0&&(s+=u),s=o>0?k(0,s,u):k(-1,s,u-1)}function om(e,t,r){let n=r.length;for(let e=0;e<r.length;e++)if(r[e]>1){n=e;break}for(let a=n+1;a<r.length;a++)if(t[a]>0||r[a]!==e[a])return!1;return!0}function og(e,t){let r=e.length>0?e[e.length-1]:1;for(let n=0;n<e.length-1;n++)r+=e[n]*t[n];return r}function oy(e,t,r){let n,a;let i=e.shape.length;return(n="number"==typeof t?[t,...Array(i-1).fill(0)]:t.length<i?t.concat(Array(i-t.length).fill(0)):t.slice()).forEach(e=>{E(-1!==e,()=>"slice() does not support negative begin indexing.")}),a=(a=null==r?Array(i).fill(-1):"number"==typeof r?[r,...Array(i-1).fill(-1)]:r.length<i?r.concat(Array(i-r.length).fill(-1)):r).map((t,r)=>t>=0?t:(E(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${r}.`),e.shape[r]-n[r])),[n,a]}function ox(e,t,r,n,a,i,s,o,u){let l;if(null==n?(l=Array(t.length)).fill(1):l=n,null!=s&&(s&s-1)!=0)throw Error("Multiple ellipses in slice is not allowed.");let d=!1,h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:r.slice(),strides:l.slice(),beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)d&&(1<<e&o)!=0&&h.numAddAxisAfterEllipsis++,1<<e&s&&(d=!0);!d&&(h.ellipsisMask|=1<<h.dims,h.dims++);let p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let r=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=Array(t.dims),t.end=Array(t.dims),t.strides=Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=Array(t.dims);for(let n=0;n<e.dims;n++)if(1<<n&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-n)+1+e.numAddAxisAfterEllipsis,t.dims);for(;r<a;r++)t.begin[r]=0,t.end[r]=0,t.strides[r]=1,t.beginMask|=1<<r,t.endMask|=1<<r,t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[r]=n}else if(1<<n&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(r===t.begin.length)throw Error(`Index out of range using input dim ${r}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[r]=e.begin[n]),null!=e.end&&(t.end[r]=e.end[n]),t.strides[r]=e.strides[n],e.beginMask&1<<n&&(t.beginMask|=1<<r),e.endMask&1<<n&&(t.endMask|=1<<r),e.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<r):(t.finalShapeGatherIndices.push(r),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[r]=n,r++}}(h,p);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){let r;if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(p.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}let i=[p.beginMask&1<<t,p.endMask&1<<t],s=[p.strides[t]>0?0:-1,p.strides[t]>0?a:a-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];let o=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){let e=p.begin[t]<0?a+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=a)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=ob(p.begin[t],0,p.strides[t],a,i,s),p.end[t]=ob(p.end[t],1,p.strides[t],a,i,s);let e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===a;c=c&&e,f=f&&(0===t&&1===p.strides[t]||e)}else c=c&&1===p.strides[t]&&o,f=f&&(0===t&&1===p.strides[t]||o);let u=!1;if(p.beginValid&&p.endValid?(r=p.end[t]-p.begin[t],u=!0):n?(r=1,u=!0):o&&a>=0&&(r=p.strides[t]<0?-a:a,u=!0),u){let e;e=0===r||r<0!=p.strides[t]<0?0:Math.trunc(r/p.strides[t])+(r%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){let t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>-2!==p.finalShapeGatherIndices[t]),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function ob(e,t,r,n,a,i){if(a[t])return r>0?i[t]:i[t+1&1];{let t=e<0?n+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}u(on,"assertParamsValid",function(){return oa}),u(on,"maskToAxes",function(){return oi}),u(on,"computeOutShape",function(){return os}),u(on,"stridesWithElidedDims",function(){return oo}),u(on,"getNormalizedAxes",function(){return ol}),u(on,"startIndicesWithElidedDims",function(){return od}),u(on,"stopIndicesWithElidedDims",function(){return oh}),u(on,"startForAxis",function(){return oc}),u(on,"stopForAxis",function(){return of}),u(on,"stridesForAxis",function(){return op}),u(on,"isSliceContinous",function(){return om}),u(on,"computeFlatOffset",function(){return og}),u(on,"parseSliceParams",function(){return oy}),u(on,"sliceInfo",function(){return ox});var ov={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ow(e,t,r){return[r*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}u(ov,"getImageCenter",function(){return ow});var oS={};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(e,t,r,n=!0){let a=[];if(n)(a=a.concat(t.slice(0))).push(e[0]/r),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let r=t.length;for(let n=0;n<r;++n)a=a.concat([e[n+1]/t[n],t[n]]);a=a.concat(e.slice(r+1))}return a}function oC(e,t,r=!0){let n=[];if(r){n.push(t);for(let r=t+1;r<e;++r)r<=2*t?(n.push(r),n.push(r-(t+1))):n.push(r)}else{let r=[],a=[];for(let n=1;n<e;++n)n>=2*t+1||n%2==1?a.push(n):r.push(n);n.push(...r),n.push(0),n.push(...a)}return n}function oI(e,t,r,n=!0){let a=[];n?a.push(e[0]/r):a.push(e[0]*r);for(let r=1;r<e.length;++r)r<=t.length?n?a.push(t[r-1]*e[r]):a.push(e[r]/t[r-1]):a.push(e[r]);return a}function oT(e,t){let r=[0];for(let n=0;n<t;++n)r.push(e[n][0]);return r}function o$(e,t,r){let n=e.slice(0,1);for(let a=0;a<r;++a)n.push(e[a+1]-t[a][0]-t[a][1]);return n}u(oS,"getReshaped",function(){return ok}),u(oS,"getPermuted",function(){return oC}),u(oS,"getReshapedPermuted",function(){return oI}),u(oS,"getSliceBeginCoords",function(){return oT}),u(oS,"getSliceSize",function(){return o$});var oN={};function oE(e,t){let r=e.shape.length,n=t.shape.length;if(r<1)throw Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${r}.`);if(n<1)throw Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if("int32"!==t.dtype)throw Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>r)throw Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${r}`);if(0===_(e.shape))throw Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,i=a[a.length-1],s=1;for(let e=0;e<a.length-1;++e)s*=a[e];let o=e.shape,u=a.slice();u.pop();let l=1;for(let e=i;e<r;++e)l*=o[e],u.push(o[e]);let d=[...ea(e.shape).map(e=>e/l),1].slice(0,i);return[u,s,l,d]}u(oN,"prepareAndValidate",function(){return oE});var oR={};function oA(e,t,r){let n=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${r.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${n}, and batchDim: ${a}.`;if(r.rank<a)throw Error(i+` update.rank < ${a}. `);if(e.length<n+(r.rank-a))throw Error(i+` Output shape length < ${n+(r.rank-a)}`);if(r.rank!==a+e.length-n)throw Error(i+` update.rank != ${a+e.length-n}`);for(let e=0;e<a;++e)if(r.shape[e]!==t.shape[e])throw Error(i+` updates.shape[${e}] (${r.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<r.rank-a;++t)if(r.shape[t+a]!==e[t+n])throw Error(i+` updates.shape[${t+a}] (${r.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function o_(e,t,r){if(t.rank<1)throw Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(r.length<1)throw Error(`Output rank must be greater or equal to 1, but got shape: ${r}`);if(0===r.length){if(0===t.size)throw Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw Error(`Updates specified for empty output. updates shape: ${e.shape}`)}oA(r,t,e)}function oO(e,t,r){let n=t.shape.length,a=n>1?t.shape[n-1]:1,i=r.length,s=1;for(let e=a;e<i;++e)s*=r[e];let o=a<1?1:a,u=_(t.shape)/o,l=[...ea(r.slice(0,a)),1];return{sliceRank:a,numUpdates:u,sliceSize:s,strides:l,outputSize:_(r)}}u(oR,"validateUpdateShape",function(){return oA}),u(oR,"validateInput",function(){return o_}),u(oR,"calculateShapes",function(){return oO});var oF={};u(oF,"SELU_SCALEALPHA",function(){return oD}),u(oF,"SELU_SCALE",function(){return oP});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oD=1.7580993408473768,oP=1.0507009873554805;var oM={};u(oM,"ERF_P",function(){return oL}),u(oM,"ERF_A1",function(){return oB}),u(oM,"ERF_A2",function(){return oz}),u(oM,"ERF_A3",function(){return oU}),u(oM,"ERF_A4",function(){return oV}),u(oM,"ERF_A5",function(){return oW});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oL=.3275911,oB=.254829592,oz=-.284496736,oU=1.421413741,oV=-1.453152027,oW=1.061405429;var oG={};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(e,t){if(e.length!==t.length)throw Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let r=new Float32Array(2*e.length);for(let n=0;n<r.length;n+=2)r[n]=e[n/2],r[n+1]=t[n/2];return r}function oj(e){let t=new Float32Array(e.length/2),r=new Float32Array(e.length/2);for(let n=0;n<e.length;n+=2)t[n/2]=e[n],r[n/2]=e[n+1];return{real:t,imag:r}}function oK(e){let t=Math.ceil(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let t=0;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:r,imag:n}}function oq(e){let t=Math.floor(e.length/4),r=new Float32Array(t),n=new Float32Array(t);for(let t=2;t<e.length;t+=4)r[Math.floor(t/4)]=e[t],n[Math.floor(t/4)]=e[t+1];return{real:r,imag:n}}function oX(e,t){return{real:e[2*t],imag:e[2*t+1]}}function oY(e,t,r,n){e[2*n]=t,e[2*n+1]=r}function oQ(e,t){let r=new Float32Array(e/2),n=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let i=(t?2:-2)*Math.PI*(a/e);r[a]=Math.cos(i),n[a]=Math.sin(i)}return{real:r,imag:n}}function oZ(e,t,r){let n=(r?2:-2)*Math.PI*(e/t);return{real:Math.cos(n),imag:Math.sin(n)}}u(oG,"mergeRealAndImagArrays",function(){return oH}),u(oG,"splitRealAndImagArrays",function(){return oj}),u(oG,"complexWithEvenIndex",function(){return oK}),u(oG,"complexWithOddIndex",function(){return oq}),u(oG,"getComplexWithIndex",function(){return oX}),u(oG,"assignToTypedArray",function(){return oY}),u(oG,"exponents",function(){return oQ}),u(oG,"exponent",function(){return oZ});var oJ={};u(oJ,"decodeEinsumEquation",function(){return o1}),u(oJ,"getEinsumPermutation",function(){return o2}),u(oJ,"checkEinsumDimSizes",function(){return o3}),u(oJ,"getEinsumComputePath",function(){return o4}),u(oJ,"isIdentityPermutation",function(){return o6});let o0=/->/g;function o1(e,t){let r=((e=e.replace(/\s/g,"")).length-e.replace(o0,"").length)/2;if(r<1)throw Error("Equations without an arrow are not supported.");if(r>1)throw Error('Equation must contain exactly one arrow ("->").');let[n,a]=e.split("->");E(-1===n.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');let i=n.split(","),s=i.length;if(t!==s)throw Error(`Expected ${s} input tensors, received ${t}`);if(s>2)throw Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<a.length;++e){let t=a[e];if(!i.some(e=>-1!==e.indexOf(t)))throw Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<n.length;++e){let t=n[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}let u=Array(i.length);for(let e=0;e<s;++e){if(new Set(i[e].split("")).size!==i[e].length)throw Error(`Found duplicate axes in input component ${i[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<i[e].length;++t)u[e].push(o.indexOf(i[e][t]))}let l=o.length,d=a.length,h=[];for(let e=d;e<l;++e)h.push(e);return{allDims:o,summedDims:h,idDims:u}}function o2(e,t){let r=Array(e);r.fill(-1);for(let e=0;e<t.length;++e)r[t[e]]=e;let n=[];for(let t=0;t<e;++t)-1===r[t]&&n.push(t);return{permutationIndices:r=r.filter(e=>-1!==e),expandDims:n}}function o3(e,t,r){let n=Array(e);for(let e=0;e<r.length;++e){let a=r[e].shape;for(let r=0;r<t[e].length;++r)void 0===n[t[e][r]]?n[t[e][r]]=a[r]:E(n[t[e][r]]===a[r],()=>`Expected dimension ${n[t[e][r]]} at axis ${r} of input shaped ${JSON.stringify(a)}, but got dimension ${a[r]}`)}}function o4(e,t){let r=[],n=0;0===e.length&&e.push(-1),n=e.length+1;for(let e=0;e<n;++e)r.push([]);let a=[];for(let n=0;n<e.length;++n)for(let i of function(e,t){let r=[];for(let n=0;n<e.length;++n)(0===e[n].length||-1!==e[n].indexOf(t)||-1===t)&&r.push(n);return r}(t,e[n]))-1===a.indexOf(i)&&(r[n].push(i),a.push(i));return{path:e,steps:r}}function o6(e){return e.every((e,t)=>e===t)}var o5={};function o8(e,t,r=0){let n=[];if("number"==typeof t)E(e.shape[r]%t==0,()=>"Number of splits must evenly divide the axis."),n=Array(t).fill(e.shape[r]/t);else{E(1>=t.reduce((e,t)=>(-1===t&&(e+=1),e),0),()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(-1!==a){let n=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[r]-n}E(e.shape[r]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}u(o5,"prepareSplitSize",function(){return o8});var o7={};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function ue(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function ut(e,t,r){return`indices(${e}, 0) is invalid: ${t} >= ${r}`}u(o7,"getSparseFillEmptyRowsIndicesDenseShapeMismatch",function(){return o9}),u(o7,"getSparseFillEmptyRowsNegativeIndexErrorMessage",function(){return ue}),u(o7,"getSparseFillEmptyRowsOutOfRangeIndexErrorMessage",function(){return ut});var ur={};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function ua(e,t){return`size ${e} must be non-negative, not ${t}`}function ui(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function us(e,t){let r=_(e),n=_(t);return`Input to reshape is a SparseTensor with ${r}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${e} outputShape= ${t}`}function uo(e,t){let r=_(e),n=_(t);return`Input to reshape is a tensor with ${r} dense values, but the requested shape has ${n}. inputShape=${e} outputShape=${t}`}u(ur,"getSparseReshapeMultipleNegativeOneOutputDimErrorMessage",function(){return un}),u(ur,"getSparseReshapeNegativeOutputDimErrorMessage",function(){return ua}),u(ur,"getSparseReshapeEmptyTensorZeroOutputDimErrorMessage",function(){return ui}),u(ur,"getSparseReshapeInputOutputMultipleErrorMessage",function(){return us}),u(ur,"getSparseReshapeInputOutputMismatchErrorMessage",function(){return uo});var uu={};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ul(){return"segment ids must be >= 0"}function ud(){return"segment ids are not increasing"}function uh(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function up(e,t,r){return`Bad: indices[${e}] == ${t} out of range [0, ${r})`}u(uu,"getSparseSegmentReductionNegativeSegmentIdsErrorMessage",function(){return ul}),u(uu,"getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage",function(){return ud}),u(uu,"getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage",function(){return uh}),u(uu,"getSparseSegmentReductionIndicesOutOfRangeErrorMessage",function(){return up});var uc={};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uf(e,t){let r,n=!1;for(e<=ot?(r=e,n=!0):r=en(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=en(e,r+1);return r}function um(e,t,r){let n=[],a=e.length;for(let i=0;i<a;i++)i!==t?n.push(e[i]):n.push(r);return n}function ug(e,t,r,n){let a=t.shape.length,i=e.shape.length;if(0!==n&&(n<-a||n>a))throw Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${n}`);if(n<0&&(n+=a),n>i)throw Error(`batchDims (${n}) must be less than rank(x) (
    ${i}).`);if(r<n)throw Error(`batchDims (${n}) must be less than or equal to axis (${r}).`);for(let r=0;r<n;++r)if(e.shape[r]!==t.shape[r])throw Error(`x.shape[${r}]: ${e.shape[r]} should be equal to indices.shape[${r}]: ${t.shape[r]}.`);let s=e.shape[r],o=[],u=1,l=1,d=1;for(let t=0;t<n;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=n;t<r;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=n;e<a;e++)o.push(t.shape[e]);for(let t=r+1;t<i;t++)o.push(e.shape[t]),d*=e.shape[t];return{batchSize:u,sliceSize:d,outerSize:l,dimSize:s,outputShape:o}}function uy(e){try{return e.map(e=>nG(e))}catch(e){throw Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ux(e){return e.map(e=>nW(e))}u(uc,"segOpComputeOptimalWindowSize",function(){return uf}),u(uc,"computeOutShape",function(){return um}),u(uc,"collectGatherOpShapeInfo",function(){return ug}),p(sg,sy),p(sg,su),p(sg,sT),p(sg,sE),p(sg,sH),p(sg,{}),p(sg,s6),p(sg,oe),p(sg,ov),p(sg,oS),p(sg,oN),p(sg,oR),p(sg,oF),p(sg,oM),p(sg,r1),p(sg,oG),p(sg,oJ),p(sg,o5),p(sg,o7),p(sg,ur),p(sg,uu);let ub=ay({broadcastTo_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"broadcastTo","x"),n=r.shape;if(ed(t),t.length<r.rank)throw Error(`broadcastTo(): shape.length=${t.length} < input.rank=${r.rank}.`);if(t.length>r.rank){let e=r.shape.slice();for(;e.length<t.length;)e.unshift(1);r=sQ(r,e)}let a=r.shape,i=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])i[e]=1;else if(1!==r.shape[e])throw Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(0===i.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return iZ(r);let s={x:r};return ai.runKernel(rU,s,{reps:i})}});var uv={};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(e,t,r){if(A(e),null!=t&&3!==t.length)throw Error("tensor3d() requires shape to have three numbers");let n=ap(e,r);if(3!==n.length&&1!==n.length)throw Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor3d() requires shape to be provided when `values` are a flat array");return ab(e,t,n,r)}u(uv,"fromPixelsAsync",function(){return uC}),u(uv,"toPixels",function(){return uT}),u(uv,"draw",function(){return u$}),u(uv,"fromPixels",function(){return uN});let uS=!1;function uk(e,t=3){let r,a;if(t>4)throw Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let i=!1,s=!1,o=!1,u=!1,l=!1,d=!1;if(e.data instanceof Uint8Array)i=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)u=!0;else if(null!=e.getContext)l=!0;else if("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap)d=!0;else throw Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(null!=r5(rY,ai.backendName))return ai.runKernel(rY,{pixels:e},{numChannels:t});let[h,p]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(l)r=e.getContext("2d").getImageData(0,0,h,p).data;else if(s||i)r=e.data;else if(u||o||d){if(null==n){if("undefined"==typeof document){if("undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof OffscreenCanvasRenderingContext2D)n=new OffscreenCanvas(1,1).getContext("2d");else throw Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.")}else n=document.createElement("canvas").getContext("2d",{willReadFrequently:!0})}n.canvas.width=h,n.canvas.height=p,n.drawImage(e,0,0,h,p),r=n.getImageData(0,0,h,p).data}if(4===t)a=new Int32Array(r);else{let e=h*p;a=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)a[n*t+e]=r[4*n+e]}return uw(a,[p,h,t],"int32")}async function uC(e,t=3){var r;let n=null;if(ey.getBool("WRAP_TO_IMAGEBITMAP")&&"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&null!=(r=e)&&0!==r.width&&0!==r.height&&!(null!=e&&e.data instanceof Uint8Array)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return uk(n,t)}function uI(e){if(2!==e.rank&&3!==e.rank)throw Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function uT(e,t){let r=af(e,"img","toPixels");if(!(e instanceof n1)){let e=r;r=iQ(e,"int32"),e.dispose()}uI(r);let[n,a]=r.shape.slice(0,2),i=2===r.rank?1:r.shape[2],s=await r.data(),o="float32"===r.dtype?255:1,u=new Uint8ClampedArray(a*n*4);for(let e=0;e<n*a;++e){let t=[0,0,0,255];for(let n=0;n<i;n++){let a=s[e*i+n];if("float32"===r.dtype){if(a<0||a>1)throw Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===r.dtype&&(a<0||a>255))throw Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===i?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[n]=a*o}let n=4*e;u[n+0]=Math.round(t[0]),u[n+1]=Math.round(t[1]),u[n+2]=Math.round(t[2]),u[n+3]=Math.round(t[3])}if(null!=t){uS||null==r5(td,ai.backendName)||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),uS=!0),t.width=a,t.height=n;let e=t.getContext("2d"),r=new ImageData(u,a,n);e.putImageData(r,0,0)}return r!==e&&r.dispose(),u}function u$(e,t,r){let n=af(e,"img","draw");if(!(e instanceof n1)){let e=n;n=iQ(e,"int32"),e.dispose()}uI(n),function(e){let t=(null==e?void 0:e.alpha)||1;if(t>1||t<0)throw Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null==r?void 0:r.imageOptions);let a={image:n};ai.runKernel(td,a,{canvas:t,options:r})}let uN=ay({fromPixels_:uk}),uE=ay({clipByValue_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","clipByValue");return(E(t<=r,()=>`Error in clip: min (${t}) must be less than or equal to max (${r}).`),t===r)?sa(n.shape,t,n.dtype):ai.runKernel(eJ,{x:n},{clipValueMin:t,clipValueMax:r})}}),uR=ay({concat_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){E(e.length>=1,()=>"Pass at least one tensor to concat");let r=am(e,"tensors","concat","string_or_numeric");return("complex64"===r[0].dtype&&r.forEach(e=>{if("complex64"!==e.dtype)throw Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${e.dtype}. `)}),1===r.length)?iZ(r[0]):ai.runKernel(e2,r,{axis:t})}}),uA=ay({exp_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","exp");return ai.runKernel("Exp",{x:t})}}),u_=ay({expandDims_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=af(e,"x","expandDims","string_or_numeric");return E(t<=r.rank,()=>"Axis must be <= rank of the tensor"),ai.runKernel(tm,{input:r},{dim:t})}});var uO={};u(uO,"spectral",function(){return pR}),u(uO,"signal",function(){return pA}),u(uO,"image",function(){return p_}),u(uO,"linalg",function(){return pO}),u(uO,"losses",function(){return pF}),u(uO,"sparse",function(){return pD}),u(uO,"string",function(){return pP}),u(uO,"abs",function(){return so}),u(uO,"acos",function(){return uF}),u(uO,"acosh",function(){return uD}),u(uO,"add",function(){return i0}),u(uO,"addN",function(){return uP}),u(uO,"all",function(){return uM}),u(uO,"any",function(){return uL}),u(uO,"argMax",function(){return sm}),u(uO,"argMin",function(){return uB}),u(uO,"asin",function(){return uz}),u(uO,"asinh",function(){return uU}),u(uO,"atan",function(){return uV}),u(uO,"atan2",function(){return uW}),u(uO,"atanh",function(){return uG}),u(uO,"avgPool",function(){return uH}),u(uO,"avgPool3d",function(){return uj}),u(uO,"basicLSTMCell",function(){return uY}),u(uO,"batchToSpaceND",function(){return uQ}),u(uO,"batchNorm",function(){return uZ}),u(uO,"batchNorm2d",function(){return uJ}),u(uO,"batchNorm3d",function(){return u0}),u(uO,"batchNorm4d",function(){return u1}),u(uO,"bincount",function(){return u2}),u(uO,"bitwiseAnd",function(){return u3}),u(uO,"broadcastArgs",function(){return u4}),u(uO,"broadcastTo",function(){return ub}),u(uO,"buffer",function(){return iY}),u(uO,"cast",function(){return iQ}),u(uO,"ceil",function(){return u6}),u(uO,"clipByValue",function(){return uE}),u(uO,"clone",function(){return iZ}),u(uO,"complex",function(){return ax}),u(uO,"concat",function(){return uR}),u(uO,"concat1d",function(){return u5}),u(uO,"concat2d",function(){return u8}),u(uO,"concat3d",function(){return u7}),u(uO,"concat4d",function(){return u9}),u(uO,"conv1d",function(){return lt}),u(uO,"conv2d",function(){return le}),u(uO,"conv2dTranspose",function(){return ln}),u(uO,"conv3d",function(){return la}),u(uO,"conv3dTranspose",function(){return ls}),u(uO,"cos",function(){return lo}),u(uO,"cosh",function(){return lu}),u(uO,"cumprod",function(){return ll}),u(uO,"cumsum",function(){return ld}),u(uO,"denseBincount",function(){return lh}),u(uO,"depthToSpace",function(){return lp}),u(uO,"depthwiseConv2d",function(){return lc}),u(uO,"diag",function(){return lf}),u(uO,"dilation2d",function(){return lm}),u(uO,"div",function(){return i2}),u(uO,"divNoNan",function(){return lx}),u(uO,"dot",function(){return lb}),u(uO,"einsum",function(){return lv}),u(uO,"elu",function(){return sj}),u(uO,"ensureShape",function(){return lw}),u(uO,"equal",function(){return lg}),u(uO,"erf",function(){return lS}),u(uO,"euclideanNorm",function(){return l$}),u(uO,"exp",function(){return uA}),u(uO,"expandDims",function(){return u_}),u(uO,"expm1",function(){return lN}),u(uO,"eye",function(){return lR}),u(uO,"fill",function(){return sa}),u(uO,"floor",function(){return lA}),u(uO,"floorDiv",function(){return i1}),u(uO,"gather",function(){return l_}),u(uO,"greater",function(){return lO}),u(uO,"greaterEqual",function(){return lF}),u(uO,"imag",function(){return lD}),u(uO,"isFinite",function(){return lP}),u(uO,"isInf",function(){return lM}),u(uO,"isNaN",function(){return lL}),u(uO,"leakyRelu",function(){return sK}),u(uO,"less",function(){return lB}),u(uO,"lessEqual",function(){return lz}),u(uO,"linspace",function(){return lU}),u(uO,"localResponseNormalization",function(){return lV}),u(uO,"log",function(){return lW}),u(uO,"log1p",function(){return lG}),u(uO,"logSigmoid",function(){return lK}),u(uO,"logSoftmax",function(){return lq}),u(uO,"logSumExp",function(){return lX}),u(uO,"logicalAnd",function(){return lY}),u(uO,"logicalNot",function(){return lQ}),u(uO,"logicalOr",function(){return lZ}),u(uO,"logicalXor",function(){return lJ}),u(uO,"lowerBound",function(){return l2}),u(uO,"matMul",function(){return uK}),u(uO,"max",function(){return lC}),u(uO,"maxPool",function(){return l3}),u(uO,"maxPool3d",function(){return l4}),u(uO,"maxPoolWithArgmax",function(){return l6}),u(uO,"maximum",function(){return sp}),u(uO,"mean",function(){return l5}),u(uO,"meshgrid",function(){return l9}),u(uO,"min",function(){return lI}),u(uO,"minimum",function(){return de}),u(uO,"mirrorPad",function(){return dt}),u(uO,"mod",function(){return dr}),u(uO,"moments",function(){return dn}),u(uO,"mul",function(){return i3}),u(uO,"multiRNNCell",function(){return da}),u(uO,"multinomial",function(){return di}),u(uO,"neg",function(){return lH}),u(uO,"notEqual",function(){return ds}),u(uO,"oneHot",function(){return du}),u(uO,"ones",function(){return l7}),u(uO,"onesLike",function(){return dl}),u(uO,"outerProduct",function(){return dd}),u(uO,"pad",function(){return dh}),u(uO,"pad1d",function(){return dp}),u(uO,"pad2d",function(){return dc}),u(uO,"pad3d",function(){return df}),u(uO,"pad4d",function(){return dm}),u(uO,"pool",function(){return dy}),u(uO,"pow",function(){return si}),u(uO,"prelu",function(){return sq}),u(uO,"print",function(){return iJ}),u(uO,"prod",function(){return dx}),u(uO,"raggedGather",function(){return db}),u(uO,"raggedRange",function(){return dv}),u(uO,"raggedTensorToTensor",function(){return dw}),u(uO,"rand",function(){return dS}),u(uO,"randomGamma",function(){return dF}),u(uO,"randomNormal",function(){return dD}),u(uO,"randomStandardNormal",function(){return dP}),u(uO,"randomUniform",function(){return dM}),u(uO,"randomUniformInt",function(){return dL}),u(uO,"range",function(){return dB}),u(uO,"real",function(){return dz}),u(uO,"reciprocal",function(){return dU}),u(uO,"relu",function(){return sX}),u(uO,"relu6",function(){return sY}),u(uO,"reshape",function(){return sQ}),u(uO,"reverse",function(){return dV}),u(uO,"reverse1d",function(){return dW}),u(uO,"reverse2d",function(){return dG}),u(uO,"reverse3d",function(){return dH}),u(uO,"reverse4d",function(){return dj}),u(uO,"round",function(){return dK}),u(uO,"rsqrt",function(){return dq}),u(uO,"scalar",function(){return i7}),u(uO,"selu",function(){return dX}),u(uO,"separableConv2d",function(){return dY}),u(uO,"setdiff1dAsync",function(){return dQ}),u(uO,"sigmoid",function(){return sZ}),u(uO,"sign",function(){return dZ}),u(uO,"sin",function(){return dJ}),u(uO,"sinh",function(){return d0}),u(uO,"slice",function(){return uq}),u(uO,"slice1d",function(){return d1}),u(uO,"slice2d",function(){return d2}),u(uO,"slice3d",function(){return d3}),u(uO,"slice4d",function(){return d4}),u(uO,"softmax",function(){return d6}),u(uO,"softplus",function(){return lj}),u(uO,"spaceToBatchND",function(){return dg}),u(uO,"fft",function(){return d5}),u(uO,"ifft",function(){return d8}),u(uO,"irfft",function(){return d7}),u(uO,"rfft",function(){return he}),u(uO,"split",function(){return d9}),u(uO,"sqrt",function(){return i4}),u(uO,"square",function(){return i6}),u(uO,"squaredDifference",function(){return ht}),u(uO,"squeeze",function(){return hr}),u(uO,"stack",function(){return hn}),u(uO,"step",function(){return sJ}),u(uO,"stridedSlice",function(){return ha}),u(uO,"sub",function(){return ss}),u(uO,"sum",function(){return s0}),u(uO,"tan",function(){return hi}),u(uO,"tanh",function(){return uX}),u(uO,"tensor",function(){return av}),u(uO,"tensor1d",function(){return hs}),u(uO,"tensor2d",function(){return ho}),u(uO,"tensor3d",function(){return uw}),u(uO,"tensor4d",function(){return hu}),u(uO,"tensor5d",function(){return hl}),u(uO,"tensor6d",function(){return hd}),u(uO,"tensorScatterUpdate",function(){return hh}),u(uO,"tile",function(){return lE}),u(uO,"topk",function(){return hp}),u(uO,"truncatedNormal",function(){return hc}),u(uO,"unique",function(){return hf}),u(uO,"unsortedSegmentSum",function(){return hm}),u(uO,"unstack",function(){return hg}),u(uO,"upperBound",function(){return hy}),u(uO,"variable",function(){return hx}),u(uO,"where",function(){return ly}),u(uO,"whereAsync",function(){return hv}),u(uO,"zeros",function(){return l8}),u(uO,"zerosLike",function(){return i5}),u(uO,"op",function(){return ay}),u(uO,"OP_SCOPE_SUFFIX",function(){return ag}),u(uO,"fused",function(){return hz});let uF=ay({acos_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","acos");return ai.runKernel(e_,{x:t})}}),uD=ay({acosh_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","acosh");return ai.runKernel(eO,{x:t})}}),uP=ay({addN_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){E(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),E(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((e,t)=>af(e,`tensors${t}`,"addN")),r=t[0];return t.forEach(e=>{if(e.dtype!==r.dtype)throw Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!D(e.shape,r.shape))throw Error("All tensors passed to tf.addN() must have the same shape")}),ai.runKernel(eF,t)}}),uM=ay({all_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","all","bool");return ai.runKernel("All",{x:n},{axis:t,keepDims:r})}}),uL=ay({any_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","any","bool");return ai.runKernel("Any",{x:n},{axis:t,keepDims:r})}}),uB=ay({argMin_:/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=af(e,"x","argMin");return ai.runKernel(eP,{x:r},{axis:t})}}),uz=ay({asin_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","asin");return ai.runKernel(eM,{x:t})}}),uU=ay({asinh_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","asinh");return ai.runKernel(eL,{x:t})}}),uV=ay({atan_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","atan");return ai.runKernel(eB,{x:t})}}),uW=ay({atan2_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","atan2"),n=af(t,"b","atan2");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel(eU,a)}}),uG=ay({atanh_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","atanh");return ai.runKernel(ez,{x:t})}}),uH=ay({avgPool_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a){let i=af(e,"x","avgPool","float32");E(sU(r,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`);let s=i,o=!1;3===i.rank&&(o=!0,s=sQ(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(4===s.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${s.rank}.`),sG("avgPool",n,a);let u={x:s},l=ai.runKernel(eV,u,{filterSize:t,strides:r,pad:n,dimRoundingMode:a});return(l=iQ(l,i.dtype),o)?sQ(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),uj=ay({avgPool3d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a,i="NDHWC"){let s=af(e,"x","avgPool3d","float32"),o=s,u=!1;4===s.rank&&(u=!0,o=sQ(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),E(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),E("NDHWC"===i,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),E("number"==typeof r&&r>0||Array.isArray(r)&&r[0]>0&&r[1]>0&&r[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${r}'`),sG("avgPool3d",n,a);let l={x:o},d=ai.runKernel(eG,l,{filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:i});return(d=iQ(d,o.dtype),u)?sQ(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),uK=ay({matMul_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=!1,n=!1){let a=af(e,"a","matMul"),i=af(t,"b","matMul");[a,i]=n9(a,i);let s={a:a,b:i};return ai.runKernel(ej,s,{transposeA:r,transposeB:n})}}),uq=ay({slice_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","slice","string_or_numeric");if(0===n.rank)throw Error("Slicing scalar is not possible");return ai.runKernel(rb,{x:n},{begin:t,size:r})}}),uX=ay({tanh_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","tanh","float32");return ai.runKernel(rz,{x:t})}}),uY=ay({basicLSTMCell_:function(e,t,r,n,a,i){let s=af(e,"forgetBias","basicLSTMCell"),o=af(t,"lstmKernel","basicLSTMCell"),u=af(r,"lstmBias","basicLSTMCell"),l=af(n,"data","basicLSTMCell"),d=af(a,"c","basicLSTMCell"),h=i0(uK(uR([l,af(i,"h","basicLSTMCell")],1),o),u),p=h.shape[0],c=h.shape[1]/4,f=[p,c],m=uq(h,[0,0],f),g=uq(h,[0,c],f),y=uq(h,[0,2*c],f),x=uq(h,[0,3*c],f),b=i0(i3(sZ(m),uX(g)),i3(d,sZ(i0(s,y)))),v=i3(uX(b),sZ(x));return[b,v]}}),uQ=ay({batchToSpaceND_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);return E(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),E(r.length===t.length,()=>`crops.length is ${r.length} but should be equal to blockShape.length  ${t.length}`),E(n.shape[0]%a==0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`),ai.runKernel(eK,{x:n},{blockShape:t,crops:r})}}),uZ=ay({batchNorm_:function(e,t,r,n,a,i){let s,o;null==i&&(i=.001);let u=af(e,"x","batchNorm"),l=af(t,"mean","batchNorm"),d=af(r,"variance","batchNorm");null!=a&&(s=af(a,"scale","batchNorm")),null!=n&&(o=af(n,"offset","batchNorm")),E(l.rank===d.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),E(null==o||l.rank===o.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),E(null==s||l.rank===s.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let h={x:0===u.rank||1===u.rank?sQ(u,[1,1,1,u.size]):2===u.rank?sQ(u,[1,1,u.shape[0],u.shape[1]]):3===u.rank?sQ(u,[1,u.shape[0],u.shape[1],u.shape[2]]):u,scale:s,offset:o,mean:l,variance:d},p={varianceEpsilon:i};return sQ(ai.runKernel(tw,h,p),u.shape)}}),uJ=ay({batchNorm2d_:function(e,t,r,n,a,i){let s,o;let u=af(e,"x","batchNorm"),l=af(t,"mean","batchNorm"),d=af(r,"variance","batchNorm");return null!=a&&(s=af(a,"scale","batchNorm")),null!=n&&(o=af(n,"offset","batchNorm")),E(2===u.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${u.rank}.`),E(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),E(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${d.rank}.`),null!=s&&E(2===s.rank||1===s.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${s.rank}.`),null!=o&&E(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`),uZ(u,l,d,o,s,i)}}),u0=ay({batchNorm3d_:function(e,t,r,n,a,i){let s,o;let u=af(e,"x","batchNorm"),l=af(t,"mean","batchNorm"),d=af(r,"variance","batchNorm");return null!=a&&(s=af(a,"scale","batchNorm")),null!=n&&(o=af(n,"offset","batchNorm")),E(3===u.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${u.rank}.`),E(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),E(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${d.rank}.`),null!=s&&E(3===s.rank||1===s.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${s.rank}.`),null!=o&&E(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`),uZ(u,l,d,o,s,i)}}),u1=ay({batchNorm4d_:function(e,t,r,n,a,i){let s,o;let u=af(e,"x","batchNorm"),l=af(t,"mean","batchNorm"),d=af(r,"variance","batchNorm");return null!=a&&(s=af(a,"scale","batchNorm")),null!=n&&(o=af(n,"offset","batchNorm")),E(4===u.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${u.rank}.`),E(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),E(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${d.rank}.`),null!=s&&E(4===s.rank||1===s.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${s.rank}.`),null!=o&&E(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`),uZ(u,l,d,o,s,i)}}),u2=ay({bincount_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","bincount"),a=af(t,"weights","bincount");return E("int32"===n.dtype,()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),E(r>=0,()=>`size must be non-negative, but got ${r}.`),E(a.size===n.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${a.shape}.`),ai.runKernel(eq,{x:n,weights:a},{size:r})}}),u3=ay({bitwiseAnd_:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","bitwiseAnd"),n=af(t,"y","bitwiseAnd");if(!D(r.shape,n.shape))throw Error(`BitwiseAnd: Tensors must have the same shape. x: ${r.shape}, y: ${n.shape}`);if("int32"!==r.dtype||"int32"!==n.dtype)throw Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${r.dtype} and type of y: ${n.dtype}`);return ai.runKernel(eX,{a:r,b:n})}}),u4=ay({broadcastArgs_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"s0","broadcastArgs","int32"),n=af(t,"s1","broadcastArgs","int32");if(1!==r.rank)throw Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${r.rank}`);if(1!==n.rank)throw Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);return ai.runKernel(eY,{s0:r,s1:n})}}),u6=ay({ceil_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","ceil","float32");return ai.runKernel(eZ,{x:t})}}),u5=ay({concat1d_:function(e){return uR(e,0)}}),u8=ay({concat2d_:function(e,t){return uR(e,t)}}),u7=ay({concat3d_:function(e,t){return uR(e,t)}}),u9=ay({concat4d_:function(e,t){return uR(e,t)}}),le=ay({conv2d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a="NHWC",i=[1,1],s){let o=af(e,"x","conv2d","float32"),u=af(t,"filter","conv2d","float32"),l=o,d=!1;3===o.rank&&(d=!0,l=sQ(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),E(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),sG("conv2d",n,s);let h="NHWC"===a?l.shape[3]:l.shape[1];E(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),E(sU(r,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`),E(sV(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),E(sV(r),()=>"Error in conv2D: Strides should be larger than 0.");let p={x:l,filter:u},c=ai.runKernel(e3,p,{strides:r,pad:n,dataFormat:a,dilations:i,dimRoundingMode:s});return d?sQ(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),lt=ay({conv1d_:function(e,t,r,n,a="NWC",i=1,s){let o=af(e,"x","conv1d"),u=af(t,"filter","conv1d"),l=o,d=!1;2===o.rank&&(d=!0,l=sQ(o,[1,o.shape[0],o.shape[1]])),E(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),E(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),sG("conv1d",n,s),E(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),E(sU(r,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${r} and dilation '${i}'`),E(sV(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),E(sV(r),()=>"Error in conv1D: Stride should be larger than 0."),E("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let h=sQ(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=le(sQ(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h,[1,r],n,"NHWC",[1,i],s);return d?sQ(p,[p.shape[2],p.shape[3]]):sQ(p,[p.shape[0],p.shape[2],p.shape[3]])}}),lr=ay({conv2DBackpropInput_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a,i="NHWC",s){E(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=sQ(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),E(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),E(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),E(4===r.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${r.rank}`);let d="NHWC"===i?o[3]:o[1],h="NHWC"===i?u.shape[3]:u.shape[1];E(d===r.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${r.shape[2]}.`),E(h===r.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${r.shape[3]}.`),sG("conv2dDerInput",a,s);let p={dy:u,filter:r},c={strides:n,pad:a,dataFormat:i,dimRoundingMode:s,inputShape:o},f=ai.runKernel(e6,p,c);return l?sQ(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ln=ay({conv2dTranspose_:function(e,t,r,n,a,i){return lr(r,af(e,"x","conv2dTranspose"),af(t,"filter","conv2dTranspose"),n,a,"NHWC",i)}}),la=ay({conv3d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a="NDHWC",i=[1,1,1]){let s=af(e,"x","conv3d"),o=af(t,"filter","conv3d"),u=s,l=!1;4===s.rank&&(l=!0,u=sQ(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),E(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),E(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),E(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),E(sU(r,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`),E("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),E(sV(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),E(sV(r),()=>"Error in conv3D: Strides should be larger than 0.");let d={x:u,filter:o},h=ai.runKernel(e5,d,{strides:r,pad:n,dataFormat:a,dilations:i});return l?sQ(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),li=ay({conv3DBackpropInput_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a){E(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,s=t,o=!1;4===t.rank&&(o=!0,s=sQ(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);let u=i[4],l=s.shape[4];E(5===i.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),E(5===s.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`),E(5===r.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${r.rank}`),E(u===r.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${r.shape[3]}.`),E(l===r.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${r.shape[4]}.`);let d={dy:s,filter:r},h={pad:a,strides:n,inputShape:i},p=ai.runKernel(e7,d,h);return o?sQ(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ls=ay({conv3dTranspose_:function(e,t,r,n,a){return li(r,af(e,"x","conv3dTranspose"),af(t,"filter","conv3dTranspose"),n,a)}}),lo=ay({cos_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","cos","float32");return ai.runKernel("Cos",{x:t})}}),lu=ay({cosh_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","cosh","float32");return ai.runKernel(e9,{x:t})}}),ll=ay({cumprod_:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0,r=!1,n=!1){let a=af(e,"x","cumprod");return ai.runKernel(te,{x:a},{axis:t,exclusive:r,reverse:n})}}),ld=ay({cumsum_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0,r=!1,n=!1){let a=af(e,"x","cumsum");return ai.runKernel(tt,{x:a},{axis:t,exclusive:r,reverse:n})}}),lh=ay({denseBincount_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=!1){let a=af(e,"x","denseBincount"),i=af(t,"weights","denseBincount");return E("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),E(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),E(r>=0,()=>`size must be non-negative, but got ${r}.`),E(i.size===a.size||0===i.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${i.shape}.`),ai.runKernel(tn,{x:a,weights:i},{size:r,binaryOutput:n})}}),lp=ay({depthToSpace_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r="NHWC"){let n=af(e,"x","depthToSpace","float32"),a="NHWC"===r?n.shape[1]:n.shape[2],i="NHWC"===r?n.shape[2]:n.shape[3],s="NHWC"===r?n.shape[3]:n.shape[1];return E(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),E(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${n.shape}`),E(i*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${t} for depthToSpace with input shape
        ${n.shape}`),E(s%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${s} for depthToSpace with input shape ${n.shape}`),ai.runKernel(ta,{x:n},{blockSize:t,dataFormat:r})}}),lc=ay({depthwiseConv2d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a="NHWC",i=[1,1],s){let o=af(e,"x","depthwiseConv2d","float32"),u=af(t,"filter","depthwiseConv2d","float32"),l=o,d=!1;3===o.rank&&(d=!0,l=sQ(o,[1,o.shape[0],o.shape[1],o.shape[2]])),E(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),E(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let h="NHWC"===a?l.shape[3]:l.shape[1];E(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),sG("depthwiseConv2d",n,s);let p={x:l,filter:u},c=ai.runKernel(ti,p,{strides:r,pad:n,dataFormat:a,dilations:i,dimRoundingMode:s});return d?sQ(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),lf=ay({diag_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","diag");return ai.runKernel(tu,{x:t})}}),lm=ay({dilation2d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a=[1,1],i="NHWC"){let s=af(e,"x","dilation2d"),o=af(t,"filter","dilation2d");E(3===s.rank||4===s.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${s.rank}.`),E(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),E("NHWC"===i,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let u=s,l=!1;3===s.rank&&(u=sQ(s,[1,s.shape[0],s.shape[1],s.shape[2]]),l=!0),E(u.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`);let d={x:u,filter:o},h=ai.runKernel(tl,d,{strides:r,pad:n,dilations:a});return l?sQ(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),lg=ay({equal_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","equal","string_or_numeric"),n=af(t,"b","equal","string_or_numeric");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tf,a)}}),ly=ay({where_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(t,"a","where"),a=af(r,"b","where"),i=af(e,"condition","where","bool"),s=sh(sh(i.shape,n.shape),a.shape),o=ub(i,s),u=ub(n,s),l=ub(a,s);return ai.runKernel(ry,{condition:o,t:u,e:l})}}),lx=ay({divNoNan_:function(e,t){let r=af(e,"a","div"),n=af(t,"b","div");[r,n]=n9(r,n);let a=i2(r,n),i=i5(a);return ly(lg(n,i),i,a)}}),lb=ay({dot_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"t1","dot"),n=af(t,"t2","dot");E((1===r.rank||2===r.rank)&&(1===n.rank||2===n.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${r.rank} and ${n.rank}.`);let a=1===r.rank?r.size:r.shape[1],i=1===n.rank?n.size:n.shape[0];if(E(a===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${i}.`),1===r.rank&&1===n.rank){let e=uK(sQ(r,[1,-1]),sQ(n,[-1,1]));return sQ(e,[])}if(1===r.rank&&2===n.rank){let e=uK(sQ(r,[1,-1]),sQ(n,[n.shape[0],n.shape[1]]));return sQ(e,[e.size])}if(2!==r.rank||1!==n.rank)return uK(r,sQ(n,[n.shape[0],n.shape[1]]));{let e=uK(r,sQ(n,[-1,1]));return sQ(e,[e.size])}}}),lv=ay({einsum_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,...t){let r=t.map((e,t)=>af(e,`tensors${t}`,"einsum"));return ai.runKernel(tp,r,{equation:e})}}),lw=ay({ensureShape_:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","ensureShape","string_or_numeric");if(!F(r.shape,t))throw Error(`EnsureShape: Shape of tensor ${r.shape} is not compatible with expected shape ${t}`);return e}}),lS=ay({erf_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","erf");E("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=iQ(t,"float32"));let r={x:t};return ai.runKernel("Erf",r)}});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var lk={};u(lk,"norm",function(){return lT});let lC=ay({max_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","max");return ai.runKernel("Max",{x:n},{reductionIndices:t,keepDims:r})}}),lI=ay({min_:/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","min");return ai.runKernel("Min",{x:n},{axis:t,keepDims:r})}}),lT=ay({norm_:function(e,t="euclidean",r=null,n=!1){let a=function e(t,r,n=null){if(0===t.rank)return so(t);if(1!==t.rank&&null===n)return e(sQ(t,[-1]),r,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===r)return s0(so(t),n);if(r===1/0)return lC(so(t),n);if(r===-1/0)return lI(so(t),n);if("euclidean"===r||2===r)return i4(s0(si(so(t),i7(2,"int32")),n));throw Error(`Error in norm: invalid ord value: ${r}`)}if(Array.isArray(n)&&2===n.length){if(1===r)return lC(s0(so(t),n[0]),n[1]-1);if(r===1/0)return lC(s0(so(t),n[1]),n[0]);if(r===-1/0)return lI(s0(so(t),n[1]),n[0]);if("fro"===r||"euclidean"===r)return i4(s0(i6(t),n));throw Error(`Error in norm: invalid ord value: ${r}`)}throw Error(`Error in norm: invalid axis: ${n}`)}(e=af(e,"x","norm"),t,r),i=a.shape;if(n){let t=W(r,e.shape);i=sw(a.shape,t)}return sQ(a,i)}}),l$=ay({euclideanNorm_:function(e,t=null,r=!1){return lT(e,"euclidean",t,r)}}),lN=ay({expm1_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","expm1");return ai.runKernel(tg,{x:t})}}),lE=ay({tile_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","tile","string_or_numeric");return E(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of reps ${t}.`),ai.runKernel(rU,{x:r},{reps:t})}}),lR=ay({eye_:function(e,t,r,n="float32"){null==t&&(t=e);let a=iY([e,t],n),i=e<=t?e:t;for(let e=0;e<i;++e)a.set(1,e,e);let s=sQ(a.toTensor(),[e,t]);if(null==r)return s;if(1===r.length)return lE(u_(s,0),[r[0],1,1]);if(2===r.length)return lE(u_(u_(s,0),0),[r[0],r[1],1,1]);if(3===r.length)return lE(u_(u_(u_(s,0),0),0),[r[0],r[1],r[2],1,1]);throw Error(`eye() currently supports only 1D and 2D batchShapes, but received ${r.length}D.`)}}),lA=ay({floor_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","floor","float32");return ai.runKernel(tb,{x:t})}}),l_=ay({gather_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=0,n=0){let a=af(e,"x","gather"),i=af(t,"indices","gather","int32");return ai.runKernel(tS,{x:a,indices:i},{axis:r,batchDims:n})}}),lO=ay({greater_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","greater","string_or_numeric"),n=af(t,"b","greater","string_or_numeric");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tC,a)}}),lF=ay({greaterEqual_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","greaterEqual","string_or_numeric"),n=af(t,"b","greaterEqual","string_or_numeric");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tI,a)}}),lD=ay({imag_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"input","imag");return ai.runKernel(tN,{input:t})}}),lP=ay({isFinite_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","isFinite");return ai.runKernel(tE,{x:t})}}),lM=ay({isInf_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","isInf");return ai.runKernel(tR,{x:t})}}),lL=ay({isNaN_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","isNaN");return ai.runKernel(tA,{x:t})}}),lB=ay({less_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","less","string_or_numeric"),n=af(t,"b","less","string_or_numeric");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tO,a)}}),lz=ay({lessEqual_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","lessEqual","string_or_numeric"),n=af(t,"b","lessEqual","string_or_numeric");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tF,a)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lU(e,t,r){if(r<=0)throw Error("The number of values should be positive.");return ai.runKernel(tD,{},{start:e,stop:t,num:r})}let lV=ay({localResponseNormalization_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=5,r=1,n=1,a=.5){let i=af(e,"x","localResponseNormalization");E(4===i.rank||3===i.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),E(P(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let s=i,o=!1;3===i.rank&&(o=!0,s=sQ(i,[1,i.shape[0],i.shape[1],i.shape[2]]));let u={x:s},l=ai.runKernel("LRN",u,{depthRadius:t,bias:r,alpha:n,beta:a});return o?sQ(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),lW=ay({log_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","log","float32");return ai.runKernel("Log",{x:t})}}),lG=ay({log1p_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","log1p");return ai.runKernel(tP,{x:t})}}),lH=ay({neg_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","neg");return ai.runKernel("Neg",{x:t})}}),lj=ay({softplus_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","softplus");return ai.runKernel(rk,{x:t})}}),lK=ay({logSigmoid_:function(e){let t=af(e,"x","logSigmoid");return i8(e=>({value:lH(lj(lH(e))),gradFunc:t=>i3(t,sZ(lH(e)))}))(t)}}),lq=ay({logSoftmax_:/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=-1){let r=af(e,"logits","logSoftmax");if(-1===t&&(t=r.rank-1),t!==r.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and axis was ${t}`);return i8((e,r)=>{let n=lC(e,t,!0),a=ss(e,n),i=ss(iQ(a,"float32"),lW(s0(uA(a),t,!0)));return r([i]),{value:i,gradFunc:(e,r)=>{let[n]=r,a=uA(n);return ss(e,i3(s0(e,t,!0),a))}}})(r)}}),lX=ay({logSumExp_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","logSumExp"),a=W(t,n.shape),i=lC(n,a,!0),s=lW(s0(uA(ss(n,i)),a)),o=i0(sQ(i,s.shape),s);if(r){let e=sw(o.shape,a);return sQ(o,e)}return o}}),lY=ay({logicalAnd_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","logicalAnd","bool"),n=af(t,"b","logicalAnd","bool");return sh(r.shape,n.shape),ai.runKernel(tM,{a:r,b:n})}}),lQ=ay({logicalNot_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","logicalNot","bool");return ai.runKernel(tL,{x:t})}}),lZ=ay({logicalOr_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","logicalOr","bool"),n=af(t,"b","logicalOr","bool");return sh(r.shape,n.shape),ai.runKernel(tB,{a:r,b:n})}}),lJ=ay({logicalXor_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","logicalXor","bool"),n=af(t,"b","logicalXor","bool");return sh(r.shape,n.shape),lY(lZ(e,t),lQ(lY(e,t)))}});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var l0={};u(l0,"searchSorted",function(){return l1});let l1=ay({searchSorted_:function(e,t,r="left"){let n=af(e,"sortedSequence","searchSorted"),a=af(t,"values","searchSorted"),i=n.shape[n.shape.length-1],s=a.shape[a.shape.length-1],o=sQ(n,[-1,i]),u=sQ(a,[-1,s]);if(o.rank<2)throw Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(_(u.shape)>=2147483648)throw Error("values tensor size must less than 2147483648");if(o.shape[1]>=2147483648)throw Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);return ai.runKernel(rg,{sortedSequence:o,values:u},{side:r})}});function l2(e,t){return l1(e,t,"left")}let l3=ay({maxPool_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a){let i=af(e,"x","maxPool"),s=i,o=!1;3===i.rank&&(o=!0,s=sQ(i,[1,i.shape[0],i.shape[1],i.shape[2]])),E(4===s.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${s.rank}.`),E(sU(r,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '1'`),sG("maxPool",n,a);let u={x:s},l=ai.runKernel(tV,u,{filterSize:t,strides:r,pad:n,dimRoundingMode:a});return o?sQ(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),l4=ay({maxPool3d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=[1,1,1],r,n,a,i="NDHWC"){let s=af(e,"x","maxPool3d"),o=s,u=!1;4===s.rank&&(u=!0,o=sQ(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),E(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),E("NDHWC"===i,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),sG("maxPool3d",n,a);let l={x:o},d=ai.runKernel(tG,l,{filterSize:t,strides:r,pad:n,dimRoundingMode:a,dataFormat:i});return u?sQ(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),l6=ay({maxPoolWithArgmax_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a=!1){let i=af(e,"x","maxPoolWithArgmax"),s=ai.runKernel(tj,{x:i},{filterSize:t,strides:r,pad:n,includeBatchInIndex:a});return{result:s[0],indexes:s[1]}}}),l5=ay({mean_:/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","mean");return ai.runKernel(tK,{x:n},{axis:t,keepDims:r})}});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(e,t="float32"){if(ed(e),"complex64"===t)return ax(l8(e,"float32"),l8(e,"float32"));let r=eu(_(e),t);return ai.makeTensor(r,e,t)}function l7(e,t="float32"){if(ed(e),"complex64"===t)return ax(l7(e,"float32"),l8(e,"float32"));let r=eo(_(e),t);return ai.makeTensor(r,e,t)}function l9(e,t,{indexing:r="xy"}={}){if("xy"!==r&&"ij"!==r)throw TypeError(`${r} is not a valid third argument to meshgrid`);if(void 0===e)return[];let n=af(e,"x","meshgrid",e instanceof n1?e.dtype:"float32");if(void 0===t)return[n];let a=af(t,"y","meshgrid",t instanceof n1?t.dtype:"float32"),i=_(n.shape),s=_(a.shape);return"xy"===r?(n=sQ(n,[1,-1]),a=sQ(a,[-1,1]),[uK(l7([s,1],n.dtype),n),uK(a,l7([1,i],a.dtype))]):(n=sQ(n,[-1,1]),a=sQ(a,[1,-1]),[uK(n,l7([1,s],n.dtype)),uK(l7([i,1],a.dtype),a)])}let de=ay({minimum_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","minimum"),n=af(t,"b","minimum");[r,n]=n9(r,n),"bool"===r.dtype&&(r=iQ(r,"int32"),n=iQ(n,"int32")),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tq,a)}}),dt=ay({mirrorPad_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){E("reflect"===r||"symmetric"===r,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${r}.`);let n=af(e,"x","mirrorPad");if(0===n.rank)throw Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");E(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let a="reflect"===r?1:0;for(let e=0;e<n.rank;e++)E(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),E(t[e][0]>=0&&t[e][0]<=n.shape[e]-a&&t[e][1]>=0&&t[e][1]<=n.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal to ${n.shape[e]-a} or less than 0 for input of shape ${n.shape}`);return ai.runKernel(tX,{x:n},{paddings:t,mode:r})}}),dr=ay({mod_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","mod"),n=af(t,"b","mod");[r,n]=n9(r,n);let a={a:r,b:n};return ai.runKernel("Mod",a)}}),dn=ay({moments_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=W(t,(e=af(e,"x","moments")).shape),a=l5(e,n,r),i=a.shape;r||(i=sw(a.shape,n));let s=l5(i6(ss(iQ(e,"float32"),sQ(a,i))),n,r);return{mean:a,variance:s}}}),da=ay({multiRNNCell_:function(e,t,r,n){let a=af(t,"data","multiRNNCell"),i=am(r,"c","multiRNNCell"),s=am(n,"h","multiRNNCell"),o=a,u=[];for(let t=0;t<e.length;t++){let r=e[t](o,i[t],s[t]);u.push(r[0]),u.push(r[1]),o=r[1]}let l=[],d=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),d.push(u[e+1]);return[l,d]}}),di=ay({multinomial_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=!1){let a=af(e,"logits","multinomial"),i=a.size,s=a.rank;if(i<2)throw Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(s>2)throw Error(`Rank of probabilities must be 1 or 2, but is ${s}`);r=r||Math.random();let o=1===s?sQ(a,[1,-1]):a,u={numSamples:t,seed:r,normalized:n},l=ai.runKernel(tY,{logits:o},u);return 1===s?sQ(l,[l.size]):l}}),ds=ay({notEqual_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","notEqual","string_or_numeric"),n=af(t,"b","notEqual","string_or_numeric");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(tZ,a)}}),du=ay({oneHot_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=1,n=0,a="int32"){if(t<2)throw Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i=af(e,"indices","oneHot","int32");return ai.runKernel(t3,{indices:i},{dtype:a,depth:t,onValue:r,offValue:n})}}),dl=ay({onesLike_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","onesLike");return ai.runKernel(t2,{x:t})}}),dd=ay({outerProduct_:function(e,t){let r=af(e,"v1","outerProduct"),n=af(t,"v2","outerProduct");return E(1===r.rank&&1===n.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${r.rank} and ${n.rank}.`),uK(sQ(r,[-1,1]),sQ(n,[1,-1]))}}),dh=ay({pad_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=0){let n=af(e,"x","pad");if(0===n.rank)throw Error("pad(scalar) is not defined. Pass non-scalar to pad");return ai.runKernel(t6,{x:n},{paddings:t,constantValue:r})}}),dp=ay({pad1d_:function(e,t,r=0){return E(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),dh(e,[t],r)}}),dc=ay({pad2d_:function(e,t,r=0){return E(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),dh(e,t,r)}}),df=ay({pad3d_:function(e,t,r=0){return E(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),dh(e,t,r)}}),dm=ay({pad4d_:function(e,t,r=0){return E(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),dh(e,t,r)}}),dg=ay({spaceToBatchND_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","spaceToBatchND");return E(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),E(r.length===t.length,()=>`paddings.shape[0] ${r.length} must be equal to [blockShape] ${t.length}`),E(n.shape.reduce((e,n,a)=>a>0&&a<=t.length?e&&(n+r[a-1][0]+r[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${r.toString()} must be divisible by blockShapes ${t.toString()}`),ai.runKernel(rI,{x:n},{blockShape:t,paddings:r})}}),dy=ay({pool_:function(e,t,r,n,a,i,s){let o;null==a&&(a=[1,1]),null==i&&(i=1),0===n&&(n="valid");let u=af(e,"x","maxPool"),l=u,d=!1;3===u.rank&&(d=!0,l=sQ(u,[1,u.shape[0],u.shape[1],u.shape[2]])),E(sU(i,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${a}'`);let h=sA(l.shape,t,i,a,n),p=[h.dilationHeight,h.dilationWidth];o="same"===n?function(e,t){let r=e.map((e,r)=>e+(e-1)*(t[r]-1)).map(e=>e-1),n=r.map(e=>Math.floor(e/2)),a=r.map((e,t)=>e-n[t]);return r.map((e,t)=>[n[t],a[t]])}([h.filterHeight,h.filterWidth],p):[[0,0],[0,0]];let c=1===p[0]&&1===p[1],[f,m]=function(e,t,r){let n=r.map(e=>e[0]),a=r.map(e=>e[1]),i=e.concat(n,a),s=t.map((e,t)=>(e-i[t]%e)%e),o=a.map((e,t)=>e+s[t]);return[t.map((e,t)=>[n[t],o[t]]),t.map((e,t)=>[0,s[t]])]}([h.inHeight,h.inWidth],p,o),g=c?n:"valid",y=c?l:dg(l,p,f),x=("avg"===r?()=>uH(y,t,i,g,s):()=>l3(y,t,i,g,s))(),b=c?x:uQ(x,p,m);return d?sQ(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),dx=ay({prod_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=null,r=!1){let n=af(e,"x","prod");"bool"===n.dtype&&(n=iQ(n,"int32"));let a={x:n};return ai.runKernel(t8,a,{axis:t,keepDims:r})}}),db=ay({raggedGather_:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){let a=e.map((e,t)=>af(e,`tensors${t}`,"raggedGather","int32")),i=af(t,"paramsDenseValues","raggedGather"),s=af(r,"indices","raggedGather","int32"),o=ai.runKernel(t7,{paramsNestedSplits:a,paramsDenseValues:i,indices:s},{outputRaggedRank:n});return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}}),dv=ay({raggedRange_:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"starts","raggedRange"),a=af(t,"limits","raggedRange",n.dtype),i=af(r,"deltas","raggedRange",n.dtype),s=ai.runKernel(t9,{starts:n,limits:a,deltas:i});return{rtNestedSplits:s[0],rtDenseValues:s[1]}}}),dw=ay({raggedTensorToTensor_:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a){let i=af(e,"shape","raggedTensorToTensor","int32"),s=af(t,"values","raggedTensorToTensor"),o=af(r,"defaultValue","raggedTensorToTensor",s.dtype),u=n.map((e,t)=>af(e,`tensors${t}`,"raggedTensorToTensor","int32"));return ai.runKernel(re,{shape:i,values:s,defaultValue:o,rowPartitionTensors:u},{rowPartitionTypes:a})}}),dS=ay({rand_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){ed(e);let n=_(e),a=null;if(null==r||"float32"===r)a=new Float32Array(n);else if("int32"===r)a=new Int32Array(n);else if("bool"===r)a=new Uint8Array(n);else throw Error(`Unknown data type ${r}`);for(let e=0;e<n;e++)a[e]=t();return ai.makeTensor(a,e,r)}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dk={},dC=m("7k5xL"),dI=m("hrQbz"),dT=m("gPZYR"),d$=m("7tLAq"),dN=m("hvHyM"),dE=m("gX9JT"),dR={};!function(e,t,r){var n,a="random",i=r.pow(256,6),s=r.pow(2,52),o=2*s;function u(u,c,f){var m=[],g=h(function e(t,r){var n,a=[],i=typeof t;if(r&&"object"==i)for(n in t)try{a.push(e(t[n],r-1))}catch(e){}return a.length?a:"string"==i?t:t+"\0"}((c=!0==c?{entropy:!0}:c||{}).entropy?[u,p(t)]:null==u?function(){try{var r;return n&&(r=n.randomBytes)?r=r(256):(r=new Uint8Array(256),(e.crypto||e.msCrypto).getRandomValues(r)),p(r)}catch(r){var a=e.navigator,i=a&&a.plugins;return[+new Date,e,i,e.screen,p(t)]}}():u,3),m),y=new l(m),x=function(){for(var e=y.g(6),t=i,r=0;e<s;)e=(e+r)*256,t*=256,r=y.g(1);for(;e>=o;)e/=2,t/=2,r>>>=1;return(e+r)/t};return x.int32=function(){return 0|y.g(4)},x.quick=function(){return y.g(4)/4294967296},x.double=x,h(p(y.S),t),(c.pass||f||function(e,t,n,i){return(i&&(i.S&&d(i,y),e.state=function(){return d(y,{})}),n)?(r[a]=e,t):e})(x,g,"global"in c?c.global:this==r,c.state)}function l(e){var t,r=e.length,n=this,a=0,i=n.i=n.j=0,s=n.S=[];for(r||(e=[r++]);a<256;)s[a]=a++;for(a=0;a<256;a++)s[a]=s[i=255&i+e[a%r]+(t=s[a])],s[i]=t;(n.g=function(e){for(var t,r=0,a=n.i,i=n.j,s=n.S;e--;)t=s[a=255&a+1],r=256*r+s[255&(s[a]=s[i=255&i+t])+(s[i]=t)];return n.i=a,n.j=i,r})(256)}function d(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function h(e,t){for(var r,n=e+"",a=0;a<n.length;)t[255&a]=255&(r^=19*t[255&a])+n.charCodeAt(a++);return p(t)}function p(e){return String.fromCharCode.apply(0,e)}if(h(r.random(),t),dR){dR=u;try{n=m("2cpeF")}catch(e){}}else"function"==typeof define&&define.amd?define(function(){return u}):r["seed"+a]=u}("undefined"!=typeof self?self:dR,[],Math),dR.alea=dC,dR.xor128=dI,dR.xorwow=dT,dR.xorshift7=d$,dR.xor4096=dN,dR.tychei=dE,dk=dR;class dA{constructor(e,t,r,n,a){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=n,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let i=a||Math.random();this.random=dk.alea(i.toString())}nextValue(){let e,t;if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let r=!1;for(;!r;){let n,a,i;do i=(n=2*this.random()-1)*n+(a=2*this.random()-1)*a;while(i>=1||0===i)let s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*n*s,t=this.mean+this.stdDev*a*s,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class d_{constructor(e,t,r,n){this.alpha=e,this.beta=1/t,this.dtype=r;let a=n||Math.random();this.randu=dk.alea(a.toString()),this.randn=new dA(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,n,a,i;for(;;){do n=this.randn.nextValue(),i=1+this.c*n;while(i<=0)if(i*=i*i,t=1-.331*(e=n*n)*e,r=.5*e+this.d*(1-i+Math.log(i)),(a=this.randu())<t||Math.log(a)<r)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class dO{constructor(e=0,t=1,r,n){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=r,null==n&&(n=Math.random()),"number"==typeof n&&(n=n.toString()),!this.canReturnFloat()&&this.range<=1)throw Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=dk.alea(n)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}let dF=ay({randomGamma_:function(e,t,r=1,n="float32",a){if(ed(e),null==r&&(r=1),null==n&&(n="float32"),"float32"!==n&&"int32"!==n)throw Error(`Unsupported data type ${n}`);let i=new d_(t,r,n,a),s=iY(e,n);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),dD=ay({randomNormal_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0,r=1,n,a){if(ed(e),null!=n&&"bool"===n)throw Error(`Unsupported data type ${n}`);let i=new dA(t,r,n,!1,a),s=iY(e,n);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),dP=ay({randomStandardNormal_:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){if(null!=t&&"bool"===t)throw Error(`Unsupported data type ${t}`);return dD(e,0,1,t,r)}}),dM=ay({randomUniform_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0,r=1,n="float32",a){ed(e);let i=iY(e,n),s=new dO(t,r,null,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),dL=ay({randomUniformInt_:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){return dM(e,t,r,"int32",n)}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(e,t,r=1,n="float32"){if(0===r)throw Error("Cannot have a step of zero");return ai.runKernel(rt,{},{start:e,stop:t,step:r,dtype:n})}let dz=ay({real_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"input","real");return ai.runKernel(rr,{input:t})}}),dU=ay({reciprocal_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","reciprocal");return ai.runKernel(rn,{x:t})}}),dV=ay({reverse_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","reverse");return ai.runKernel(rh,{x:r},{dims:t})}}),dW=ay({reverse1d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","reverse");return E(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),dV(t,0)}}),dG=ay({reverse2d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","reverse");return E(2===r.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${r.rank}.`),dV(r,t)}}),dH=ay({reverse3d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","reverse");return E(3===r.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${r.rank}.`),dV(r,t)}}),dj=ay({reverse4d_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","reverse");return E(4===r.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${r.rank}.`),dV(r,t)}}),dK=ay({round_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","round");return ai.runKernel(rp,{x:t})}}),dq=ay({rsqrt_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","rsqrt","float32");return ai.runKernel(rc,{x:t})}}),dX=ay({selu_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","selu");return ai.runKernel(rx,{x:t})}}),dY=ay({separableConv2d_:function(e,t,r,n,a,i=[1,1],s="NHWC"){let o=af(e,"x","separableConv2d"),u=af(t,"depthwiseFilter","separableConv2d"),l=af(r,"pointwiseFilter","separableConv2d"),d=o,h=!1;if(3===o.rank&&(h=!0,d=sQ(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===s)throw Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");E(4===d.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),E(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),E(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),E(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),E(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let p=u.shape[2],c=u.shape[3];E(l.shape[2]===p*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*c}, but got ${l.shape[2]}.`);let f=le(lc(d,u,n,a,s,i),l,1,"valid",s);return h?sQ(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),dQ=/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function(e,t){let r=af(e,"x","setdiff1d"),n=af(t,"y","setdiff1d");E(r.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${r.dtype}) and y (${n.dtype}).`),E(1===r.rank,()=>`x should be 1D tensor, but got x (${r.shape}).`),E(1===n.rank,()=>`y should be 1D tensor, but got y (${n.shape}).`);let a=await r.data(),i=new Set(await n.data()),s=0;for(let e=0;e<a.length;e++)!i.has(a[e])&&s++;let o=new nZ([s],r.dtype),u=new nZ([s],"int32");for(let e=0,t=0;e<a.length;e++)!i.has(a[e])&&(o.values[t]=a[e],u.values[t]=e,t++);return[o.toTensor(),u.toTensor()]},dZ=ay({sign_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","sign");return ai.runKernel(rw,{x:t})}}),dJ=ay({sin_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","sin","float32");return ai.runKernel("Sin",{x:t})}}),d0=ay({sinh_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","sinh");return ai.runKernel(rv,{x:t})}}),d1=ay({slice1d_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","slice1d");return E(1===n.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),uq(n,[t],[r])}}),d2=ay({slice2d_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","slice2d");return E(2===n.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),uq(n,t,r)}}),d3=ay({slice3d_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","slice3d");return E(3===n.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),uq(n,t,r)}}),d4=ay({slice4d_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","slice4d");return E(4===n.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),uq(n,t,r)}}),d6=ay({softmax_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=-1){let r=af(e,"logits","softmax","float32");if(-1===t&&(t=r.rank-1),t!==r.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${r.rank} and dim was ${t}`);let n={dim:t};return ai.runKernel(r$,{logits:r},n)}}),d5=ay({fft_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){return E("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`),ai.runKernel("FFT",{input:e})}}),d8=ay({ifft_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){return E("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`),ai.runKernel(t$,{input:e})}}),d7=ay({irfft_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let r=e.shape[e.shape.length-1],n=e.size/r;if(r<=2)t=d8(sQ(e,[n,r]));else{let a=[n,2*(r-1)],i=sQ(dz(e),[n,r]),s=sQ(lD(e),[n,r]),o=dV(uq(i,[0,1],[n,r-2]),1),u=i3(dV(uq(s,[0,1],[n,r-2]),1),i7(-1));t=d8(sQ(ax(uR([i,o],1),uR([s,u],1)),[a[0],a[1]]))}if(t=dz(t),3===e.rank&&0!==e.shape[0]){let r=t,n=e.shape[0];t=sQ(t,[n,t.shape[0]/n,t.shape[1]]),r.dispose()}return t}}),d9=ay({split_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=0){let n=af(e,"x","split");return ai.runKernel(rT,{x:n},{numOrSizeSplits:t,axis:r})}}),he=ay({rfft_:function(e,t){let r;E("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],a=e.size/n;if(null!=t&&t<n){let a=e.shape.map(e=>0),i=e.shape.map(e=>e);i[e.shape.length-1]=t,r=uq(e,a,i),n=t}else if(null!=t&&t>n){let a=e.shape.map(e=>e);a[e.shape.length-1]=t-n,r=uR([e,l8(a)],e.shape.length-1),n=t}else r=e;let i=i5(r),s=d5(sQ(ax(r,i),[a,n])),o=Math.floor(n/2)+1,u=dz(s),l=lD(s),d=d9(u,[o,n-o],u.shape.length-1),h=d9(l,[o,n-o],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=o,sQ(ax(d[0],h[0]),p)}}),ht=ay({squaredDifference_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"a","squaredDifference"),n=af(t,"b","squaredDifference");[r,n]=n9(r,n),sh(r.shape,n.shape);let a={a:r,b:n};return ai.runKernel(rO,a,{})}}),hr=ay({squeeze_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"x","squeeze","string_or_numeric");return sQ(r,G(r.shape,t).newShape)}}),hn=ay({stack_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=am(e,"tensors","stack","string_or_numeric");return E(r.length>=1,()=>"Pass at least one tensor to tf.stack"),r.length>0&&E(t<=r[0].rank,()=>"Axis must be <= rank of the tensor"),ai.runKernel(t4,r,{axis:t})}}),ha=ay({stridedSlice_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a=0,i=0,s=0,o=0,u=0){let l=af(e,"x","stridedSlice","string_or_numeric");return ai.runKernel(rP,{x:l},{begin:t,end:r,strides:n,beginMask:a,endMask:i,ellipsisMask:s,newAxisMask:o,shrinkAxisMask:u})}}),hi=ay({tan_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"x","tan","float32");return ai.runKernel("Tan",{x:t})}});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hs(e,t){A(e);let r=ap(e,t);if(1!==r.length)throw Error("tensor1d() requires values to be a flat/TypedArray");return ab(e,null,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(e,t,r){if(A(e),null!=t&&2!==t.length)throw Error("tensor2d() requires shape to have two numbers");let n=ap(e,r);if(2!==n.length&&1!==n.length)throw Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ab(e,t,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(e,t,r){if(A(e),null!=t&&4!==t.length)throw Error("tensor4d() requires shape to have four numbers");let n=ap(e,r);if(4!==n.length&&1!==n.length)throw Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor4d() requires shape to be provided when `values` are a flat array");return ab(e,t,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hl(e,t,r){if(A(e),null!=t&&5!==t.length)throw Error("tensor5d() requires shape to have five numbers");let n=ap(e,r);if(5!==n.length&&1!==n.length)throw Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor5d() requires shape to be provided when `values` are a flat array");return ab(e,t,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hd(e,t,r){if(A(e),null!=t&&6!==t.length)throw Error("tensor6d() requires shape to have six numbers");let n=ap(e,r);if(6!==n.length&&1!==n.length)throw Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===n.length&&null==t)throw Error("tensor6d() requires shape to be provided when `values` are a flat array");return ab(e,t=t||n,n,r)}let hh=ay({tensorScatterUpdate_:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"tensor","tensorScatterupdate"),a=af(t,"indices","tensorScatterupdate","int32"),i=af(r,"updates","tensorScatterupdate");if(o_(i,a,n.shape),n.dtype!==i.dtype)throw Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${i.dtype}.`);return ai.runKernel(rm,{tensor:n,indices:a,updates:i},{})}}),hp=ay({topk_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=1,r=!0){let n=af(e,"x","topk");if(0===n.rank)throw Error("topk() expects the input to be of rank 1 or higher");let a=n.shape[n.shape.length-1];if(t<0)throw Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let[i,s]=ai.runKernel(rV,{x:n},{k:t,sorted:r});return{values:i,indices:s}}}),hc=ay({truncatedNormal_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0,r=1,n,a){if(ed(e),null!=n&&"bool"===n)throw Error("Unsupported data type $ { dtype }");let i=new dA(t,r,n,!0,a),s=iY(e,n);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),hf=ay({unique_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=af(e,"x","unique","string_or_numeric");E(r.rank>0,()=>"The input tensor must be at least 1D");let[n,a]=ai.runKernel(rH,{x:r},{axis:t});return{values:n,indices:a}}}),hm=ay({unsortedSegmentSum_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","unsortedSegmentSum"),a=af(t,"segmentIds","unsortedSegmentSum","int32");return E(P(r),()=>"numSegments must be of dtype int"),ai.runKernel(rK,{x:n,segmentIds:a},{numSegments:r})}}),hg=ay({unstack_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=0){let r=af(e,"x","unstack","string_or_numeric");return E(t>=-r.shape.length&&t<r.shape.length,()=>`Axis = ${t} is not in [-${r.shape.length}, ${r.shape.length})`),ai.runKernel(rj,{value:r},{axis:t})}});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hy(e,t){return l1(e,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hx(e,t=!0,r,n){return ai.makeVariable(e,t,r,n)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hb(e,t){let r=[];for(let e=0;e<t.length;e++)t[e]&&r.push(e);let n=iY(e,"int32"),a=iY([r.length,e.length],"int32");for(let t=0;t<r.length;t++){let i=n.indexToLoc(r[t]),s=t*e.length;a.values.set(i,s)}return a.toTensor()}let hv=async function(e){let t=af(e,"condition","whereAsync","bool"),r=await t.data(),n=hb(t.shape,r);return e!==t&&t.dispose(),n};var hw={};u(hw,"booleanMaskAsync",function(){return hS});let hS=/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function(e,t,r){let n=af(e,"tensor","boolMask"),a=af(t,"mask","boolMask","bool"),i=null==r?0:r,s=a.rank,o=n.shape;E(s>0,()=>"mask cannot be scalar"),R(o.slice(i,i+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=i;e<i+s;e++)u*=o[e];let l=sQ(n,o.slice(0,i).concat([u],o.slice(i+s))),d=sQ(a,[-1]),h=await hv(d),p=hr(h,[1]),c=l_(l,p,i);return e!==n&&n.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),c};var hk={};u(hk,"transpose",function(){return hC});let hC=ay({transpose_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),E(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{E(e>=0&&e<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let a={perm:t};return"complex64"===n.dtype?ak(()=>{let e=dz(n),t=lD(n);return e=ai.runKernel(rG,{x:e},a),t=ai.runKernel(rG,{x:t},a),r&&(t=lH(t)),ax(e,t)}):ai.runKernel(rG,{x:n},a)}});var hI={};u(hI,"movingAverage",function(){return hT});let hT=ay({movingAverage_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a=!0){let i=af(e,"v","movingAverage"),s=af(t,"x","movingAverage"),o=af(r,"decay","movingAverage");E(i.dtype===s.dtype,()=>`The dtypes of the first(${i.dtype}) and second(${s.dtype}) input must match`),E(D(i.shape,s.shape),()=>"Shape mismatch in v and x");let u=i7(1),l=ss(u,o),d=i3(ss(s,i),l);return a&&(E(null!=n,()=>"When using zeroDebias: true, step is required."),d=i2(d,ss(u,si(o,af(n,"step","movingAverage"))))),i0(i,d)}});var h$={};u(h$,"scatterND",function(){return hN});let hN=ay({scatterND_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){ed(r);let n=af(e,"indices","scatterND","int32"),a=af(t,"updates","scatterND");return o_(a,n,r),ai.runKernel(rf,{indices:n,updates:a},{shape:r})}});var hE={};u(hE,"sparseToDense",function(){return hR});let hR=ay({sparseToDense_:function(e,t,r,n=0){ed(r);let a=af(e,"sparseIndices","sparseToDense","int32"),i=af(t,"sparseValues","sparseToDense","string_or_numeric"),s=af(n,"defaultValue","sparseToDense",i.dtype);return!/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){if("int32"!==e.dtype)throw Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,i=e.rank>1?e.shape[1]:1;if(r.length!==i)throw Error(`outputShape has incorrect number of elements:, ${r.length}, should be: ${i}.`);let s=t.size;if(!(0===t.rank||1===t.rank&&s===a))throw Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==n.dtype)throw Error("sparseValues.dtype must match defaultValues.dtype")}(a,i,r,s),ai.runKernel(r_,{sparseIndices:a,sparseValues:i,defaultValue:s},{outputShape:r})}});var hA={};u(hA,"gatherND",function(){return h_});let h_=ay({gatherND_:/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(t,"indices","gatherND","int32"),n=af(e,"x","gatherND","string_or_numeric");return ai.runKernel(tk,{params:n,indices:r})}});var hO={};u(hO,"dropout",function(){return hF});let hF=ay({dropout_:function(e,t,r,n){let a=af(e,"x","dropout");if(E("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),E(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof n1?a.clone():a;let i=/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){if(null==t)return e.shape.slice();if(D(e.shape,t))return t;if(e.shape.length===t.length){let r=[];for(let n=0;n<e.shape.length;n++)null==t[n]&&null!=e.shape[n]?r.push(e.shape[n]):r.push(t[n]);return r}return t}(a,r),s=1-t;return i3(a,i2(lA(i0(dM(i,0,1,"float32",n),s)),s))}});var hD={};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hM(e,t,r){let n=1-e%2,a=new Float32Array(e);for(let i=0;i<e;++i){let s=2*Math.PI*i/(e+n-1);a[i]=t-r*Math.cos(s)}return hs(a,"float32")}u(hD,"enclosingPowerOfTwo",function(){return hP}),u(hD,"cosineWindow",function(){return hM});var hL={};u(hL,"inTopKAsync",function(){return hB});let hB=/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function(e,t,r=1){let n=af(e,"predictions","inTopK"),a=af(t,"targets","inTopK");E(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),E(n.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${a.rank}`),R(n.shape.slice(0,n.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let i=n.shape[n.shape.length-1];E(r>0&&r<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${r}`);let s=await n.data(),o=await a.data(),[u,l]=[s.length/i,i],d=j("bool",u);for(let e=0;e<u;e++){let t=e*l,n=s.subarray(t,t+l),a=[];for(let e=0;e<n.length;e++)a.push({value:n[e],index:e});a.sort((e,t)=>t.value-e.value),d[e]=0;for(let t=0;t<r;t++)if(a[t].index===o[e]){d[e]=1;break}}return e!==n&&n.dispose(),t!==a&&a.dispose(),av(d,a.shape,"bool")};var hz={};u(hz,"conv2d",function(){return hV}),u(hz,"depthwiseConv2d",function(){return hH}),u(hz,"matMul",function(){return hj});let hU=ay({conv2DBackpropFilter_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a,i="NHWC",s){let o=e;3===e.rank&&(o=sQ(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sQ(t,[1,t.shape[0],t.shape[1],t.shape[2]])),E(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),E(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),E(4===r.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${r}.`);let l="NHWC"===i?o.shape[3]:o.shape[1],d="NHWC"===i?u.shape[3]:u.shape[1];E(l===r[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${r[2]}.`),E(d===r[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${r[3]}).`),sG("conv2dDerFilter",a,s);let h={x:o,dy:u};return ai.runKernel(e4,h,{strides:n,pad:a,dataFormat:i,dimRoundingMode:s,filterShape:r})}}),hV=ay({fusedConv2d_:function({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}){let h,p;if(u=u||"linear",!1===s4(ai.state.gradientDepth,u)){E("NHWC"===a,()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let h=le(e,t,r,n,a,i,s);return null!=o&&(h=i0(h,o)),s3(h,u,l,d)}let c=af(e,"x","conv2d","float32"),f=af(t,"filter","conv2d","float32"),m=c,g=!1;3===c.rank&&(g=!0,m=sQ(c,[1,c.shape[0],c.shape[1],c.shape[2]])),E(4===m.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),E(4===f.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),sG("fused conv2d",n,s);let y="NHWC"===a?m.shape[3]:m.shape[1];E(f.shape[2]===y,()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`),E(sU(r,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`);let x=sO(m.shape,f.shape,r,i,n,s);if(null!=o&&(h=af(o,"bias","fused conv2d"),[h]=n9(h,c),"NHWC"===a?sh(x.outShape,h.shape):(E(h.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${h.shape.length}.`),E(0===h.shape.length||h.shape[0]===x.outChannels||1===h.shape[0],()=>`Error in fused conv2d: bias shape (${h.shape}) is not compatible with the number of output channels (${x.outChannels})`))),null!=l){let e=l.shape;if(E(e.length<=1||3===e.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`),1===e.length)E(1===e[0]||e[0]===x.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${x.outChannels}).`);else if(3===e.length)try{sh(e,x.outShape)}catch(t){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${x.outShape}).`)}p=af(l,"prelu weights","fused conv2d")}let b=(e,t)=>{E("NHWC"===a,()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[s,o,l,d]=t,h=s1(e,l,u);E(sz(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);let p=[lr(o.shape,h,s,r,n),hU(o,h,s.shape,r,n)];if(null!=d){let e=s2(d,h);p.push(e)}return p},v={x:m,filter:f,bias:h,preluActivationWeights:p},w={strides:r,pad:n,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:d};return null==o?i8((e,t,r)=>{let n=ai.runKernel(rJ,v,w);return r([t,e,n]),g&&(n=sQ(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:b}})(m,f):i8((e,t,r,n)=>{let a=ai.runKernel(rJ,v,w);return n([t,e,a,r]),g&&(a=sQ(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}})(m,f,h)}}),hW=ay({depthwiseConv2dNativeBackpropFilter_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a,i=[1,1],s){let o=e;3===e.rank&&(o=sQ(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=sQ(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:o,dy:u};return ai.runKernel(ts,l,{strides:n,pad:a,dimRoundingMode:s,dilations:i,filterShape:r})}}),hG=ay({depthwiseConv2dNativeBackpropInput_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a,i=[1,1],s){let o=t,u=!1;3===t.rank&&(u=!0,o=sQ(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:o,filter:r},d=ai.runKernel(to,l,{strides:n,pad:a,dimRoundingMode:s,dilations:i,inputShape:e});return u?sQ(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),hH=ay({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:r,pad:n,dataFormat:a="NHWC",dilations:i=[1,1],dimRoundingMode:s,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:d}){let h,p;if(!1===s4(ai.state.gradientDepth,u)){let h=lc(e,t,r,n,a,i,s);return null!=o&&(h=i0(h,o)),s3(h,u,l,d)}let c=af(e,"x","depthwiseConv2d","float32"),f=af(t,"filter","depthwiseConv2d","float32"),m=c,g=!1;3===c.rank&&(g=!0,m=sQ(c,[1,c.shape[0],c.shape[1],c.shape[2]])),E(4===m.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),E(4===f.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),E(m.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),null==i&&(i=[1,1]),E(sU(r,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`),sG("fused depthwiseConv2d",n,s);let y=sO(m.shape,f.shape,r,i,n,s,!0);null!=o&&(h=af(o,"bias","fused conv2d"),[h]=n9(h,c),sh(y.outShape,h.shape)),null!=l&&(p=af(l,"prelu weights","fused depthwiseConv2d"));let x=(e,t)=>{E(sz(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);let[a,o,l,d]=t,p=s1(e,l,u),c=hG(o.shape,p,a,r,n,i,s),f=hW(o,p,a.shape,r,n,i,s);return null!=d?[c,f,s2(h,p)]:[c,f]},b={x:m,filter:f,bias:h,preluActivationWeights:p},v={strides:r,pad:n,dataFormat:a,dilations:i,dimRoundingMode:s,activation:u,leakyreluAlpha:d};return null==o?i8((e,t,r)=>{let n=ai.runKernel(r0,b,v);return r([t,e,n]),g&&(n=sQ(n,[n.shape[1],n.shape[2],n.shape[3]])),{value:n,gradFunc:x}})(m,f):i8((e,t,r,n)=>{let a=ai.runKernel(r0,b,v);return n([t,e,a,r]),g&&(a=sQ(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}})(m,f,h)}}),hj=ay({fusedMatMul_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function({a:e,b:t,transposeA:r=!1,transposeB:n=!1,bias:a,activation:i="linear",preluActivationWeights:s,leakyreluAlpha:o=.2}){let u,l;if(!1===s4(ai.state.gradientDepth,i)){let u=uK(e,t,r,n);return null!=a&&(u=i0(u,a)),s3(u,i,s,o)}let d=af(e,"a","fused matMul"),h=af(t,"b","fused matMul");[d,h]=n9(d,h);let p=r?d.shape[d.rank-2]:d.shape[d.rank-1],c=n?h.shape[h.rank-1]:h.shape[h.rank-2],f=r?d.shape[d.rank-1]:d.shape[d.rank-2],m=n?h.shape[h.rank-2]:h.shape[h.rank-1],g=d.shape.slice(0,-2),y=h.shape.slice(0,-2),x=_(g),b=_(y);E(p===c,()=>`Error in fused matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${d.shape} and ${h.shape} and transposeA=${r} and transposeB=${n} must match.`);let v=sh(d.shape.slice(0,-2),h.shape.slice(0,-2)).concat([f,m]),w=r?sQ(d,[x,p,f]):sQ(d,[x,f,p]),S=n?sQ(h,[b,m,c]):sQ(h,[b,c,m]);null!=a&&(u=af(a,"bias","fused matMul"),[u]=n9(u,d),sh(v,u.shape)),null!=s&&(l=af(s,"prelu weights","fused matMul"));let k=(e,t)=>{let s,o;let[u,l,d,h]=t,p=s1(sQ(e,d.shape),d,i);return(r||n?!r&&n?(s=uK(p,l,!1,!1),o=uK(p,u,!0,!1)):r&&!n?(s=uK(l,p,!1,!0),o=uK(u,p,!1,!1)):(s=uK(l,p,!0,!0),o=uK(p,u,!0,!0)):(s=uK(p,l,!1,!0),o=uK(u,p,!0,!1)),null!=a)?[s,o,s2(h,p)]:[s,o]},C={a:w,b:S,bias:u,preluActivationWeights:l},I={transposeA:r,transposeB:n,activation:i,leakyreluAlpha:o};return null==a?i8((e,t,r)=>{let n=ai.runKernel(rZ,C,I);return r([e,t,n]),{value:sQ(n,v),gradFunc:k}})(w,S):i8((e,t,r,n)=>{let a=ai.runKernel(rZ,C,I);return n([e,t,a,r]),{value:sQ(a,v),gradFunc:k}})(w,S,u)}}),hK=ay({hammingWindow_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){return hM(e,.54,.46)}}),hq=ay({hannWindow_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){return hM(e,.5,.5)}}),hX=ay({frame_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=!1,a=0){let i=0,s=[];for(;i+t<=e.size;)s.push(uq(e,i,t)),i+=r;if(n)for(;i<e.size;){let n=i+t-e.size,o=uR([uq(e,i,t-n),sa([n],a)]);s.push(o),i+=r}return 0===s.length?ho([],[0,t]):sQ(uR(s),[s.length,t])}}),hY=ay({stft_:/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a=hq){return null==n&&(n=hP(t)),he(i3(hX(e,t,r),a(t)),n)}}),hQ=ay({cropAndResize_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a="bilinear",i=0){let s=af(e,"image","cropAndResize"),o=af(t,"boxes","cropAndResize","float32"),u=af(r,"boxInd","cropAndResize","int32"),l=o.shape[0];return E(4===s.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`),E(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),E(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),E(2===n.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),E(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),E("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`),ai.runKernel(tr,{image:s,boxes:o,boxInd:u},{method:a,extrapolationValue:i,cropSize:n})}}),hZ=ay({flipLeftRight_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"image","flipLeftRight","float32");return E(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),ai.runKernel(tx,{image:t},{})}}),hJ=ay({grayscaleToRGB_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=af(e,"image","grayscaleToRGB"),r=t.rank-1,n=t.shape[r];E(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),E(1===n,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let a=Array(t.rank);return a.fill(1,0,r),a[r]=3,lE(t,a)}}),h0=ay({rgbToGrayscale_:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let r=af(e,"image","RGBToGrayscale"),n=r.rank-1,a=r.shape[n];E(r.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${r.rank}.`),E(3===a,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${a}.`);let i=r.dtype,s=iQ(r,"float32"),o=hs([.2989,.587,.114]);switch(r.rank){case 2:t=lv("ij,j->i",s,o);break;case 3:t=lv("ijk,k->ij",s,o);break;case 4:t=lv("ijkl,l->ijk",s,o);break;case 5:t=lv("ijklm,m->ijkl",s,o);break;case 6:t=lv("ijklmn,n->ijklm",s,o);break;default:throw Error("Not a valid tensor rank.")}return iQ(t=u_(t,-1),i)}}),h1=ay({rotateWithOffset_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=0,n=.5){let a=af(e,"image","rotateWithOffset","float32");return E(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`),ai.runKernel(rQ,{image:a},{radians:t,fillValue:r,center:n})}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(e,t,r,n,a,i){null==n&&(n=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==i&&(i=0);let s=e.shape[0];return r=Math.min(r,s),E(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),E(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),E(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),E(1===t.rank,()=>"scores must be a 1D tensor"),E(t.shape[0]===s,()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${t.shape[0]}`),E(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:r,iouThreshold:n,scoreThreshold:a,softNmsSigma:i}}let h3=ay({nonMaxSuppression_:function(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let i=af(e,"boxes","nonMaxSuppression","float32"),s=af(t,"scores","nonMaxSuppression","float32"),o=h2(i,s,r,n,a),u={maxOutputSize:r=o.maxOutputSize,iouThreshold:n=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ai.runKernel(tJ,{boxes:i,scores:s},u)}});function h4(e,t){return e>t?1:e<t?-1:0}function h6(e,t,r,n,a){return h7(e,t,r,n,a,0)}function h5(e,t,r,n,a,i){return h7(e,t,r,n,a,0,!1,i,!0)}function h8(e,t,r,n,a,i){return h7(e,t,r,n,a,i,!0)}function h7(e,t,r,n,a,i,s=!1,o=!1,u=!1){let l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(h9);let d=i>0?-.5/i:0,h=[],p=[];for(;h.length<r&&l.length>0;){let t=l.pop(),{score:r,boxIndex:i,suppressBeginIndex:s}=t;if(r<a)break;let o=!1;for(let r=h.length-1;r>=s;--r){let s=function(e,t,r){let n=e.subarray(4*t,4*t+4),a=e.subarray(4*r,4*r+4),i=Math.min(n[0],n[2]),s=Math.min(n[1],n[3]),o=Math.max(n[0],n[2]),u=Math.max(n[1],n[3]),l=Math.min(a[0],a[2]),d=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),c=(o-i)*(u-s),f=(h-l)*(p-d);if(c<=0||f<=0)return 0;let m=Math.max(Math.min(o,h)-Math.max(i,l),0)*Math.max(Math.min(u,p)-Math.max(s,d),0);return m/(c+f-m)}(e,i,h[r]);if(s>=n){o=!0;break}if(t.score=t.score*function(e,t,r){let n=Math.exp(t*r*r);return r<=e?n:0}(n,d,s),t.score<=a)break}t.suppressBeginIndex=h.length,!o&&(t.score===r?(h.push(i),p.push(t.score)):t.score>a&&/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=function(e,t,r){let n=0,a=e.length,i=0,s=!1;for(;n<a;){let o=r(t,e[i=n+(a-n>>>1)]);o>0?n=i+1:(a=i,s=!o)}return s?n:-n-1}(e,t,r||h4);e.splice(n<0?-(n+1):n,0,t)}(l,t,h9))}let c=h.length,f=r-c;o&&f>0&&(h.push(...Array(f).fill(0)),p.push(...Array(f).fill(0)));let m={selectedIndices:h};return s&&(m.selectedScores=p),u&&(m.validOutputs=c),m}function h9(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function pe(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY){let i=af(e,"boxes","nonMaxSuppressionAsync"),s=af(t,"scores","nonMaxSuppressionAsync"),o=h2(i,s,r,n,a);r=o.maxOutputSize,n=o.iouThreshold,a=o.scoreThreshold;let u=await Promise.all([i.data(),s.data()]),{selectedIndices:l}=h6(u[0],u[1],r,n,a);return i!==e&&i.dispose(),s!==t&&s.dispose(),hs(l,"int32")}let pt=ay({nonMaxSuppressionWithScore_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,i=0){let s=af(e,"boxes","nonMaxSuppression"),o=af(t,"scores","nonMaxSuppression"),u=h2(s,o,r,n,a,i);r=u.maxOutputSize,n=u.iouThreshold;let l={maxOutputSize:r,iouThreshold:n,scoreThreshold:a=u.scoreThreshold,softNmsSigma:i=u.softNmsSigma},d=ai.runKernel(t1,{boxes:s,scores:o},l);return{selectedIndices:d[0],selectedScores:d[1]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pr(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,i=0){let s=af(e,"boxes","nonMaxSuppressionAsync"),o=af(t,"scores","nonMaxSuppressionAsync"),u=h2(s,o,r,n,a,i);r=u.maxOutputSize,n=u.iouThreshold,a=u.scoreThreshold,i=u.softNmsSigma;let l=await Promise.all([s.data(),o.data()]),{selectedIndices:d,selectedScores:h}=h8(l[0],l[1],r,n,a,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:hs(d,"int32"),selectedScores:hs(h)}}let pn=ay({nonMaxSuppressionPadded_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,i=!1){let s=af(e,"boxes","nonMaxSuppression"),o=af(t,"scores","nonMaxSuppression"),u=h2(s,o,r,n,a,null),l=u.maxOutputSize,d=u.iouThreshold,h=u.scoreThreshold,p=ai.runKernel(t0,{boxes:s,scores:o},{maxOutputSize:l,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:i});return{selectedIndices:p[0],validOutputs:p[1]}}});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function pa(e,t,r,n=.5,a=Number.NEGATIVE_INFINITY,i=!1){let s=af(e,"boxes","nonMaxSuppressionAsync"),o=af(t,"scores","nonMaxSuppressionAsync"),u=h2(s,o,r,n,a,null),l=u.maxOutputSize,d=u.iouThreshold,h=u.scoreThreshold,[p,c]=await Promise.all([s.data(),o.data()]),{selectedIndices:f,validOutputs:m}=h5(p,c,l,d,h,i);return s!==e&&s.dispose(),o!==t&&o.dispose(),{selectedIndices:hs(f,"int32"),validOutputs:i7(m,"int32")}}let pi=ay({resizeBilinear_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=!1,n=!1){let a=af(e,"images","resizeBilinear");E(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),E(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),E(!1===n||!1===r,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=a,s=!1;3===a.rank&&(s=!0,i=sQ(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:i},u=ai.runKernel(ru,o,{alignCorners:r,halfPixelCenters:n,size:t});return s?sQ(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),ps=ay({resizeNearestNeighbor_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=!1,n=!1){let a=af(e,"images","resizeNearestNeighbor");E(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),E(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),E("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),E(!1===n||!1===r,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=a,s=!1;3===a.rank&&(s=!0,i=sQ(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let[]=t,o={images:i},u=ai.runKernel(rs,o,{alignCorners:r,halfPixelCenters:n,size:t});return s?sQ(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),po=ay({threshold_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t="binary",r=!1,n=.5){let a,i,s,o;let u=af(e,"image","threshold"),l=u.shape[0]*u.shape[1],d=i3(hs([n]),255);if(E(3===u.rank,()=>`Error in threshold: image must be rank 3,but got rank ${u.rank}.`),E(3===u.shape[2]||1===u.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${u.shape[2]}.`),E("int32"===u.dtype||"float32"===u.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${u.dtype}.`),E("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===u.shape[2]){[a,i,s]=d9(u,[1,1,1],-1);let e=i3(a,.2989),t=i3(i,.587),r=i3(s,.114);o=i0(i0(e,t),r)}else o=e;return"otsu"===t&&(d=function(e,t){let r,n,a,i,s,o,u=hs([-1]),l=hs([0]),d=hs([0]);for(let h=0;h<e.size-1;h++){r=uq(e,0,h+1),n=uq(e,h+1),s=i2(s0(r),t),o=i2(s0(n),t),a=i2(s0(i3(r,dB(0,r.size))),s0(r));let p=sa(n.shape,r.size),c=i0(dB(0,n.size),p),f=ss(a,i=i2(s0(i3(n,c)),s0(n))),m=ss(a,i),g=i3(s,o),y=lO(d=i3(i3(g,f),m),l);l=ly(y,d,l),u=ly(y,hs([h]),u)}return u}(u2(iQ(dK(o),"int32"),av([]),256),l)),iQ(i3(r?lz(o,d):lO(o,d),255),"int32")}}),pu=ay({transform_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r="nearest",n="constant",a=0,i){let s=af(e,"image","transform","float32"),o=af(t,"transforms","transform","float32");return E(4===s.rank,()=>`Error in transform: image must be rank 4,but got rank ${s.rank}.`),E(2===o.rank&&(o.shape[0]===s.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),E(null==i||2===i.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`),ai.runKernel(rW,{image:s,transforms:o},{interpolation:r,fillMode:n,fillValue:a,outputShape:i})}}),pl=ay({bandPart_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n,a;let i=af(e,"a","bandPart");E(i.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${i.rank}.`);let s=i.shape,[o,u]=i.shape.slice(-2);"number"==typeof t?(E(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),E(t<=o,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${o}).`),n=af(t<0?o:t,"numLower","bandPart")):(E("int32"===t.dtype,()=>"bandPart(): numLower's dtype must be an int32."),n=ly(lB(t,0),o,de(t,o))),"number"==typeof r?(E(r%1==0,()=>`bandPart(): numUpper must be an integer, got ${r}.`),E(r<=u,()=>`bandPart(): numUpper (${r}) must not be greater than the number of columns (${u}).`),a=af(r<0?u:r,"numUpper","bandPart")):(E("int32"===r.dtype,()=>"bandPart(): numUpper's dtype must be an int32."),a=ly(lB(r,0),u,de(r,u)));let l=ss(sQ(dB(0,o,1,"int32"),[-1,1]),dB(0,u,1,"int32")),d=lY(lz(l,n),lF(l,lH(a))),h=l8([o,u],i.dtype);return sQ(hn(hg(sQ(i,[-1,o,u])).map(e=>ly(d,e,h))),s)}}),pd=ay({gramSchmidt_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;if(Array.isArray(e)){t=!1,E(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let t=1;t<e.length;++t)E(e[t].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${r})`)}else t=!0,e=d9(e,e.shape[0],0).map(e=>hr(e,[0]));E(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let r=[],n=e;for(let t=0;t<e.length;++t)r.push(ai.tidy(()=>{let e=n[t];if(t>0)for(let n=0;n<t;++n){let t=i3(s0(i3(r[n],e)),r[n]);e=ss(e,t)}return i2(e,lT(e,"euclidean"))}));return t?hn(r,0):r}});function ph(e,t=!1){return ai.tidy(()=>{E(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let r=e.shape[0],n=e.shape[1],a=lR(r),i=iZ(e),s=ho([[1]],[1,1]),o=iZ(s),u=r>=n?n:r;for(let e=0;e<u;++e){let t=i,u=o,l=a;[o,i,a]=ai.tidy(()=>{let t=uq(i,[e,e],[r-e,1]),u=lT(t),l=uq(i,[e,e],[1,1]),d=ly(lO(l,0),ho([[-1]]),ho([[1]])),h=ss(l,i3(d,u)),p=i2(t,h);o=1===p.shape[0]?iZ(s):uR([s,uq(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);let c=lH(i2(uK(d,h),u)),f=uq(i,[e,0],[r-e,n]),m=i3(c,o),g=hC(o);if(0===e)i=ss(f,uK(m,uK(g,f)));else{let t=ss(f,uK(m,uK(g,f)));i=uR([uq(i,[0,0],[e,n]),t],0)}let y=hC(m),x=uq(a,[0,e],[r,a.shape[1]-e]);if(0===e)a=ss(x,uK(uK(x,o),y));else{let t=ss(x,uK(uK(x,o),y));a=uR([uq(a,[0,0],[r,e]),t],1)}return[o,i,a]}),aC([t,u,l])}return!t&&r>n&&(a=uq(a,[0,0],[r,n]),i=uq(i,[0,0],[n,n])),[a,i]})}let pp=ay({qr_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t=!1){if(E(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return ph(e,t);{let r=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),n=hg(sQ(e,[r,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],i=[];return n.forEach(e=>{let[r,n]=ph(e,t);a.push(r),i.push(n)}),[sQ(hn(a,0),e.shape),sQ(hn(i,0),e.shape)]}}});(TN=T0||(T0={}))[TN.NONE=0]="NONE",TN[TN.MEAN=1]="MEAN",TN[TN.SUM=2]="SUM",TN[TN.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS";let pc=ay({computeWeightedLoss_:function(e,t,r=T0.SUM_BY_NONZERO_WEIGHTS){let n=af(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=af(t,"weights","computeWeightedLoss"));let i=null==a?n:i3(n,a);if(r===T0.NONE)return i;if(r===T0.SUM)return s0(i);if(r===T0.MEAN){if(null==a)return l5(i);{let e=n.size/a.size,t=i2(s0(i),s0(a));return e>1?i2(t,i7(e)):t}}if(r===T0.SUM_BY_NONZERO_WEIGHTS){if(null==a)return i2(s0(i),i7(n.size));{let e=iQ(s0(ds(i3(a,l7(n.shape)),i7(0))),"float32");return i2(s0(i),e)}}throw Error(`Unknown reduction: ${r}`)}}),pf=ay({absoluteDifference_:function(e,t,r,n=T0.SUM_BY_NONZERO_WEIGHTS){let a=af(e,"labels","absoluteDifference"),i=af(t,"predictions","absoluteDifference"),s=null;return null!=r&&(s=af(r,"weights","absoluteDifference")),R(a.shape,i.shape,"Error in absoluteDifference: "),pc(so(ss(a,i)),s,n)}}),pm=ay({cosineDistance_:function(e,t,r,n,a=T0.SUM_BY_NONZERO_WEIGHTS){let i=af(e,"labels","cosineDistance"),s=af(t,"predictions","cosineDistance"),o=null;return null!=n&&(o=af(n,"weights","cosineDistance")),R(i.shape,s.shape,"Error in cosineDistance: "),pc(ss(i7(1),s0(i3(i,s),r,!0)),o,a)}}),pg=ay({hingeLoss_:function(e,t,r,n=T0.SUM_BY_NONZERO_WEIGHTS){let a=af(e,"labels","hingeLoss"),i=af(t,"predictions","hingeLoss"),s=null;null!=r&&(s=af(r,"weights","hingeLoss")),R(a.shape,i.shape,"Error in hingeLoss: ");let o=i7(1);return a=ss(i3(i7(2),a),o),pc(sX(ss(o,i3(a,i))),s,n)}}),py=ay({huberLoss_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=1,a=T0.SUM_BY_NONZERO_WEIGHTS){let i=af(e,"labels","huberLoss"),s=af(t,"predictions","huberLoss"),o=null;null!=r&&(o=af(r,"weights","huberLoss")),R(i.shape,s.shape,"Error in huberLoss: ");let u=i7(n),l=so(ss(s,i)),d=de(l,u),h=ss(l,d);return pc(i0(i3(i7(.5),i6(d)),i3(u,h)),o,a)}}),px=ay({logLoss_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=1e-7,a=T0.SUM_BY_NONZERO_WEIGHTS){let i=af(e,"labels","logLoss"),s=af(t,"predictions","logLoss"),o=null;null!=r&&(o=af(r,"weights","logLoss")),R(i.shape,s.shape,"Error in logLoss: ");let u=i7(1),l=i7(n),d=lH(i3(i,lW(i0(s,l)))),h=i3(ss(u,i),lW(i0(ss(u,s),l)));return pc(ss(d,h),o,a)}}),pb=ay({meanSquaredError_:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=T0.SUM_BY_NONZERO_WEIGHTS){let a=af(e,"labels","meanSquaredError"),i=af(t,"predictions","meanSquaredError"),s=null;return null!=r&&(s=af(r,"weights","meanSquaredError")),R(a.shape,i.shape,"Error in meanSquaredError: "),pc(ht(a,i),s,n)}}),pv=ay({sigmoidCrossEntropy_:function(e,t,r,n=0,a=T0.SUM_BY_NONZERO_WEIGHTS){let i=af(e,"multiClassLabels","sigmoidCrossEntropy"),s=af(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=r&&(o=af(r,"weights","sigmoidCrossEntropy")),R(i.shape,s.shape,"Error in sigmoidCrossEntropy: "),n>0){let e=i7(n),t=i7(1),r=i7(.5);i=i0(i3(i,ss(t,e)),i3(r,e))}return pc(/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"labels","sigmoidCrossEntropyWithLogits"),n=af(t,"logits","sigmoidCrossEntropyWithLogits");R(r.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=sX(n),i=i3(n,r),s=lG(uA(lH(so(n))));return i0(ss(a,i),s)}(i,s),o,a)}}),pw=ay({softmaxCrossEntropy_:function(e,t,r,n=0,a=T0.SUM_BY_NONZERO_WEIGHTS){let i=af(e,"onehotLabels","softmaxCrossEntropy"),s=af(t,"logits","softmaxCrossEntropy"),o=null;if(null!=r&&(o=af(r,"weights","softmaxCrossEntropy")),R(i.shape,s.shape,"Error in softmaxCrossEntropy: "),n>0){let e=i7(n),t=i7(1),r=i7(i.shape[1]);i=i0(i3(i,ss(t,e)),i2(e,r))}return pc(/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=-1){if(-1===r&&(r=t.rank-1),r!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${r}`);return i8((e,t,n)=>{let a=lX(t,[r],!0),i=ss(iQ(t,"float32"),a);return n([e,i]),{value:s0(lH(i3(i,e)),[r]),gradFunc:(e,t)=>{let[n,a]=t,i=sw(e.shape,[r]);return[i3(sQ(e,i),ss(iQ(n,"float32"),uA(a))),i3(sQ(e,i),ss(uA(a),iQ(n,"float32")))]}}})(e,t)}(i,s),o,a)}}),pS=ay({sparseFillEmptyRows_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){let a=af(e,"indices","sparseFillEmptyRows","int32"),i=af(t,"values","sparseFillEmptyRows"),s=af(r,"denseShape","sparseFillEmptyRows","int32"),o=af(n,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==a.rank)throw Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(1!==i.rank)throw Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==s.rank)throw Error(`Dense shape should be Tensor1D but received shape ${s.shape}`);if(0!==o.rank)throw Error(`Default value should be a scalar but received shape ${o.shape}`);let u=ai.runKernel(rN,{indices:a,values:i,denseShape:s,defaultValue:o});return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),pk=ay({sparseReshape_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"inputIndices","sparseReshape","int32"),a=af(t,"inputShape","sparseReshape","int32"),i=af(r,"newShape","sparseReshape","int32");if(2!==n.rank)throw Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(1!==a.rank)throw Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw Error(`New shape should be Tensor1D but received shape ${i.shape}`);let s=ai.runKernel(rE,{inputIndices:n,inputShape:a,newShape:i});return{outputIndices:s[0],outputShape:s[1]}}}),pC=ay({sparseSegmentMean_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"data","sparseSegmentMean"),a=af(t,"indices","sparseSegmentMean","int32"),i=af(r,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(1!==i.rank)throw Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);return ai.runKernel(rR,{data:n,indices:a,segmentIds:i})}}),pI=ay({sparseSegmentSum_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=af(e,"data","sparseSegmentSum"),a=af(t,"indices","sparseSegmentSum","int32"),i=af(r,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(1!==i.rank)throw Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);return ai.runKernel(rA,{data:n,indices:a,segmentIds:i})}}),pT=ay({stringNGrams_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a,i,s,o){let u=af(e,"data","stringNGrams","string");if("string"!==u.dtype)throw Error("Data must be of datatype string");if(1!==u.shape.length)throw Error(`Data must be a vector, saw: ${u.shape}`);let l=af(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw Error("Data splits must be of datatype int32");let d=ai.runKernel(rM,{data:u,dataSplits:l},{separator:r,nGramWidths:n,leftPad:a,rightPad:i,padWidth:s,preserveShortSequences:o});return{nGrams:d[0],nGramsSplits:d[1]}}}),p$=ay({stringSplit_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r=!0){let n=af(e,"input","stringSplit","string"),a=af(t,"delimiter","stringSplit","string");if(1!==n.rank)throw Error(`Input should be Tensor1D but received shape ${n.shape}`);if(0!==a.rank)throw Error(`Delimiter should be a scalar but received shape ${a.shape}`);let i=ai.runKernel(rL,{input:n,delimiter:a},{skipEmpty:r});return{indices:i[0],values:i[1],shape:i[2]}}}),pN=ay({stringToHashBucketFast_:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=af(e,"input","stringToHashBucketFast","string");if(t<=0)throw Error("Number of buckets must be at least 1");return ai.runKernel(rB,{input:r},{numBuckets:t})}}),pE=ay({staticRegexReplace_:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n=!0){let a=af(e,"input","staticRegexReplace","string");return ai.runKernel(rD,{x:a},{pattern:t,rewrite:r,replaceGlobal:n})}}),pR={fft:d5,ifft:d8,rfft:he,irfft:d7},pA={hammingWindow:hK,hannWindow:hq,frame:hX,stft:hY},p_={flipLeftRight:hZ,grayscaleToRGB:hJ,resizeNearestNeighbor:ps,resizeBilinear:pi,rgbToGrayscale:h0,rotateWithOffset:h1,cropAndResize:hQ,nonMaxSuppression:h3,nonMaxSuppressionAsync:pe,nonMaxSuppressionWithScore:pt,nonMaxSuppressionWithScoreAsync:pr,nonMaxSuppressionPadded:pn,nonMaxSuppressionPaddedAsync:pa,threshold:po,transform:pu},pO={bandPart:pl,gramSchmidt:pd,qr:pp},pF={absoluteDifference:pf,computeWeightedLoss:pc,cosineDistance:pm,hingeLoss:pg,huberLoss:py,logLoss:px,meanSquaredError:pb,sigmoidCrossEntropy:pv,softmaxCrossEntropy:pw},pD={sparseFillEmptyRows:pS,sparseReshape:pk,sparseSegmentMean:pC,sparseSegmentSum:pI},pP={stringNGrams:pT,stringSplit:p$,stringToHashBucketFast:pN,staticRegexReplace:pE};p(uO,hw),p(uO,hk),p(uO,lk),p(uO,hI),p(uO,h$),p(uO,l0),p(uO,hE),p(uO,hA),p(uO,hO),p(uO,hD),p(uO,hL);var pM={};function pL(e){return new Promise(e=>setTimeout(e)).then(e)}u(pM,"copyModel",function(){return iK}),u(pM,"listModels",function(){return iH}),u(pM,"moveModel",function(){return iq}),u(pM,"removeModel",function(){return ij}),u(pM,"browserFiles",function(){return pU}),u(pM,"browserHTTPRequest",function(){return pY}),u(pM,"CompositeArrayBuffer",function(){return aS}),u(pM,"concatenateArrayBuffers",function(){return iy}),u(pM,"decodeWeights",function(){return il}),u(pM,"decodeWeightsStream",function(){return ic}),u(pM,"encodeWeights",function(){return iu}),u(pM,"fromMemory",function(){return p0}),u(pM,"fromMemorySync",function(){return p1}),u(pM,"getLoadHandlers",function(){return iN}),u(pM,"getModelArtifactsForJSON",function(){return iw}),u(pM,"getModelArtifactsForJSONSync",function(){return iv}),u(pM,"getModelArtifactsInfoForJSON",function(){return iS}),u(pM,"getSaveHandlers",function(){return i$}),u(pM,"getWeightSpecs",function(){return ik}),u(pM,"http",function(){return pX}),u(pM,"isHTTPScheme",function(){return pK}),u(pM,"loadWeights",function(){return pG}),u(pM,"registerLoadRouter",function(){return iT}),u(pM,"registerSaveRouter",function(){return iI}),u(pM,"weightsLoaderFactory",function(){return pH}),u(pM,"withSaveHandler",function(){return p2}),u(pM,"withSaveHandlerSync",function(){return p3});class pB{constructor(e){if(!ey.getBool("IS_BROWSER"))throw Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(pB.URL_SCHEME)&&(e=e.slice(pB.URL_SCHEME.length)),(null==e||0===e.length)&&(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw Error("Browser downloads are not supported in this environment since `document` is not present");let t=aS.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],n=ib(e,t),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await pL(()=>i.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=r,await pL(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:iS(e)}}}}pB.URL_SCHEME="downloads://";class pz{constructor(e){if(null==e||e.length<1)throw Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let r=new FileReader;r.onload=r=>{let n=JSON.parse(r.target.result),a=n.modelTopology;if(null==a){t(Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(null==n.weightsManifest){t(Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(0===this.weightsFiles.length){e({modelTopology:a});return}e(iw(n,e=>this.loadWeights(e)))},r.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){let t=[],r=[];for(let n of e)t.push(...n.weights),r.push(...n.paths);let n=this.checkManifestAndWeightFiles(e);return Promise.all(r.map(e=>this.loadWeightsFile(e,n[e]))).then(e=>[t,e])}loadWeightsFile(e,t){return new Promise((r,n)=>{let a=new FileReader;a.onload=e=>{r(e.target.result)},a.onerror=t=>n(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],r=this.weightsFiles.map(e=>ix(e.name)),n={};for(let a of e)a.paths.forEach(e=>{let a=ix(e);if(-1!==t.indexOf(a))throw Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===r.indexOf(a))throw Error(`Weight file with basename '${a}' is not provided.`);n[e]=this.weightsFiles[r.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return n}}function pU(e){return new pz(e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(e,t,r,n){var a,i;E(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array"),a=r=null==r?0:r,i=n=null==n?1:n,E(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),E(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`),E(i>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${i}`);let s=0;return Promise.all(e.map(a=>(a.then(a=>(t(r+ ++s/e.length*(n-r)),a)),a)))}async function pW(e,t){null==t&&(t={});let r=null==t.fetchFunc?ey.platform.fetch:t.fetchFunc,n=e.map(e=>r(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(n):await pV(n,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await pV(a,t.onProgress,.5,1)}async function pG(e,t="",r,n){return pH(e=>pW(e,{requestInit:n}))(e,t,r)}function pH(e){return async(t,r="",n)=>{let a=t.map(()=>!1),i={},s=null!=n?n.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let r=0;e.weights.forEach(e=>{let u=aw["quantization"in e?e.quantization.dtype:e.dtype]*_(e.shape),l=()=>{a[t]=!0,null==i[t]&&(i[t]=[]),i[t].push({manifestEntry:e,groupOffset:r,sizeBytes:u})};null!=n?n.forEach((t,r)=>{t===e.name&&(l(),s[r]=!0)}):l(),o.push(e.name),r+=u})}),!s.every(e=>e)){let e=n.filter((e,t)=>!s[t]);throw Error(`Could not find weights in manifest with names: ${e.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=a.reduce((e,t,r)=>(t&&e.push(r),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{let t=r+(r.endsWith("/")?"":"/")+e;l.push(t)})});let d=await e(l),h={},p=0;return u.forEach(e=>{let r=t[e].paths.length,n=new aS(d.slice(p,p+r));i[e].forEach(e=>{let t=il(n.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)h[e]=t[e]}),p+=r}),h}}iC.registerSaveRouter(e=>ey.getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pB.URL_SCHEME)?function(e="model"){return new pB(e)}(e.slice(pB.URL_SCHEME.length)):null);class pj{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(E("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=ey.platform.fetch,E(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&E(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],n=ib(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){let r=aS.join(e.weightData);t.body.append("model.weights.bin",new Blob([r],{type:"application/octet-stream"}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:iS(e),responses:[a]};throw Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async loadModelJSON(){let e;let t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",Error(e)}let r=e.modelTopology,n=e.weightsManifest;if(null==r&&null==n)throw Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){return this.loadOptions.streamWeights?this.loadStream():iw(await this.loadModelJSON(),e=>this.loadWeights(e))}async loadStream(){let e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=ik(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:()=>(function(e,t){var r;let n;let a=null==t.fetchFunc?ey.platform.fetch:t.fetchFunc,i=0;return null===(r=t.onProgress)||void 0===r||r.call(t,0),new ReadableStream({pull:async r=>{for(var s;i<e.length;){n||(n=(await a(e[i],t.requestInit,{isBinary:!0})).body.getReader());let{done:o,value:u}=await n.read();if(o){i++,n=void 0,null===(s=t.onProgress)||void 0===s||s.call(t,i/e.length);continue}r.enqueue(u);return}r.close()}})})(t,this.loadOptions)})}async getWeightUrls(e){let[t,r]=function(e){let t=e.lastIndexOf("/"),r=e.lastIndexOf("?");return[e.substring(0,t)+"/",r>t?e.substring(r):""]}(Array.isArray(this.path)?this.path[1]:this.path),n=this.weightPathPrefix||t,a=[],i=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(n+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){let t=await this.getWeightUrls(e);return[ik(e),await pW(t,this.loadOptions)]}}function pK(e){return null!=e.match(pj.URL_SCHEME_REGEX)}pj.URL_SCHEME_REGEX=/^https?:\/\//;let pq=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc));else if(Array.isArray(e)?e.every(e=>pK(e)):pK(e))return pX(e,t);return null};function pX(e,t){return new pj(e,t)}function pY(e,t){return pX(e,t)}iC.registerSaveRouter(pq),iC.registerLoadRouter(pq);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pQ{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class pZ{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class pJ{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function p0(e,t,r,n){let a=arguments;return new pJ(p1(...a))}function p1(e,t,r,n){return 1!=arguments.length?(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pQ({modelTopology:e,weightSpecs:t,weightData:r,trainingConfig:n})):null!=e.modelTopology||null!=e.weightSpecs?new pQ(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new pQ({modelTopology:e}))}function p2(e){return new pZ(e)}function p3(e){return new pZ(e)}var p4={};u(p4,"nonMaxSuppressionV3Impl",function(){return h6}),u(p4,"nonMaxSuppressionV4Impl",function(){return h5}),u(p4,"nonMaxSuppressionV5Impl",function(){return h8}),u(p4,"whereImpl",function(){return hb});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let p6="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();!function(){for(let e of sf)!function(e,t,r){E(null!=e.className,()=>"Class being registered does not have the static className property defined."),E("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),E(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),void 0===t&&(t="Custom"),void 0===r&&(r=e.className);let n=t+">"+r;sr.register(e),i9.set(n,e),se.set(e,n)}(e)}();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let p5={},p8={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function p7(e,t){if(!(e in p5)||null!=t){let r=function(e,t){if(1!==e&&2!==e)throw Error("Cannot get WebGL rendering context, WebGL is disabled.");let r=null==t?function(e){if(!ey.getBool("IS_SAFARI")&&"undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw Error("Cannot create a canvas in this context")}(e):t;return(r.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete p5[e]},!1),ey.getBool("SOFTWARE_WEBGL_ENABLED")&&(p8.failIfMajorPerformanceCaveat=!1),1===e)?r.getContext("webgl",p8)||r.getContext("experimental-webgl",p8):r.getContext("webgl2",p8)}(e,t);if(null===r)return console.log("Could not get context for WebGL version",e),null;p5[e]=r}let r=p5[e];return null==r||r.isContextLost()?(delete p5[e],p7(e)):(r.disable(r.DEPTH_TEST),r.disable(r.STENCIL_TEST),r.disable(r.BLEND),r.disable(r.DITHER),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SAMPLE_COVERAGE),r.enable(r.SCISSOR_TEST),r.enable(r.CULL_FACE),r.cullFace(r.BACK),p5[e])}function p9(e){let t=Math.ceil(r9.sizeFromShape(e)/4);return r9.sizeToSquarishShape(t)}function ce(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function ct(e,t){let r,n,a,i,s,o,u,l,d,h;return 2===ey.getNumber("WEBGL_VERSION")?(r=e.R32F,n=e.R16F,a=e.RGBA16F,i=e.RGBA32F,s=e.RED,u=4,l=1,d=e.HALF_FLOAT,h=e.FLOAT,o=e.RGBA8):(r=e.RGBA,n=e.RGBA,a=e.RGBA,i=e.RGBA,s=e.RGBA,u=4,l=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:n,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:s,downloadTextureFormat:o,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function cr(e,t){let r=t();return ey.getBool("DEBUG")&&function(e){let t=e.getError();if(t!==e.NO_ERROR)throw Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),r}function cn(e,t){return ch(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}(TE=T1||(T1={}))[TE.DENSE=0]="DENSE",TE[TE.SHARED_BATCH=1]="SHARED_BATCH",(TR=T2||(T2={}))[TR.RENDER=0]="RENDER",TR[TR.UPLOAD=1]="UPLOAD",TR[TR.PIXELS=2]="PIXELS",TR[TR.DOWNLOAD=3]="DOWNLOAD",(TA=T3||(T3={}))[TA.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",TA[TA.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",TA[TA.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",TA[TA.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",TA[TA.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16";let ca=/ERROR: [0-9]+:([0-9]+):/g;function ci(e,t){let r=ca.exec(t);if(null==r){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let n=+r[1],a=e.split("\n"),i=a.length.toString().length+2,s=a.map((e,t)=>r9.rightPad((t+1).toString(),i)+e),o=0;for(let e=0;e<s.length;e++)o=Math.max(s[e].length,o);let u=s.slice(0,n-1),l=s.slice(n-1,n),d=s.slice(n);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r9.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function cs(e,t){if(cr(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Shader program validation failed.")}function co(e,t,r,n,a,i,s){let o=e.getAttribLocation(t,r);return -1!==o&&(cr(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),cr(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,i,s)),cr(e,()=>e.enableVertexAttribArray(o)),!0)}function cu(e,t,r){cr(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,r)),cr(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function cl(e,t){cr(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),cr(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function cd(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function ch(e,t,r){let n=cr(e,()=>t());if(null==n)throw Error(r);return n}function cp(e,t=2){return r9.sizeFromShape(e.slice(0,e.length-t))}function cc(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function cf(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[cp(e),...cc(e)]),t}function cm(e,t){if(e=e.slice(-2),t=t.slice(-2),r9.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let r=e[e.length-1],n=t[t.length-1];if(r===n||r%2==0&&n%2==0&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&e[0]%2==0&&t[0]%2==0}function cg(e,t){return null!=e.getExtension(t)}function cy(e){try{let t=p7(e);if(null!=t)return!0}catch(e){console.log("Error when getting WebGL context: ",e)}return!1}function cx(e){let t=ct(e),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let n=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,n),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(n),a}function cb(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r9.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}let cv=ey;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cw(){let e,t,r,n,a,i,s,o,u,l;return 2===ey.getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",r="out",n="in",a="texture",i="outputColor",s="out vec4 outputColor;",o=ey.getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",r="varying",n="varying",a="texture2D",i="gl_FragColor",s="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:r,varyingFs:n,texture2D:a,output:i,defineOutput:s,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(e,t,r="index"){let n=r9.computeStrides(t);return n.map((t,a)=>{let i=`int ${e[a]} = ${r} / ${t}`,s=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`;return`${i}; ${s};`}).join("")}function ck(e,t,r="index"){let n=r9.computeStrides(t);return n.map((t,a)=>{let i=`int ${e[a]} = ${r} / outShapeStrides[${a}]`,s=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${i}; ${s};`}).join("")}function cC(e){let t=r9.computeStrides(e).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function cI(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}cv.registerFlag("HAS_WEBGL",()=>cv.getNumber("WEBGL_VERSION")>0),cv.registerFlag("WEBGL_VERSION",()=>cy(2)?2:cy(1)?1:0),cv.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),cv.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===cv.get("WEBGL_VERSION")),cv.registerFlag("WEBGL_CPU_FORWARD",()=>!0),cv.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),cv.registerFlag("WEBGL_PACK",()=>cv.getBool("HAS_WEBGL")),cv.registerFlag("WEBGL_PACK_NORMALIZATION",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_CLIP",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_REDUCE",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_LAZILY_UNPACK",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_CONV_IM2COL",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>cv.getBool("WEBGL_PACK")),cv.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>(function(e){if(null==a){let t=p7(e);a=t.getParameter(t.MAX_TEXTURE_SIZE)}return a})(cv.getNumber("WEBGL_VERSION"))),cv.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>(function(e){if(null==i){let t=p7(e);i=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,i)})(cv.getNumber("WEBGL_VERSION"))),cv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=cv.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t=p7(e);return cg(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:cg(t,"EXT_disjoint_timer_query")?1:0}(e)}),cv.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>cv.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ao.isMobile()),cv.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>(function(e){if(0===e)return!1;let t=p7(e);if(1===e){if(!cg(t,"OES_texture_float"))return!1}else if(!cg(t,"EXT_color_buffer_float"))return!1;return cx(t)})(cv.getNumber("WEBGL_VERSION"))),cv.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!cv.getBool("WEBGL_FORCE_F16_TEXTURES")&&cv.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),cv.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>(function(e){if(0===e)return!1;let t=p7(e);if(1===e){if(!cg(t,"OES_texture_float")||!cg(t,"WEBGL_color_buffer_float"))return!1}else{if(cg(t,"EXT_color_buffer_float"))return cx(t);let e="EXT_color_buffer_half_float";if(cg(t,e)){let r=t.getExtension(e);return function(e,t){let r=ct(e,t),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,r.internalFormatHalfFloat,1,1,0,r.textureFormatFloat,r.textureTypeHalfFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),i}(t,r)}return!1}return cx(t)})(cv.getNumber("WEBGL_VERSION"))),cv.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{var e;return 2===(e=cv.getNumber("WEBGL_VERSION"))&&null!=p7(e).fenceSync}),cv.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>cv.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),cv.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),cv.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ao.isMobile()?1:-1,e=>{if("number"!=typeof e)throw Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),cv.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),cv.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),cv.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),cv.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),cv.registerFlag("WEBGL_EXP_CONV",()=>!1),cv.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>cv.getBool("IS_TEST")),cv.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),cv.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),cv.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1),cv.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);let cT=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:c$}=sg,cN=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cE=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cR=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,cA=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function c_(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function cO(e){return`offset${e}`}function cF(e){let t=e.name,r=r9.sizeFromShape(e.shapeInfo.logicalShape);return r<2?`return ${t};`:`
    for (int i = 0; i < ${r}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function cD(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function cP(e,t,r){let{newShape:n,keptDims:a}=r9.squeezeShape(t),i=t.length,s=e&&3===i&&1===t[0],o=s?t.slice(1):n,u=!e&&i>1&&!r9.arraysEqual(t,r)&&n.length<i||s,l=u?o:t;return{useSqueezeShape:u,uniformShape:l,keptDims:a}}function cM(e,t){let r=JSON.parse(JSON.stringify(e));return r.shapeInfo.logicalShape=t,r}function cL(e,t){return t.map(t=>e[t]).join(", ")}function cB(e,t,r){let n,a,i;let s=[],o=[],u=null,l=null;for(let n of(l=e.getUniformLocation(r,"NAN",!1),1===ey.getNumber("WEBGL_VERSION")&&(u=e.getUniformLocation(r,"INFINITY",!1)),t.variableNames)){let a={name:n,uniform:e.getUniformLocation(r,n,!1),offset:e.getUniformLocation(r,`offset${n}`,!1)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(r,`${n}Shape`,!1),a.texShape=e.getUniformLocation(r,`${n}TexShape`,!1)),s.push(a)}if(t.enableShapeUniforms&&(n=e.getUniformLocation(r,"outShape",!1),i=e.getUniformLocation(r,"outShapeStrides",!1),a=e.getUniformLocation(r,"outTexShape",!1)),t.customUniforms)for(let n of t.customUniforms)o.push(e.getUniformLocation(r,n.name,!1));return{variablesLocations:s,customUniformLocations:o,infLoc:u,nanLoc:l,outShapeLocation:n,outShapeStridesLocation:i,outTexShapeLocation:a}}function cz(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,r)=>{let n=e.logicalShape,a=t[r],i=a.shape;if(!r9.arraysEqual(n,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${n} and ${i} must match`);if(e.isUniform&&a.isUniform)return;let s=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!r9.arraysEqual(s,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${s} and ${o} must match`)})}function cU(e){return ey.getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class cV{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=T1.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=cw();this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ck(["r","c","d"],e):cS(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cW{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=T1.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=cw();this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ck(["r","c","d"],e):cS(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cG{constructor(e){this.variableNames=["A"],this.outTexUsage=T2.DOWNLOAD;let t=cw();this.outputShape=e,this.userCode=`
      ${cT}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=T2.DOWNLOAD;let t=cw();this.outputShape=e,this.userCode=`
      ${cT}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cj={R:0,G:1,B:2,A:3};class cK{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=cw();this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let i="";for(let e=0;e<r.length;e++){let t=r[e];i+=`
          if(offset == ${e}) {
            result = values[${cj[t]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?cI():cC(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${n.texture2D}(A, uv);
          ${i}
        }
        ${n.output} = vec4(${a}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cq{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=cw();this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length);let n="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){let i=2*t+a;n+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${t};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${i}] = values[0];
            } else if (offset == 1) {
              result[${i}] = values[1];
            } else if (offset == 2) {
              result[${i}] = values[2];
            } else {
              result[${i}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?cI():cC(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${n}

          ${r.output} = ${a};
        }
    `}}function cX(e,t,r,n,a,i){!function(e,t){let r=ey.getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>r||t>r)throw Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${r}x${r}].`)}(t,r);let s=ch(e,()=>e.createTexture(),"Unable to create WebGLTexture."),o=e.TEXTURE_2D;return cr(e,()=>e.bindTexture(o,s)),cr(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),cr(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),cr(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),cr(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),1===ey.getNumber("WEBGL_VERSION")?cr(e,()=>e.texImage2D(o,0,n,t,r,0,a,i,null)):cr(e,()=>e.texStorage2D(o,1,n,t,r)),cr(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:s,texShape:[r,t]}}function cY(e){return e.internalFormatFloat}function cQ(e){return e.internalFormatHalfFloat}function cZ(e){return e.downloadTextureFormat}function cJ(e){return e.internalFormatPackedFloat}function c0(e){return e.internalFormatPackedHalfFloat}class c1{constructor(e){var t,r;this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let n=ey.getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,t=e,p5[n]=t):this.gl=p7(n),e=this.gl,2===ey.getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>cr(t,()=>t.createVertexArray()),this.bindVertexArray=e=>cr(t,()=>t.bindVertexArray(e)),this.deleteVertexArray=e=>cr(t,()=>t.deleteVertexArray(e)),this.getVertexArray=()=>cr(t,()=>t.getParameter(t.VERTEX_ARRAY_BINDING))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>cr(e,()=>t.createVertexArrayOES()),this.bindVertexArray=r=>cr(e,()=>t.bindVertexArrayOES(r)),this.deleteVertexArray=r=>cr(e,()=>t.deleteVertexArrayOES(r)),this.getVertexArray=()=>cr(e,()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES))}let a="WEBGL_color_buffer_float",i="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ey.getNumber("WEBGL_VERSION")){let e="OES_texture_half_float";if(this.textureFloatExtension=cn(this.gl,"OES_texture_float"),cg(this.gl,e))this.textureHalfFloatExtension=cn(this.gl,e);else if(ey.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(a),cg(this.gl,i))this.colorBufferHalfFloatExtension=cn(this.gl,i);else if(ey.get("WEBGL_FORCE_F16_TEXTURES"))throw Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(a="EXT_color_buffer_float",cg(this.gl,a))this.colorBufferFloatExtension=this.gl.getExtension(a);else if(cg(this.gl,i))this.colorBufferHalfFloatExtension=this.gl.getExtension(i);else throw Error("GL context does not support color renderable floats");this.vertexBuffer=function(e,t){let r=ch(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return cr(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),cr(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),r}(this.gl,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])),this.indexBuffer=function(e,t){let r=ch(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return cr(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)),cr(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),r}(this.gl,new Uint16Array([0,1,2,2,1,3])),this.framebuffer=ch(r=this.gl,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer."),this.textureConfig=ct(this.gl,this.textureHalfFloatExtension)}get debug(){return ey.getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;cr(e,()=>e.finish()),cr(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),cr(e,()=>e.deleteFramebuffer(this.framebuffer)),cr(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),cr(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),cr(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,i]=[r,t];return cX(e,a,i,cY(n),n.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,i]=[r,t];return cX(e,a,i,cQ(n),n.textureFormatFloat,n.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,i]=[r,t];return cX(e,a,i,cZ(n),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){var r;this.throwIfDisposed(),cr(r=this.gl,()=>r.bindTexture(r.TEXTURE_2D,e)),t.data instanceof Uint8Array?2===ey.getNumber("WEBGL_VERSION")?cr(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,t.width,t.height,r.RGBA,r.UNSIGNED_BYTE,t.data)):cr(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t.width,t.height,0,r.RGBA,r.UNSIGNED_BYTE,t.data)):2===ey.getNumber("WEBGL_VERSION")?cr(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,t)):cr(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)),cr(r,()=>r.bindTexture(r.TEXTURE_2D,null))}uploadDenseMatrixToTexture(e,t,r,n){var a,i;let s,o,u;this.throwIfDisposed(),a=this.gl,i=this.textureConfig,cr(a,()=>a.bindTexture(a.TEXTURE_2D,e)),n instanceof Uint8Array?(s=new Uint8Array(t*r*4),o=a.UNSIGNED_BYTE,u=a.RGBA):(s=new Float32Array(t*r*4),o=a.FLOAT,u=i.internalFormatPackedFloat),s.set(n),2===ey.getNumber("WEBGL_VERSION")?cr(a,()=>a.texSubImage2D(a.TEXTURE_2D,0,0,0,t,r,a.RGBA,o,s)):cr(a,()=>a.texImage2D(a.TEXTURE_2D,0,u,t,r,0,a.RGBA,o,s)),cr(a,()=>a.bindTexture(a.TEXTURE_2D,null))}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,i]=ce(t,r);return cX(e,a,i,c0(n),e.RGBA,n.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,r,n){let[a,i]=ce(t,r);return cX(e,a,i,cJ(n),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(cl(this.gl,this.framebuffer),this.outputTexture=null),cr(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>(function(e,t,r,n){let[a,i]=[r,t],s=new Uint8Array(t*r*4);return cr(e,()=>e.readPixels(0,0,a,i,n.downloadTextureFormat,e.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)})(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,n,a,i){return function(e,t,r,n,a,i,s,o){let u=new Float32Array(function(e,t){let[r,n]=ce(e,t);return r*n*4}(i,s));return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,u),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,r){let n=new Float32Array(r);return e.bindBuffer(e.PIXEL_PACK_BUFFER,t),e.getBufferSubData(e.PIXEL_PACK_BUFFER,0,n),e.bindBuffer(e.PIXEL_PACK_BUFFER,null),n}(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);let n=function(e,t,r,n){let a=e.createBuffer();cr(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let i=16*t*r;return cr(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)),cr(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,0)),cr(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),n}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(ey.getBool("WEBGL_FENCE_API_ENABLED")){let n=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{let t=e.clientWaitSync(n,0,0);return t===e.ALREADY_SIGNALED||t===e.CONDITION_SATISFIED},t=n}else ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>(function(e,t,r){let n=new Float32Array(t*r*4);return cr(e,()=>e.readPixels(0,0,r,t,e.RGBA,e.FLOAT,n)),n})(this.gl,t,r))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=cw();return function(e,t){let r=ch(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(cr(e,()=>e.shaderSource(r,t)),cr(e,()=>e.compileShader(r)),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),Error("Failed to compile vertex shader.");return r}(e,`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`)}(t));let r=ch(t,()=>t.createProgram(),"Unable to create WebGLProgram.");cr(t,()=>t.attachShader(r,this.vertexShader)),cr(t,()=>t.attachShader(r,e)),function(e,t){if(cr(e,()=>e.linkProgram(t)),!ey.get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),Error("Failed to link vertex and fragment shaders.")}(t,r);let n=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&cs(t,n),n}buildVao(e){var t;this.setProgram(e),this.bindVertexArray(e.vao);let r=this.gl;cr(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),t=this.vertexBuffer,cr(r,()=>r.bindBuffer(r.ARRAY_BUFFER,t)),co(r,e,"clipSpacePos",t,3,20,0)&&co(r,e,"uv",t,2,20,12)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(cr(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&cs(this.gl,this.program),cr(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){var n,a;return(this.throwIfDisposed(),r)?ch(n=this.gl,()=>n.getUniformLocation(e,a),'uniform "'+(a=t)+'" not present in program.'):this.gl.getUniformLocation(e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),cr(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){var n;this.throwIfDisposed(),this.throwIfNoProgram(),cr(n=this.gl,()=>{(function(e,t){let r=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+e.TEXTURE0;if(n<e.TEXTURE0||n>r){let e=`[gl.TEXTURE0, gl.TEXTURE${r}]`;throw Error(`textureUnit must be in ${e}.`)}})(n,r),cr(n,()=>n.activeTexture(n.TEXTURE0+r)),cr(n,()=>n.bindTexture(n.TEXTURE_2D,e))}),cr(n,()=>n.uniform1i(t,r))}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();let[n,a]=ce(t,r);this.setOutputMatrixTextureDriver(e,n,a)}setOutputMatrixWriteRegion(e,t,r,n){this.setOutputMatrixWriteRegionDriver(r,e,n,t)}setOutputPackedMatrixWriteRegion(e,t,r,n){throw Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&cs(this.gl,this.program),cd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&(console.assert(this.getVertexArray()===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()),cr(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),cr(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=cn(this.gl,2===ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),r=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();e.endQuery(t.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r9.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,r=this.getQueryTimerExtensionWebGL2(),n=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),n&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),r=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){let r;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||("setTimeoutCustom"in ey.platform&&(r=ey.platform.setTimeoutCustom.bind(ey.platform)),r9.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,r))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),cu(this.gl,e,this.framebuffer),this.debug&&cd(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(cu(this.gl,this.outputTexture,this.framebuffer),this.debug&&cd(this.gl)):cl(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();let n=this.gl;cu(n,e,this.framebuffer),this.debug&&cd(n),this.outputTexture=e,cr(n,()=>n.viewport(0,0,t,r)),cr(n,()=>n.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,n){this.throwIfDisposed(),cr(this.gl,()=>this.gl.scissor(e,t,r,n))}throwIfDisposed(){if(this.disposed)throw Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw Error("No GPU program is currently set.")}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var c2={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r9.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}function c4(e){let t=new Float32Array(e.length);for(let r=0;r<e.length;++r)t[r]=Math.abs(e[r]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(e){return(t,r,n,a,i)=>{let s=sg.assertAndGetBroadcastShape(t,r),o=s.length,u=r9.computeStrides(s),l=r9.sizeFromShape(s),d=r9.getTypedArrayFromDType(i,l),h=t.length,p=r.length,c=r9.computeStrides(t),f=r9.computeStrides(r),m=sg.getBroadcastDims(t,s),g=sg.getBroadcastDims(r,s);if(m.length+g.length===0)for(let t=0;t<d.length;++t)d[t]=e(n[t%n.length],a[t%a.length]);else for(let t=0;t<d.length;++t){let r=r9.indexToLoc(t,o,u),i=r.slice(-h);m.forEach(e=>i[e]=0);let s=r9.locToIndex(i,h,c),l=r.slice(-p);g.forEach(e=>l[e]=0);let y=r9.locToIndex(l,p,f);d[t]=e(n[s],a[y])}return[d,s]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,i=r.data.get(n.dataId).values,s=r.data.get(a.dataId).values,o=r.makeTensorInfo(n.shape,"complex64");return r.data.get(o.dataId).complexTensorInfos={real:r.makeTensorInfo(n.shape,"float32",i),imag:r.makeTensorInfo(a.shape,"float32",s)},o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c8(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function c7(e,t,r,n){if("int32"===n)return[t,"int32",Int32Array.from(e)];if("bool"===n){let n=r9.toTypedArray([0],r),[a,i]=c6((e,t)=>e!==t?1:0)(t,[],e,n,"bool");return[i,"bool",a]}throw Error(`Error in Cast: failed to cast ${r} to ${n}`)}function c9(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dtype:i}=n;if("complex64"===i){if("complex64"===a.dtype)return c8({inputs:{x:a},backend:r});let e=function e(t,r,n="float32"){if("complex64"===n)return c5({inputs:{real:e(t,r,"float32"),imag:e(t,r,"float32")},backend:t});let a=r9.makeZerosTypedArray(r9.sizeFromShape(r),n);return t.makeTensorInfo(r,n,a)}(r,a.shape,a.dtype),t=c9({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),n=c5({inputs:{real:t,imag:e},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),n}if("complex64"===a.dtype){let e=/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{input:n}=t,a=r.data.get(n.dataId).complexTensorInfos.real,i=r.data.get(a.dataId).values;return r.makeTensorInfo(a.shape,a.dtype,i)}({inputs:{input:a},backend:r}),t=c9({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),t}if(!r9.hasEncodingLoss(a.dtype,i)){let e=c8({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}let[s,o,u]=c7(r.data.get(a.dataId).values,a.shape,a.dtype,i);return r.makeTensorInfo(s,o,u)}function fe(e,t,r,n){return null==r?({inputs:r,backend:a})=>{let{a:i,b:s}=r;c3([i,s],e);let o=a.data.get(i.dataId).values,u=a.data.get(s.dataId).values,l="string"===i.dtype?sg.fromUint8ToStringArray(o):o,d="string"===i.dtype?sg.fromUint8ToStringArray(u):u,h=n||i.dtype,[p,c]=t(i.shape,s.shape,l,d,h);return a.makeTensorInfo(c,h,p)}:({inputs:e,backend:a})=>{let{a:i,b:s}=e;if("complex64"===i.dtype||"complex64"===s.dtype){let e=c9({inputs:{x:i},backend:a,attrs:{dtype:"complex64"}}),t=a.data.get(e.dataId),n=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,u=a.data.get(n.dataId).values,l=a.data.get(o.dataId).values,d=c9({inputs:{x:s},backend:a,attrs:{dtype:"complex64"}}),h=a.data.get(d.dataId),p=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=a.data.get(p.dataId).values,m=a.data.get(c.dataId).values,[g,y,x]=r(i.shape,s.shape,u,l,f,m),b=a.makeTensorInfo(x,"float32",g),v=a.makeTensorInfo(x,"float32",y),w=c5({inputs:{real:b,imag:v},backend:a});return a.disposeIntermediateTensorInfo(e),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(v),w}{let e=a.data.get(i.dataId).values,r=a.data.get(s.dataId).values,o=n||i.dtype,[u,l]=t(i.shape,s.shape,e,r,o);return a.makeTensorInfo(l,o,u)}}}function ft(e){return(t,r,n,a,i,s)=>{let o=sg.assertAndGetBroadcastShape(t,r),u=r9.sizeFromShape(o),l=o.length,d=r9.computeStrides(o),h=r9.getTypedArrayFromDType("float32",u),p=r9.getTypedArrayFromDType("float32",u),c=sg.getBroadcastDims(t,o),f=sg.getBroadcastDims(r,o),m=sg.mergeRealAndImagArrays(n,a),g=sg.mergeRealAndImagArrays(i,s),y=t.length,x=r9.computeStrides(t),b=r.length,v=r9.computeStrides(r);if(c.length+f.length===0)for(let t=0;t<h.length;t++){let r=t%m.length,n=t%g.length,a=e(m[2*r],m[2*r+1],g[2*n],g[2*n+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){let r=r9.indexToLoc(t,l,d),n=r.slice(-y);c.forEach(e=>n[e]=0);let a=r9.locToIndex(n,y,x),i=r.slice(-b);f.forEach(e=>i[e]=0);let s=r9.locToIndex(i,b,v),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}u(c2,"simpleAbsImpl",function(){return c4}),u(c2,"addImpl",function(){return fr}),u(c2,"bincountImpl",function(){return fn}),u(c2,"bincountReduceImpl",function(){return fa}),u(c2,"bitwiseAndImpl",function(){return fi}),u(c2,"castImpl",function(){return c7}),u(c2,"ceilImpl",function(){return fu}),u(c2,"concatImpl",function(){return fl}),u(c2,"equalImpl",function(){return fd}),u(c2,"expImpl",function(){return fh}),u(c2,"expm1Impl",function(){return fp}),u(c2,"floorImpl",function(){return fc}),u(c2,"floorDivImpl",function(){return ff}),u(c2,"gatherNdImpl",function(){return fm}),u(c2,"gatherV2Impl",function(){return fg}),u(c2,"greaterImpl",function(){return fy}),u(c2,"greaterEqualImpl",function(){return fx}),u(c2,"lessImpl",function(){return fb}),u(c2,"lessEqualImpl",function(){return fv}),u(c2,"linSpaceImpl",function(){return fw}),u(c2,"logImpl",function(){return fS}),u(c2,"maxImpl",function(){return fk}),u(c2,"maximumImpl",function(){return fC}),u(c2,"minimumImpl",function(){return fI}),u(c2,"multiplyImpl",function(){return fT}),u(c2,"negImpl",function(){return f$}),u(c2,"notEqualImpl",function(){return fN}),u(c2,"prodImpl",function(){return fR}),u(c2,"raggedGatherImpl",function(){return f_}),u(c2,"raggedRangeImpl",function(){return fO}),u(c2,"raggedTensorToTensorImpl",function(){return fL}),u(c2,"rangeImpl",function(){return fB}),u(c2,"rsqrtImpl",function(){return fz}),u(c2,"scatterImpl",function(){return fU}),u(c2,"sigmoidImpl",function(){return fV}),u(c2,"sliceImpl",function(){return fW}),u(c2,"sparseFillEmptyRowsImpl",function(){return fG}),u(c2,"sparseReshapeImpl",function(){return fH}),u(c2,"sparseSegmentReductionImpl",function(){return fj}),u(c2,"sqrtImpl",function(){return fK}),u(c2,"squaredDifferenceImpl",function(){return fq}),u(c2,"staticRegexReplaceImpl",function(){return fX}),u(c2,"stridedSliceImpl",function(){return fY}),u(c2,"stringNGramsImpl",function(){return fZ}),u(c2,"stringSplitImpl",function(){return fJ}),u(c2,"stringToHashBucketFastImpl",function(){return f0}),u(c2,"subImpl",function(){return f1}),u(c2,"tileImpl",function(){return f2}),u(c2,"topKImpl",function(){return f4}),u(c2,"transposeImpl",function(){return fE}),u(c2,"uniqueImpl",function(){return f6});let fr=c6((e,t)=>e+t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fn(e,t,r,n,a){let i=r9.sizeFromShape(n),s=r9.makeZerosTypedArray(a,r);for(let r=0;r<e.length;r++){let n=e[r];if(n<0)throw Error("Input x must be non-negative!");n>=a||(i>0?s[n]+=t[r]:s[n]+=1)}return s}function fa(e,t,r,n=!1){let a=e.shape[0],i=e.shape[1],s=iY([a,r],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<i;a++){let i=e.get(o,a);if(i<0)throw Error("Input x must be non-negative!");i>=r||(n?s.set(1,o,i):t.size>0?s.set(s.get(o,i)+t.get(o,a),o,i):s.set(s.get(o,i)+1,o,i))}return s}fe("Add",fr,ft((e,t,r,n)=>({real:e+r,imag:t+n})));/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fi=c6((e,t)=>e&t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(e){return(t,r,n)=>{let a=r9.getArrayFromDType(r,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],n);return a}}function fo(e,t,r){return({inputs:n,attrs:a,backend:i})=>{let s;let{x:o}=n;c3(o,e);let u=i.data.get(o.dataId).values;if("string"===o.dtype){if(!Array.isArray(u))throw Error("String tensor's value was not an instance of Array");s=sg.fromUint8ToStringArray(u)}else s=u;let l=r||o.dtype,d=t(s,l,a);return i.makeTensorInfo(o.shape,l,d)}}fe(eX,fi);let fu=fs(e=>Math.ceil(e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fl(e,t,r,n){let a=r9.getArrayFromDType(r,r9.sizeFromShape(t));if(n&&"string"!==r){let t=0;e.forEach(e=>{let r=r9.sizeFromShape(e.shape);a.set(e.vals,t),t+=r})}else{let n=0;e.forEach(e=>{let i="string"===r?sg.fromUint8ToStringArray(e.vals):e.vals,s=0;for(let r=0;r<e.shape[0];++r){let o=r*t[1]+n;for(let t=0;t<e.shape[1];++t)a[o+t]=i[s++]}n+=e.shape[1]})}return a}fo(eZ,fu);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fd=c6((e,t)=>e===t?1:0);fe(tf,fd,null,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fh=fs(e=>Math.exp(e));fo("Exp",fh,"float32");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fp=fs(e=>Math.expm1(e));fo(tg,fp);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fc=fs(e=>Math.floor(e));fo(tb,fc);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ff=c6((e,t)=>Math.floor(e/t));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fm(e,t,r,n,a,i,s,o,u){let l=iY([n,i],r);for(let r=0;r<n;r++){let n=[],d=0;for(let t=0;t<a;t++){let i=e[r*a+t];d+=i*s[t],n.push(i)}if(d<0||d>=u/i)throw Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)l.values[r*i+e]=t.get(...t.indexToLoc(d*i+e))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fg(e,t,r){let n=iY(r,e.dtype);for(let r=0;r<n.size;++r){let a=n.indexToLoc(r).slice(),i=a[0],s=a[2],o=t.locToIndex([i,s]);a[2]=t.values[o];let u=e.locToIndex(a);0<=u&&u<e.values.length&&(n.values[r]=e.values[u])}return n}fe(tv,ff,null,"int32");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fy=c6((e,t)=>e>t?1:0);fe(tC,fy,null,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fx=c6((e,t)=>e>=t?1:0);fe(tI,fx,null,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fb=c6((e,t)=>e<t?1:0);fe(tO,fb,null,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fv=c6((e,t)=>e<=t?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fw(e,t,r){let n=(t-e)/(r-1),a=r9.makeZerosTypedArray(r,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}fe(tF,fv,null,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fS=fs(e=>Math.log(e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(e,t,r,n){let a=r9.getTypedArrayFromDType(n,r9.sizeFromShape(r));for(let r=0;r<a.length;++r){let n=r*t,i=e[n];for(let r=0;r<t;++r){let t=e[n+r];(Number.isNaN(t)||t>i)&&(i=t)}a[r]=i}return a}fo("Log",fS);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fC=c6((e,t)=>Math.max(e,t));fe(tU,fC);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fI=c6((e,t)=>Math.min(e,t));fe(tq,fI);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fT=c6((e,t)=>e*t);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(e,t,r){return fT([],t,r9.createScalarValue(-1,r),e,r)}fe(tQ,fT,ft((e,t,r,n)=>({real:e*r-t*n,imag:e*n+t*r})));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fN=c6((e,t)=>e!==t?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(e,t,r,n,a){let i=t.length,s=r9.sizeFromShape(t),o=r9.computeStrides(t),u=r9.computeStrides(a),l=r9.getTypedArrayFromDType(r,r9.sizeFromShape(a));for(let t=0;t<s;++t){let r=r9.indexToLoc(t,i,o),a=Array(r.length);for(let e=0;e<a.length;e++)a[e]=r[n[e]];l[r9.locToIndex(a,i,u)]=e[t]}return l}function fR(e,t,r,n){let[a,i]=sg.computeOutAndReduceShapes(e,n),s=n6(t,"int32"),o=r9.makeZerosTypedArray(r9.sizeFromShape(a),s),u=r9.sizeFromShape(i);for(let e=0;e<o.length;++e){let t=e*u,n=1;for(let e=0;e<u;++e)n*=r[t+e];o[e]=n}return{outVals:o,outShape:a,outDtype:s}}function fA(e,t){let r=e.slice(0,t);for(;r.length<t;)r.push(1);for(let n=t;n<e.length;n++)r[t-1]*=e[n];return r}function f_(e,t,r,n,a,i,s,o){if(0===e.length)throw Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw Error("Split tensors must not be scalars");if(!/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){e.forEach((e,n)=>{if(e<0||e>=r){let a=r9.indexToLoc(n,t.length,r9.computeStrides(t)).join(",");throw Error(`indices[${a}] = ${e} is not in [0, ${r})`)}})}(i,s,t[0][0]-1),0===n.length)throw Error("params.rank must be nonzero");let{outSplits:u,valueSlices:l,numValues:d}=function(e,t,r,n){let a=[],i=0,s=Array(t.length-1+r.length).fill(null).map(()=>[0]);!function(e,t){for(let r=0;r<e.length;++r){let n=e[r],a=r===e.length-1?t:e[r+1].length;if(0===n.length)throw Error("Ragged splits may not be empty");if(n[0]<0)throw Error("Ragged splits must be non-negative");if(n[n.length-1]>a)throw Error("Ragged splits must not point past values");for(let e=1;e<n.length;++e)if(n[e-1]>n[e])throw Error("Ragged splits must be sorted in ascending order")}}(r,n);let o=1;for(let e=0;e<t.length-1;++e){o*=t[e];let r=t[e+1];for(let t=1;t<o+1;++t)s[e].push(t*r)}for(let n=0;n<e.length;++n){let o=e[n],u=e[n]+1;for(let e=0;e<r.length;++e){let n=r[e],a=e+t.length-1;if(a>=0){let e=s[a],t=e[e.length-1]-n[o];for(let e=o;e<u;++e)s[a].push(n[e+1]+t)}o=n[o],u=n[u]}u!==o&&(a.push([o,u]),i+=u-o)}return{outSplits:s,valueSlices:a,numValues:i}}(i,s,e,n[0]),h=function(e){let t=[];for(let r=0;r<e.length;++r){let n=e[r].length,a=r9.getArrayFromDType("int32",n);t.push(a),e[r].forEach((e,t)=>a[t]=e)}return t}(u),p=function(e,t,r,n,a){let i=t.slice();i[0]=a;let s=r9.getArrayFromDType(r,r9.sizeFromShape(i)),o=e.length,u=0===o?0:o/t[0];return!function(e,t,r,n,a,i){let s=fA(t,2)[1],o=fA(i,2)[1],u=0;for(let t of r)for(let r=t[0];r<t[1];++r){for(let t=0;t<n;++t)a[u*o+t]=e[r*s+t];++u}}(e,t,n,u,s,i),[s,i]}(r,n,a,l,d);return[h,p[0],p[1]]}function fO(e,t,r,n,a,i,s){if(t.length>1)throw Error("starts must be a scalar or vector");if(a.length>1)throw Error("limits must be a scalar or vector");if(s.length>1)throw Error("deltas must be a scalar or vector");let o=0===t.length,u=0===a.length,l=0===s.length,d=[];o||d.push(t[0]),u||d.push(a[0]),l||d.push(s[0]);for(let e=1;e<d.length;++e)if(d[e]!==d[e-1])throw Error("starts, limits, and deltas must have the same shape");let h=0===d.length?1:d[0],p=r9.getArrayFromDType("int32",h+1);p[0]=0;for(let t=0;t<h;++t){let r;let a=o?e[0]:e[t],s=u?n[0]:n[t],d=l?i[0]:i[t];if(0===d)throw Error("Requires delta != 0");if(d>0&&s<a||d<0&&s>a)r=0;else if((r=Math.ceil(Math.abs((s-a)/d)))>2147483647)throw Error("Requires ((limit - start) / delta) <= 2147483647");p[t+1]=p[t]+r}let c=p[h],f=r9.getArrayFromDType(r,c),m=0;for(let t=0;t<h;++t){let r=p[t+1]-p[t],n=o?e[0]:e[t],a=l?i[0]:i[t];for(let e=0;e<r;++e)f[m++]=n,n+=a}return[p,f]}fe(tZ,fN,null,"bool");/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var fF=sg.RowPartitionType;class fD{constructor(e,t,r,n,a,i,s,o,u,l){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=n,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=s,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=sg.getRowPartitionTypesHelper(l),this.raggedRank=sg.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===fF.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===fF.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case fF.VALUE_ROWIDS:return fD.getMaxWidthValueRowID(t);case fF.ROW_SPLITS:return fD.getMaxWidthRowSplit(t);default:throw Error(`Cannot handle partition type ${fF[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let r=0;for(let n=0;n<t-1;++n){let t=e[n+1]-e[n];t>r&&(r=t)}return r}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let r=0,n=e[0],a=0;for(let i=1;i<t;++i){let t=e[i];t!==n&&(n=t,a=Math.max(i-r,a),r=i)}return Math.max(t-r,a)}tensorShapeFromTensor(e,t,r=!0){if(0===t.length){if(-1===e[0])return[];throw Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return fM(e,r)}calculateOutputSize(e){let t=this.valuesShape,r=this.defaultValueShape;sg.validateDefaultValueShape(r,t);let n=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=sg.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);a[0]<0&&(a[0]=e);for(let e=1;e<=this.raggedRank;++e)a[e]<0&&(a[e]=this.getMaxWidth(e));return a}calculateFirstParentOutputIndex(e,t,r){let n=Math.min(e,r),a=[],i=0;for(let e=0;e<n;++e,i+=t)a.push(i);for(let t=n;t<e;++t)a.push(-1);return r9.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,r,n){let a=e.length,i=[];for(let s=0;s<a-1;++s){let a=e[s+1]-e[s],o=Math.min(n,a),u=t[s];-1===u&&(o=0);for(let e=0;e<o;++e)i.push(u),u+=r;for(let e=0;e<a-o;++e)i.push(-1)}if(a>0&&i.length!==e[a-1])throw Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,r,n){let a=e.length,i=[];if(0===a)return[];let s=0,o=e[0];if(o>=t.length)throw Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];i.push(u);for(let l=1;l<a;++l){let a=e[l];if(a===o)u>=0&&(++s<n?u+=r:u=-1);else{if(s=0,o=a,a>=t.length)throw Error(`Got nextValueRowId=${a} which is not less than ${t.length}`);u=t[a]}i.push(u)}if(i.length!==e.length)throw Error("Invalid row ids.");return i}calculateOutputIndex(e,t,r,n){let a=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case fF.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,r,n);case fF.ROW_SPLITS:if(a.length-1>t.length)throw Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,r,n);default:throw Error(`Unsupported partition type: ${fF[i]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case fF.FIRST_DIM_SIZE:return e[0];case fF.VALUE_ROWIDS:throw Error("Cannot handle VALUE_ROWIDS in first dimension.");case fF.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw Error(`Cannot handle type ${fF[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),r=Array(this.raggedRank+1);r[r.length-1]=1;for(let e=r.length-2;e>=0;--e)r[e]=r[e+1]*t[e+1];let n=fM(t,!1),a=r9.getArrayFromDType(this.valuesDType,r9.sizeFromShape(n));if(r[0]*t[0]>0){let i=this.calculateFirstParentOutputIndex(e,r[0],t[0]);for(let e=1;e<=this.raggedRank;++e)i=this.calculateOutputIndex(e-1,i,r[e],t[e]);this.setOutput(this.raggedRank,i,a,n)}return[n,a]}setOutput(e,t,r,n){if(0===r.length)return;let a=this.values,i=n.slice();i=i.slice(e+1);let s=r9.sizeFromShape(i),o=t.length,u=this.defaultValue;if(u.length!==s&&1!==u.length){let e=this.defaultValueShape;ak(()=>{u=ub(sQ(u,e),i).dataSync()})}let l=0,d=0,h=0;for(let e=0;e<=o;++e){let n=e<o?t[e]:-1;if(n===h){++h;continue}if(d<h){let e=a.subarray(l*s);fP(r.subarray(d*s),e,(h-d)*s)}if(e>=o&&(n=Math.floor(r.length/s)),n>h){if(1===this.defaultValue.length)r.subarray(h*s,n*s).fill(this.defaultValue[0]),h=n;else for(;n>h;)fP(r.slice(h*s),u,s),++h}n<0?(l=e+1,d=h):(l=e,h=(d=h)+1)}}}function fP(e,t,r){for(let n=0;n<r;n++)e[n]=t[n]}function fM(e,t){let r=[];for(let n of e){if(n<0){if(!t)throw Error(`Dimension ${n} must be >= 0`);if(n<-1)throw Error(`Dimension ${n} must be >= -1`);n=-1}r.push(n)}return r}function fL(e,t,r,n,a,i,s,o,u,l){return new fD(e,t,r,n,a,i,s,o,u,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(e,t,r,n){let a=e===t,i=e<t&&r<0,s=t<e&&r>1;if(a||i||s)return r9.makeZerosTypedArray(0,n);let o=Math.abs(Math.ceil((t-e)/r)),u=r9.makeZerosTypedArray(o,n);t<e&&1===r&&(r=-1),u[0]=e;for(let e=1;e<u.length;e++)u[e]=u[e-1]+r;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fz=fs(e=>1/Math.sqrt(e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(e,t,r,n,a,i,s,o,u,l){let d=e.values,h=t.values;if(0===n)return iY(r,t.dtype);let p=u instanceof nZ?u:iY([n/a,a],t.dtype);"string"==typeof u?p.values.fill(u):"number"==typeof u?p.values.fill(u):"boolean"==typeof u&&p.values.fill(+u);for(let e=0;e<i;e++){let i=[],u=0;for(let t=0;t<s;t++){let r=d[e*s+t];i.push(r),u+=r*o[t]}if(u<0||u>=n/a)throw Error(`Invalid indices: ${i} does not index into ${r}`);for(let r=0;r<a;r++)l?p.values[u*a+r]+=h[e*a+r]:p.values[u*a+r]=0===t.rank?h[0]:h[e*a+r]}return p}fo(rc,fz);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fV=fs(e=>1/(1+Math.exp(-e)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fW(e,t,r,n,a){let i=on.isSliceContinous(n,t,r),s=r9.sizeFromShape(r),o=r9.computeStrides(n);if(i){let r=on.computeFlatOffset(t,o);return"string"===a?e.slice(r,r+s):e.subarray(r,r+s)}let u="string"===a?sg.fromUint8ToStringArray(e):e,l=iY(n,a,u),d=iY(r,a);for(let e=0;e<d.size;++e){let r=d.indexToLoc(e),n=r.map((e,r)=>e+t[r]);d.set(l.get(...n),...r)}return"string"===a?sg.fromStringArrayToUint8(d.values):d.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(e,t,r,n,a,i,s){let o=t[0],u=i[0],l=Array(u),d=Array(o),h=t[1];if(0===u){if(0!==o)throw Error(sg.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[r9.getArrayFromDType(r,0),[0,h],r9.getArrayFromDType(a,0),l,d]}let p=!0,c=0,f=Array(u).fill(0);for(let t=0;t<o;++t){let r=e[t*h];if(r<0)throw Error(sg.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,r));if(r>=u)throw Error(sg.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,r,u));++f[r],p=p&&r>=c,c=r}let m=!0;for(let e=0;e<u;++e){let t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){for(let e=0;e<o;++e)d[e]=e;return[e,[o,h],n,l,d]}{let t=f[u-1],i=r9.getArrayFromDType(r,t*h),p=r9.getArrayFromDType(a,t),c=Array(u).fill(0);for(let t=0;t<o;++t){let r=e[t*h],a=c[r],s=(0===r?0:f[r-1])+a;c[r]++;for(let r=0;r<h;++r)i[s*h+r]=e[t*h+r];p[s]=n[t],d[t]=s}for(let e=0;e<u;++e)if(0===c[e]){let t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;p[t]=s}return[i,[t,h],p,l,d]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(e,t,r,n,a){let i=r9.sizeFromShape(n),s=t[0],o=a.length,u=[],l=1,d=-1;for(let e=0;e<o;++e){let t=a[e];if(-1===t){if(-1!==d)throw Error(sg.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,e));d=e,u.push(1)}else{if(t<0)throw Error(sg.getSparseReshapeNegativeOutputDimErrorMessage(e,t));l*=t,u.push(t)}}if(-1!==d){if(l<=0)throw Error(sg.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(i/l);if(l*e!==i)throw Error(sg.getSparseReshapeInputOutputMultipleErrorMessage(n,u));u[d]=e}if(r9.sizeFromShape(u)!==i)throw Error(sg.getSparseReshapeInputOutputMismatchErrorMessage(n,u));let h=n.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*n[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*u[e+1]}let f=r9.getArrayFromDType(r,s*o);for(let t=0;t<s;++t){let r=0;for(let n=0;n<h;++n)r+=e[t*h+n]*p[n];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(r/c[e]),r%=c[e]}return[f,[s,o],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(e,t,r,n,a,i=!1,s=0){let o=n.length,u=[t[0],e.length/t[0]],l=u[1],d=o>0?a[o-1]+1:0;if(d<0)throw Error(sg.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=d;let p=h.reduce((e,t)=>e*t,1),c=r9.getArrayFromDType(r,p);if(0===o)return d>0&&c.fill(s),[c,h];if(d<=0)throw Error(sg.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=a[0];for(;;){let t=0;if(m<o){if(y===(t=a[m])){++m;continue}if(y>=t)throw Error(sg.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=d)throw Error(sg.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,d));y>g&&c.fill(s,g*l,y*l);for(let t=f;t<m;++t){let r=n[t];if(r<0||r>=u[0])throw Error(sg.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,n[t],u[0]));for(let t=0;t<l;t++)c[y*l+t]+=e[r*l+t]}if(i)for(let e=0;e<l;e++)c[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<d&&c.fill(s,g*l,d*l),[c,h]}fo(rS,fs(e=>1/(1+Math.exp(-e))),void 0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fK=fs(e=>Math.sqrt(e));fo(rC,fs(e=>Math.sqrt(e)),void 0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fq=c6((e,t)=>{let r=e-t;return r*r});fe(rO,fq);/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fX=fs((e,t)=>{let{pattern:r,replaceGlobal:n,rewrite:a}=t;return e.replace(new RegExp(r,n?"g":""),a)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(e,t,r,n){let a=iY(e,t.dtype);for(let e=0;e<a.size;e++){let i=a.indexToLoc(e),s=Array(i.length);for(let e=0;e<s.length;e++)s[e]=i[e]*r[e]+n[e];a.set(t.get(...s),...i)}return a}fo(rD,fX);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fQ{constructor(e,t,r,n,a,i){this.separator=r9.encodeString(e),this.nGramWidths=t,this.leftPad=r9.encodeString(r),this.rightPad=r9.encodeString(n),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){return Math.max(0,e+2*this.getPadWidth(t)-t+1)}createNGrams(e,t,r,n,a,i){for(let s=0;s<a;++s){let o;let u=this.getPadWidth(i),l=Math.max(0,u-s),d=Math.max(0,u-(a-(s+1))),h=i-(l+d),p=t+(l>0?0:s-u);o=0+l*this.leftPad.length;for(let t=0;t<h;++t)o+=e[p+t].length;o+=d*this.rightPad.length+(l+d+h-1)*this.separator.length,r[n+s]=new Uint8Array(o);let c=r[n+s],f=0,m=e=>e.forEach(e=>c[f++]=e);for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<h-1;++t)m(e[p+t]),m(this.separator);if(h>0){m(e[p+h-1]);for(let e=0;e<d;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<d-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let r=e.length,n=t.length;if(n>0){let e=t[0];if(0!==e)throw Error(`First split value must be 0, got ${e}`);for(let a=1;a<n;++a){let n=t[a]>=e;if(!(n=n&&t[a]<=r))throw Error(`Invalid split value ${t[a]}, must be in [${e}, ${r}]`);e=t[a]}if(e!==r)throw Error(`Last split value must be data size. Expected ${r}, got ${e}`)}let a=n-1,i=r9.getArrayFromDType("int32",n);if(0===r||0===n){let e=Array(r);for(let e=0;e<=a;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=a;++e){let r=t[e]-t[e-1],n=0;this.nGramWidths.forEach(e=>{n+=this.getNumNGrams(r,e)}),this.preserveShort&&r>0&&0===n&&(n=1),i[e]=i[e-1]+n}let s=Array(i[a]);for(let r=0;r<a;++r){let n=t[r],a=i[r];if(this.nGramWidths.forEach(i=>{let o=t[r+1]-t[r],u=this.getNumNGrams(o,i);this.createNGrams(e,n,s,a,u,i),a+=u}),this.preserveShort&&a===i[r]){let i=t[r+1]-t[r];if(0===i)continue;let o=i+2*this.padWidth;this.createNGrams(e,n,s,a,1,o)}}return[s,i]}}function fZ(e,t,r,n,a,i,s,o){return new fQ(r,n,a,i,s,o).compute(e,t)}function fJ(e,t,r){let n=e.length,a=[],i=0,s=0,o=Array(n);for(let u=0;u<n;++u){let n=a.length;!/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)n.push(e.subarray(t,t+1));return}if(1===t.length){let a=t[0],i=e.indexOf(a);for(;-1!==i;){let t=e.subarray(0,i);r&&0===t.length||n.push(t),i=(e=e.subarray(i+1)).indexOf(a)}r&&0===e.length||n.push(e);return}let a=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){let t=e.subarray(a,i);r&&0===t.length||n.push(t),a=i+1}}(e[u],t,r,a);let l=a.length-n;o[u]=l,i+=l,s=Math.max(s,l)}let u=r9.getArrayFromDType("int32",2*i),l=Array(i),d=[n,s],h=0;for(let e=0;e<n;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,d]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f0(e,t){let r=r9.getArrayFromDType("int32",e.length);for(let n=0;n<e.length;++n)r[n]=r9.fingerPrint64(e[n]).modulo(t).getLowBitsUnsigned();return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let f1=c6((e,t)=>e-t);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f2(e,t){let r=Array(e.rank);for(let n=0;n<r.length;n++)r[n]=e.shape[n]*t[n];let n=iY(r,e.dtype);for(let t=0;t<n.values.length;++t){let r=n.indexToLoc(t),a=Array(e.rank);for(let t=0;t<a.length;t++)a[t]=r[t]%e.shape[t];let i=e.locToIndex(a);n.values[t]=e.values[i]}return n}fe("Sub",f1,ft((e,t,r,n)=>({real:e-r,imag:t-n})));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let f3=(e,t)=>{let r=t.value-e.value;return 0===r?e.index-t.index:r};function f4(e,t,r,n,a){let i=t[t.length-1],[s,o]=[e.length/i,i],u=r9.getTypedArrayFromDType(r,s*n),l=r9.getTypedArrayFromDType("int32",s*n);for(let t=0;t<s;t++){let r=t*o,i=e.subarray(r,r+o),s=Array(i.length);i.forEach((e,t)=>s[t]={value:e,index:t}),n<s.length&&(function e(t,r,n=0,a=t.length-1){for(;a>n;){if(a-n>600){let i=a-n+1,s=r-n+1,o=Math.log(i),u=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*u*(i-u)/i)*Math.sign(s-i/2),d=Math.max(n,Math.floor(r-s*u/i+l)),h=Math.min(a,Math.floor(r+(i-s)*u/i+l));e(t,r,d,h)}let i=t[r],s=n,o=a;for(r9.swap(t,n,r),f3(t[a],i)>0&&r9.swap(t,n,a);s<o;){for(r9.swap(t,s,o),s++,o--;0>f3(t[s],i);)s+=1;for(;f3(t[o],i)>0;)o-=1}0===f3(t[n],i)?r9.swap(t,n,o):(o+=1,r9.swap(t,o,a)),o<=r&&(n=o+1),r<=o&&(a=o-1)}}(s,n),s=s.slice(0,n)),a&&s.sort(f3);let d=t*n,h=u.subarray(d,d+n),p=l.subarray(d,d+n);for(let e=0;e<n;e++)h[e]=s[e].value,p[e]=s[e].index}let d=t.slice();return d[d.length-1]=n,[iY(d,r,u),iY(d,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f6(e,t,r,n){let a=r9.parseAxisParam(t,r)[0],i=[1,r[0],1];for(let e=0;e<a;e++)i[0]*=r[e];i[1]=r[a];for(let e=a+1;e<r.length;e++)i[2]*=r[e];let s=new Map,o=new Int32Array(r[a]),u=new nZ(i,n,e),l=[],d=1===i[0]&&1===i[2];for(let t=0;t<r[a];t++){let r;if(d)r=e[t].toString();else{let e=[];for(let r=0;r<i[0];r++)for(let n=0;n<i[2];n++)e.push(u.get(r,t,n));r=e.join(",")}let n=s.get(r);if(null!=n)o[t]=n;else{let e=s.size;s.set(r,e),o[t]=e,l.push(t)}}let h=i.slice();h[1]=s.size;let p=new nZ(h,n);l.forEach((e,t)=>{for(let r=0;r<i[0];r++)for(let n=0;n<i[2];n++)p.set(u.get(r,e,n),r,t,n)});let c=r.slice();return c[a]=h[1],{outputValues:p.values,outputShape:c,indices:o}}let{addImpl:f5,bincountImpl:f8,bincountReduceImpl:f7,bitwiseAndImpl:f9,castImpl:me,ceilImpl:mt,concatImpl:mr,equalImpl:mn,expImpl:ma,expm1Impl:mi,floorImpl:ms,gatherNdImpl:mo,gatherV2Impl:mu,greaterImpl:ml,greaterEqualImpl:md,lessImpl:mh,lessEqualImpl:mp,linSpaceImpl:mc,logImpl:mf,maxImpl:mm,maximumImpl:mg,minimumImpl:my,multiplyImpl:mx,negImpl:mb,notEqualImpl:mv,prodImpl:mw,raggedGatherImpl:mS,raggedRangeImpl:mk,raggedTensorToTensorImpl:mC,rangeImpl:mI,rsqrtImpl:mT,scatterImpl:m$,sigmoidImpl:mN,simpleAbsImpl:mE,sliceImpl:mR,sparseFillEmptyRowsImpl:mA,sparseReshapeImpl:m_,sparseSegmentReductionImpl:mO,sqrtImpl:mF,staticRegexReplaceImpl:mD,stridedSliceImpl:mP,stringNGramsImpl:mM,stringSplitImpl:mL,stringToHashBucketFastImpl:mB,subImpl:mz,tileImpl:mU,topKImpl:mV,transposeImpl:mW,uniqueImpl:mG}=c2;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mH(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function mj(e,t){return 1===t?[e]:mH(e,t)}class mK{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=cU(this.outputShape.length),0===this.rank)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=mj("rc",this.rank),t=cD(this.rank),r=this.getOutOfBoundsCondition(e),n=this.getSetup(e),a=this.getOutput(e);this.userCode=`
        void main() {
          ${t} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${n}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let r=0;r<=1;r++)for(let n=0;n<=1;n++){let a=`${0===r?"r":"rp1"}, ${0===n?"c":"cp1"}`;for(let t=2;t<this.rank;t++)a=`${e[e.length-1-t]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],n=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${n};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);if(1===this.rank){let e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mq{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length);let r="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),r+=`
        ${t}
        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${e}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${e>0?"}":""}
      `}this.userCode=`
      ${function(e,t){let r=t?function(e,t,r="index"){let n=function(e,t){let r=e.length,n=e.map(e=>`${t}[${e}]`),a=Array(r-1);a[r-2]=n[r-1];for(let e=r-3;e>=0;--e)a[e]=`(${a[e+1]} * ${n[e+1]})`;return a}(e.map((e,t)=>t),t);return n.map((t,a)=>{let i=`int ${e[a]} = ${r} / ${n[a]}`,s=a===n.length-1?`int ${e[a+1]} = ${r} - ${e[a]} * ${n[a]}`:`index -= ${e[a]} * ${n[a]}`;return`${i}; ${s};`}).join("")}(["r","c","d"],"inputShape"):cS(["r","c","d"],e);return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${r}
      return ivec3(r, c, d);
    }
  `}(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?cI():cC(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mX{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){let n;let a=mQ(t,r),i=mZ(e,a,r);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);let s=mY(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let e=this.freeTextures[i].pop();return this.usedTextures[i].push(e),e}return a===T3.PACKED_2X2_FLOAT32?n=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===T3.PACKED_2X2_FLOAT16?n=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===T3.UNPACKED_FLOAT32?n=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===T3.UNPACKED_FLOAT16?n=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===T3.PACKED_4X1_UNSIGNED_BYTE&&(n=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(n),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),n}releaseTexture(e,t,r,n){if(null==this.freeTextures)return;let a=mQ(r,n),i=mZ(t,a,n);i in this.freeTextures||(this.freeTextures[i]=[]);let s=mY(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,n),o=ey.getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=s):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=s),this.numUsedTextures--;let u=this.usedTextures[i],l=u&&u.indexOf(e);if(null==l||l<0)throw Error("Cannot release a texture that was never provided by this texture manager");u[l]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function mY(e,t,r,n,a){let i;let s=function(e,t){switch(e){case T3.PACKED_2X2_FLOAT32:return cJ(t);case T3.PACKED_2X2_FLOAT16:return c0(t);case T3.UNPACKED_FLOAT32:return cY(t);case T3.UNPACKED_FLOAT16:return cQ(t);case T3.PACKED_4X1_UNSIGNED_BYTE:return cZ(t);default:throw Error(`Unknown physical texture type ${e}`)}}(t,n);if(a){let[t,r]=ce(e[0],e[1]);i=t*r}else{var o;let[t,r]=(o=e[0],[e[1],o]);i=t*r}return i*function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F||t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw Error(`Unknown internal format ${t}`)}(r,s)}function mQ(e,t){if(e===T2.UPLOAD)return T3.PACKED_2X2_FLOAT32;if(e===T2.RENDER||null==e)return ey.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?T3.PACKED_2X2_FLOAT32:T3.UNPACKED_FLOAT32:t?T3.PACKED_2X2_FLOAT16:T3.UNPACKED_FLOAT16;if(e===T2.DOWNLOAD||e===T2.PIXELS)return T3.PACKED_4X1_UNSIGNED_BYTE;throw Error(`Unknown logical texture type ${e}`)}function mZ(e,t,r){return`${e[0]}_${e[1]}_${t}_${r}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mJ{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}let m0="if (isnan(x)) return x;",m1="return abs(x);",m2=m0+`
  return (x < 0.0) ? 0.0 : x;
`,m3=m0+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,m4="return x;",m6=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,m5=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,m8=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;class m7{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class m9{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length);let t=e.length,r=mj("rc",t),n=cD(t),a=function(e,t){if(1===e)return"rc";let r="";for(let n=0;n<e;n++)r+=t[n],n<e-1&&(r+=",");return r}(t,r),i=r.slice(-2),s=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${n} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${s}));
      }
    `}}let ge=p4.whereImpl,gt={},gr=ey.getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class gn extends x{nextDataId(){return gn.nextDataId++}constructor(e){let t;if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ey.getBool("HAS_WEBGL"))throw Error("WebGL is not supported on this device");if(null!=e)t=e instanceof c1?e:new c1(p7(ey.getNumber("WEBGL_VERSION"),e)),this.binaryCache={},this.gpgpuCreatedLocally=!1;else{var r;t=new c1(p7(ey.getNumber("WEBGL_VERSION"))),this.binaryCache=((r=ey.getNumber("WEBGL_VERSION"))in gt||(gt[r]={}),gt[r]),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new mX(this.gpgpu),this.numMBBeforeWarning=null==ey.global.screen?1024:ey.global.screen.height*ey.global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new y(this,ai)}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,n,a,i){let s=this.makeTensorInfo(t,r),o=this.texData.get(s.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[n,a]},o.texShape=[n,a];let u=new cK(cf(t),!1,i),l=this.runWebGLProgram(u,[s],r,[[n,a]]);return l.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(s),l.dataId}write(e,t,r){if((ey.getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ey.getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===r&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.texData.set(n,{shape:t,dtype:r,values:e,usage:T2.UPLOAD,refCount:1}),n}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,r,n,a){if(ey.getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===n)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:n,values:t,usage:T2.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t,r;let{values:n,dtype:a,complexTensorInfos:i,slice:s,shape:o,isPacked:u}=this.texData.get(e);if(null!=s){let t;t=u?new m7(o,m4):new mJ(o,m4);let r=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),n=this.readSync(r.dataId);return this.disposeIntermediateTensorInfo(r),n}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;let l=null!=this.activeTimers;if(l&&(t=r9.now()),"complex64"===a){let e=this.readSync(i.real.dataId),t=this.readSync(i.imag.dataId);r=sg.mergeRealAndImagArrays(e,t)}else r=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=r9.now()-t),this.convertAndCacheOnCPU(e,r)}async read(e){let t,r;if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}let{values:n,shape:a,slice:i,dtype:s,complexTensorInfos:o,isPacked:u}=this.texData.get(e);if(null!=i){let t;t=u?new m7(a,m4):new mJ(a,m4);let r=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),n=this.read(r.dataId);return this.disposeIntermediateTensorInfo(r),n}if(null!=n)return this.convertAndCacheOnCPU(e);if(ey.getBool("DEBUG")&&!ey.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ey.getNumber("WEBGL_VERSION"))throw Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null;if("complex64"!==s&&ey.get("WEBGL_BUFFER_SUPPORTED")){t=this.decode(e);let r=this.texData.get(t.dataId);l=this.gpgpu.createBufferFromTexture(r.texture.texture,...p9(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];r=sg.mergeRealAndImagArrays(t,n)}else if(null==l)r=this.getValuesFromTexture(e);else{let e=r9.sizeFromShape(a);r=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}if(null!=t&&this.disposeIntermediateTensorInfo(t),null!=l){let e=this.gpgpu.gl;cr(e,()=>e.deleteBuffer(l))}let d=this.convertAndCacheOnCPU(e,r),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ai.removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let{values:r,shape:n,slice:a,dtype:i,isPacked:s,texture:o}=this.texData.get(e);if("complex64"===i)throw Error("Does not support reading texture for complex64 dtype.");if(null!=a){let r;r=s?new m7(n,m4):new mJ(n,m4);let a=this.runWebGLProgram(r,[{dataId:e,shape:n,dtype:i}],i),o=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),o}if(null==o){if(null!=r)throw Error("Data is not on GPU but on CPU.");throw Error("There is no data on GPU or CPU.")}let u=this.decode(e,t.customTexShape);return Object.assign({tensorRef:ai.makeTensorFromTensorInfo(u)},this.texData.get(u.dataId).texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let r=t.map(e=>r9.decodeString(e));return iY(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return iY(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let r=e[t];if(!(ey.getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===r||596e-10<Math.abs(r)&&65504>Math.abs(r))){if(ey.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${r} cannot be represented on this device.`)}}}getValuesFromTexture(e){let{shape:t,dtype:r,isPacked:n}=this.texData.get(e),a=r9.sizeFromShape(t);if(ey.getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let r=this.decode(e),n=this.texData.get(r.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(n.texture.texture,...p9(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(r),i}let i=ey.getBool("WEBGL_PACK")&&!0===n,s=i?cf(t):t,o=i?new cH(s):new cG(s),u=this.runWebGLProgram(o,[{shape:s,dtype:r,dataId:e}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,r=[],n=!1;null==this.programTimersStack?(this.programTimersStack=r,n=!0):this.activeTimers.push(r),this.activeTimers=r,e();let a=r9.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r9.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,n&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(a);s.kernelMs=r9.sum(e),s.getExtraProfileInfo=()=>e.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else s.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,s})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r9.now(),endMs:null}}endTimer(e){return ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.endQuery():e.endMs=r9.now(),e}async getQueryTime(e){return ey.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:r}=this.texData.get(e);return null!=r&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:r,texShape:n,usage:a,isPacked:i,slice:s}=this.texData.get(e),o=s&&s.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(n,r),this.textureManager.releaseTexture(t,n,a,i)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=gr){return ey.getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&r9.sizeFromShape(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){sg.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return ge(e.shape,t)}packedUnaryOp(e,t,r){let n=new m7(e.shape,t),a=this.compileAndRun(n,[e],r);return ai.makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=mE(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ey.getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,m1,e.dtype);let t=new mJ(e.shape,m1),r=this.compileAndRun(t,[e]);return ai.makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let n;if("string"===t&&null!=r&&r.length>0&&r9.isString(r[0])){let a=r.map(e=>r9.encodeString(e));n=this.write(a,e,t)}else n=this.write(r,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}}makeOutput(e,t,r){return ai.makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){let t=new m9(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new mK(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let r=[cp(e.shape),...cc(e.shape)],n={dtype:e.dtype,shape:r,dataId:e.dataId},a=new mq([cp(t),...cc(t)],r),i=this.runWebGLProgram(a,[n],e.dtype,[r],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){let r;let{isPacked:n,shape:a,dtype:i}=this.texData.get(e);if(null!=t){let e=r9.sizeFromShape(a),r=t[0]*t[1]*4;r9.assert(e<=r,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let s=cf(a);r=n?new cW(s):new cV(s);let o=[null!=t?t:p9(s)],u=this.runWebGLProgram(r,[{shape:s,dtype:i,dataId:e}],i,o,!0,t);return{dtype:i,shape:a,dataId:u.dataId}}runWebGLProgram(e,t,r,n,a=!1,i){let s;let o=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(o.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===T1.DENSE){let t=null!=i?i:p9(e.outputShape);u.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(u.usage=e.outTexUsage),0===r9.sizeFromShape(o.shape))return u.values=r9.getTypedArrayFromDType(o.dtype,0),o;let l=[],d=t.map(t=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let r=this.texData.get(t.dataId);if(null==r.texture){if(!e.packedInputs&&r9.sizeFromShape(t.shape)<=ey.getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:r.values};e.packedInputs&&(r.isPacked=!0,r.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!r.isPacked!=!!e.packedInputs)t=r.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),r=this.texData.get(t.dataId);else if(r.isPacked&&!cm(r.shape,t.shape)){let e=t,n=t.shape;t.shape=r.shape,t=this.packedReshape(t,n),l.push(t),r=this.texData.get(t.dataId),e.shape=n}return{shape:t.shape,texData:r,isUniform:!1}});this.uploadToGPU(o.dataId);let h={shape:o.shape,texData:u,isUniform:!1},p=function(e,t,r){let n="";t.concat(r).forEach(t=>{let a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let i=t.texData.texShape,{useSqueezeShape:s,uniformShape:o,keptDims:u}=cP(e.packedInputs,t.shape,i),l="",d="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=r9.computeStrides(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else d=`${o[0]>1}_${o[1]>1}`;let p=t.shape.length,c=2===o.length&&r9.arraysEqual(t.shape,i),f=1===r9.sizeFromShape(t.shape),m=sg.getBroadcastDims(t.shape,r.shape),g=!e.packedInputs&&p===r.shape.length&&r9.arraysEqual(i,r.texData.texShape),y=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;n+=`${p}_${g}_${s?u:""}_${o.length}_${f}_${m}_${c}_${l}_${d}_${h}_${y}_${a}`}else{let e=t.isUniform?"uniform":t.texData.texShape;n+=`${t.shape}_${e}_${a}`}});let a=e.userCode;return e.constructor.name+("_"+n+"_"+a)+`${ey.getNumber("WEBGL_VERSION")}`}(e,d,h),c=this.getAndSaveBinary(p,()=>(function(e,t,r,n){let a=r.map((e,r)=>{let n={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(n.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[r],shapeInfo:n}}),i=a.map(e=>e.shapeInfo),s={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},o=function(e,t,r){let n,a;let i=[];if(e.forEach(e=>{let t=r9.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?i.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(i.push(`uniform sampler2D ${e.name};`),i.push(`uniform int offset${e.name};`)),r.enableShapeUniforms){let{uniformShape:t}=cP(r.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:i.push(`uniform int ${e.name}Shape;`);break;case 2:i.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:i.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:i.push(`uniform ivec4 ${e.name}Shape;`)}i.push(`uniform ivec2 ${e.name}TexShape;`)}}),r.enableShapeUniforms){switch(t.logicalShape.length){case 1:i.push("uniform int outShape;");break;case 2:i.push("uniform ivec2 outShape;"),i.push("uniform int outShapeStrides;");break;case 3:i.push("uniform ivec3 outShape;"),i.push("uniform ivec2 outShapeStrides;");break;case 4:i.push("uniform ivec4 outShape;"),i.push("uniform ivec3 outShapeStrides;")}i.push("uniform ivec2 outTexShape;")}r.customUniforms&&r.customUniforms.forEach(e=>{i.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});let s=i.join("\n"),o=e.map(e=>(function(e,t,r=!1,n){let a="";r?a+=function e(t,r){switch(t.shapeInfo.logicalShape.length){case 0:return function(e){let t=e.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),n=cw();return`
    vec4 ${r}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}(t);case 1:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=cw();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${r}, uv);
    }
  `;let s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${s[0]}, ${s[1]}, index);
      return ${i.texture2D}(${r}, uv);
    }
  `}(t,r);case 2:return function(e,t){let r=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.texShape,s=i[0],o=i[1],u=cw();if(null!=i&&r9.arraysEqual(r,i))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${u.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${s}.0);

        return ${u.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `;let l=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(r[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${n}, uv);
    }
  `}(t,r);case 3:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let a=cM(t,n.slice(1));return`
        ${e(a,r)}
        vec4 ${i}(int b, int row, int col) {
          return ${i}(${cL(["b","row","col"],[1,2])});
        }
      `}let u=cw();if(r)return`
    vec4 ${i}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${u.texture2D}(${a}, uv);
    }
  `;let l=o[0],d=o[1],h=Math.ceil(n[2]/2),p=h*Math.ceil(n[1]/2);return`
    vec4 ${i}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${d}, ${p}, ${h}, b, row, col);
      return ${u.texture2D}(${a}, uv);
    }
  `}(t,r);default:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1),a=cw();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${r}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${r}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${r}, uv);
    }
  `;let i=e.shapeInfo.logicalShape,s=i.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],d=u[1],h=Math.ceil(i[s-1]/2),p=h*Math.ceil(i[s-2]/2),c="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<s-1;e++)c=`int b${e}, `+c,p*=i[s-e-1],f=`b${e} * ${p} + `+f;return`
    vec4 ${n}(${c}) {
      int index = ${f};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${l});
      return ${a.texture2D}(${r}, uv);
    }
  `}(t,r)}}(e,n):a+=function e(t,r=!1){let n=t.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${r};}`;let[a,i]=e.shapeInfo.texShape;if(1===a&&1===i)return`
      float ${n}() {
        return sampleTexture(${r}, halfCR);
      }
    `;let s=cO(r);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], ${s});
      return sampleTexture(${r}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${s});
      return sampleTexture(${r}, uv);
    }
  `}(t,r);case 1:return function(e,t){let r=e.name,n="get"+r.charAt(0).toUpperCase()+r.slice(1);if(e.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${cF(e)}
      }
    `;let a=e.shapeInfo.texShape,i=a[0],s=a[1];if(1===s&&1===i)return`
      float ${n}(int index) {
        return sampleTexture(${r}, halfCR);
      }
    `;let o=cO(r);return 1===s?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);
        return sampleTexture(${r}, uv);
      }
    `:1===i?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${s}.0, 0.5);
        return sampleTexture(${r}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${o});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${i}, ${s}, index + ${o});
      return sampleTexture(${r}, uv);
    }
  `}(t,r);case 2:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),s=t.shapeInfo.texShape;if(null!=s&&r9.arraysEqual(n,s)){if(r)return`
      float ${i}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `;let e=s[0],t=s[1];return`
    float ${i}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${t}.0, ${e}.0);
      return sampleTexture(${a}, uv);
    }
  `}let{newShape:o,keptDims:u}=r9.squeezeShape(n);if(o.length<n.length){let n=cM(t,o);return`
      ${e(n,r)}
      float ${i}(int row, int col) {
        return ${i}(${cL(["row","col"],u)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${cF(t)}
      }
    `;let l=s[0],d=s[1],h=cO(a);return 1===d?r?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${a}, uv);
    }
  `:1===l?r?`
      float ${i}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${i}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${a}, uv);
    }
  `:r?`
      float ${i}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
        return sampleTexture(${a}, uv);
      }
    `:`
  float ${i}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${d}, index);
    return sampleTexture(${a}, uv);
  }
`}(t,r);case 3:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=r9.squeezeShape(n);if(u.length<n.length){let n=cM(t,u);return`
        ${e(n,r)}
        float ${i}(int row, int col, int depth) {
          return ${i}(${cL(["row","col","depth"],l)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${o}, 1)));
        ${cF(t)}
      }
    `;let d=t.shapeInfo.texShape,h=d[0],p=d[1],c=t.shapeInfo.flatOffset;if(p===s&&null==c)return r?`
      float ${i}(int row, int col, int depth) {
        int stride1 = ${a}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
        float ${i}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${h}.0);
          return sampleTexture(${a}, uv);
        }
      `;if(p===o&&null==c)return r?`
      float ${i}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
    float ${i}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${a}, uv);
    }
  `;let f=cO(a);return r?`
    float ${i}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${a}Shape[1] * ${a}Shape[2];
      int stride1 = ${a}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);
      return sampleTexture(${a}, uv);
    }
    `:`
      float ${i}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${o} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${p}, index);
        return sampleTexture(${a}, uv);
      }
  `}(t,r);case 4:return function(t,r){let n=t.shapeInfo.logicalShape,a=t.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,u=n[1]*o,{newShape:l,keptDims:d}=r9.squeezeShape(n);if(l.length<n.length){let n=cM(t,l);return`
      ${e(n,r)}
      float ${i}(int row, int col, int depth, int depth2) {
        return ${i}(${cL(["row","col","depth","depth2"],d)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${i}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${u}, ${o}, ${s}, 1)));
        ${cF(t)}
      }
    `;let h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,c=p[0],f=p[1],m=`int stride2 = ${a}Shape[3];`,g=`int stride1 = ${a}Shape[2] * stride2;`,y=`int stride0 = ${a}Shape[1] * stride1;`;if(f===u&&null==h)return r?`
      float ${i}(int row, int col, int depth, int depth2) {
        ${m}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;if(f===s&&null==h)return r?`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${a}TexShape[1], ${a}TexShape[0]);
        return sampleTexture(${a}, uv);
      }
    `:`
      float ${i}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${a}, uv);
      }
    `;let x=cO(a);return r?`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${x});
      return sampleTexture(${a}, uv);
    }
  `:`
    float ${i}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${o} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${c}, ${f}, index + ${x});
      return sampleTexture(${a}, uv);
    }
  `}(t,r);case 5:return function(t){let r=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=r[4],s=r[3]*i,o=r[2]*s,u=r[1]*o,{newShape:l,keptDims:d}=r9.squeezeShape(r);if(l.length<r.length){let r=cM(t,l);return`
      ${e(r)}
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        return ${a}(${cL(["row","col","depth","depth2","depth3"],d)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${o}, ${s}, ${i})) +
          depth3;
        ${cF(t)}
      }
    `;let h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,c=p[0],f=p[1];if(f===u&&null==h)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${s}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&null==h)return`
      float ${a}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${r[1]*r[2]*r[3]},
               ${r[2]*r[3]}, ${r[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=cO(n);return`
    float ${a}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${o} + depth * ${s} +
          depth2 * ${i} + depth3 + ${m};
      vec2 uv = uvFromFlat(${c}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}(t);case 6:return function(t){let r=t.shapeInfo.logicalShape,n=t.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:i,keptDims:s}=r9.squeezeShape(r);if(i.length<r.length){let r=cM(t,i);return`
      ${e(r)}
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${a}(${cL(["row","col","depth","depth2","depth3","depth4"],s)});
      }
    `}let o=r[5],u=r[4]*o,l=r[3]*u,d=r[2]*l,h=r[1]*d;if(t.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${d}, ${l}, ${u})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${cF(t)}
      }
    `;let p=t.shapeInfo.flatOffset,c=t.shapeInfo.texShape,f=c[0],m=c[1];if(m===h&&null==p)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${d}, ${l}, ${u}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===o&&null==p)return`
      float ${a}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${r[1]*r[2]*r[3]*r[4]},
               ${r[2]*r[3]*r[4]},
               ${r[3]*r[4]},
               ${r[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${n}, uv);
      }
    `;let g=cO(n);return`
    float ${a}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${d} + depth * ${l} +
          depth2 * ${u} + depth3 * ${o} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}(t);default:throw Error(`${n.length}-D input sampling is not yet supported`)}}(e,n);let i=e.shapeInfo.logicalShape,s=t.logicalShape;return i.length<=s.length&&(r?a+=function(e,t){let r;let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),i=e.shapeInfo.logicalShape.length,s=t.logicalShape.length,o=c$(e.shapeInfo.logicalShape,t.logicalShape),u=cD(s),l=s-i,d=["x","y","z","w","u","v"];r=0===i?"":s<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${d[e+l]} = 0;`).join("\n");let h="";h=s<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+l]}`).join(", ");let p="return outputValue;",c=1===r9.sizeFromShape(e.shapeInfo.logicalShape),f=1===r9.sizeFromShape(t.logicalShape);if(1!==i||c||f){if(c&&!f)p=1===s?`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:`
        return vec4(outputValue.x);
      `;else if(o.length){let e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;return`
    vec4 ${"get"+a+"AtOutCoords"}() {
      ${u} coords = getOutputCoords();
      ${r}
      vec4 outputValue = get${a}(${h});
      ${p}
    }
  `}(e,t):a+=function(e,t){let r;let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),i="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&r9.arraysEqual(o,s))return`
      float ${i}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let d=cD(l),h=c$(e.shapeInfo.logicalShape,t.logicalShape),p=l-u,c=["x","y","z","w","u","v"];r=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map(e=>`coords.${c[e+p]} = 0;`).join("\n");let f="";return f=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${c[t+p]}`).join(", "),`
    float ${i}() {
      ${d} coords = getOutputCoords();
      ${r}
      return get${a}(${f});
    }
  `}(e,t)),a})(e,t,r.packedInputs,r.enableShapeUniforms)).join("\n"),u=t.texShape,l=cw(),d=`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${l.texture2D}(textureSampler, uv).r;
    }
  `,h=`${l.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${l.varyingFs} vec2 resultUV;
    ${l.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${l.defineSpecialNaN}
    ${l.defineSpecialInf}
    ${l.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${cN}
    ${cE}
    ${cR}
  `;return t.isPacked?(n=function(e,t,r){switch(e.length){case 0:return c_();case 1:return function(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:1===n[1]?r?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}(0,t,r);case 2:return function(e,t,r){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r9.arraysEqual(e,t))return r?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return r?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}(e,t,r);case 3:return function(e,t,r){if(r)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),i=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}(e,t,r);default:return function(e,t,r){if(r)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),i=a*Math.ceil(e[e.length-2]/2),s=i,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],o=`
      int b${t} = index / ${s};
      index -= b${t} * ${s};
    `+o,u=`b${t}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${o}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${u});
    }
  `}(e,t,r)}}(t.logicalShape,u,r.enableShapeUniforms),a=`
    void setOutput(vec4 val) {
      ${l.output} = val;
    }
  `):(n=function(e,t,r){switch(e.length){case 0:return c_();case 1:return 1===t[0]?r?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:1===t[1]?r?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:r?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `;case 2:return r9.arraysEqual(e,t)?r?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:1===e[1]?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:1===e[0]?r?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:r?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `;case 3:return function(e,t,r){if(r){let t=ck(["r","c","d"],e);return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${t}
    return ivec3(r, c, d);
  }
`}let n=cS(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}(e,t,r);case 4:return function(e,t,r){if(r){let t=ck(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${t}
      return ivec4(r, c, d, d2);
    }
  `}let n=cS(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}(e,t,r);case 5:return function(e,t){let r=cS(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}(e,t);case 6:return function(e,t){let r=cS(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${r}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}(e,t);default:throw Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,u,r.enableShapeUniforms),a=`
    void setOutput(float val) {
      ${l.output} = vec4(val, 0, 0, 0);
    }
  `),r.packedInputs&&(h+=cA),[h,d,a,s,n,o,r.userCode].join("\n")}(a,s,t),u=function(e,t){let r=ch(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(cr(e,()=>e.shaderSource(r,t)),cr(e,()=>e.compileShader(r)),ey.get("ENGINE_COMPILE_ONLY"))return r;if(!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw ci(t,e.getShaderInfoLog(r)),Error("Failed to compile fragment shader.");return r}(e.gl,o),l=e.createProgram(u);return ey.get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:i,outShapeInfo:s},cB(e,t,l)))})(this.gpgpu,e,d,h)),f=null!=this.activeTimers;f&&(s=this.startTimer()),ey.get("ENGINE_COMPILE_ONLY")||function(e,t,r,n,a){t.program.enableShapeUniforms||(cz(t.inShapeInfos,r),cz([t.outShapeInfo],[n]));let i=n.texData.texture,s=n.texData.texShape;n.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,s[0],s[1]):e.setOutputMatrixTexture(i.texture,s[0],s[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ey.getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let n=0;n<r.length;++n){let a=r[n],{uniform:i,offset:s,shape:o,texShape:u}=t.variablesLocations[n];if(o){let{uniformShape:r}=cP(t.program.packedInputs,a.shape,a.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,a.texData.texShape[0],a.texData.texShape[1]),null!=i){if(a.isUniform){if(2>r9.sizeFromShape(a.shape))e.gl.uniform1f(i,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}continue}null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,i,n)}}let o=t.outShapeLocation;if(o)switch(n.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(n.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(n.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(n.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(n.shape))}if(t.outShapeStridesLocation){let r=r9.computeStrides(n.shape);switch(n.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(r));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(r));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(r))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&a)for(let r=0;r<t.program.customUniforms.length;++r){let n=t.program.customUniforms[r],i=t.customUniformLocations[r],s=a[r];if("float"===n.type)e.gl.uniform1fv(i,s);else if("vec2"===n.type)e.gl.uniform2fv(i,s);else if("vec3"===n.type)e.gl.uniform3fv(i,s);else if("vec4"===n.type)e.gl.uniform4fv(i,s);else if("int"===n.type)e.gl.uniform1iv(i,s);else if("ivec2"===n.type)e.gl.uniform2iv(i,s);else if("ivec3"===n.type)e.gl.uniform3iv(i,s);else if("ivec4"===n.type)e.gl.uniform4iv(i,s);else throw Error(`uniform type ${n.type} is not supported yet.`)}e.executeProgram()}(this.gpgpu,c,d,h,n),l.forEach(e=>this.disposeIntermediateTensorInfo(e)),f&&(s=this.endTimer(s),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(s)}));let m=ey.getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=r9.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ey.getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===a){let e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,r,n,a=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,n,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(ey.getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=ak(()=>{if(!ey.get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=ey.getBool("DEBUG");ey.set("DEBUG",!1);let t=this.abs(i7(1e-8)).dataSync()[0];if(ey.set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){let t;let r=this.texData.get(e),{shape:n,dtype:a,values:i,texture:s,usage:o,isPacked:u}=r;if(null!=s)return;let l=null!=this.activeTimers;l&&(t=r9.now());let d=r.texShape;if(null==d&&(d=function(e,t=!1){let r=ey.getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=ey.getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&ey.getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=r/2),t&&(r*=2,n*=2,1===(e=e.map((t,r)=>r>=e.length-2?r9.nearestLargerEven(e[r]):e[r])).length&&(e=[2,e[0]])),2!==e.length&&(e=r9.squeezeShape(e).newShape);let a=r9.sizeFromShape(e),i=null;e.length<=1&&a<=r?i=[1,a]:2===e.length&&e[0]<=r&&e[1]<=r?i=e:3===e.length&&e[0]*e[1]<=r&&e[2]<=r?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=r&&e[1]*e[2]<=r?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r&&(i=[e[0],e[1]*e[2]*e[3]]);let s=null!=i&&Math.max(...i)>n&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||s){if(t){let t=cp(e),r=2,n=2;e.length&&([r,n]=cc(e)),a=r/2*t*(n/2),i=r9.sizeToSquarishShape(a).map(e=>2*e)}else i=r9.sizeToSquarishShape(a)}return i}(n,u),r.texShape=d),null!=i){let e;let s=cf(n),o=d[1],h=d[0],p=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!p)&&([o,h]=ce(d[0],d[1])),e=u?new cq(s,p):new cK(s,p);let c=p?[h,o]:d,f=this.makeTensorInfo(c,a),m=this.texData.get(f.dataId);p?m.usage=T2.PIXELS:m.usage=T2.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,h,i);let g=[[h,o]],y=this.runWebGLProgram(e,[f],a,g,!0),x=this.texData.get(y.dataId);r.texShape=x.texShape,r.isPacked=x.isPacked,r.usage=x.usage,ey.get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(r.texture=x.texture,r.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=r9.now()-t)}else{let e=this.acquireTexture(d,o,a,u);r.texture=e}}convertAndCacheOnCPU(e,t){let r=this.texData.get(e),{dtype:n}=r;return null!=t&&(r.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let r="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<r.length;++t)r[t]=Math.round(e[t]);return r}throw Error(`Unknown dtype ${t}`)}(t,n)),r.values}acquireTexture(e,t,r,n){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>1048576*this.numMBBeforeWarning){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,n)}computeBytes(e,t){return e[0]*e[1]*r9.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let r=new Promise(e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}});e.push(r)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await new Promise(e=>p6(()=>e())),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw ci(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),Error("Failed to compile fragment shader.");throw Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:r,infLoc:n,nanLoc:a,outShapeLocation:i,outShapeStridesLocation:s,outTexShapeLocation:o}=cB(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=n,e.nanLoc=a,e.outShapeLocation=i,e.outShapeStridesLocation=s,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";let{texture:n,height:a,width:i,channels:s}=e,o=ai.backend;if(!o.gpgpu.gl.isTexture(n))throw Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=o.writeTexture(n,t,r,a,i,s);return ai.makeTensorFromDataId(u,t,r,o)}}gn.nextDataId=0,ao.isBrowser()&&a$("webgl",()=>new gn,2);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ga=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class gi{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=sg.assertAndGetBroadcastShape(t,r),this.enableShapeUniforms=cU(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gs=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class go{constructor(e,t,r,n=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=sg.assertAndGetBroadcastShape(t,r);let a=this.outputShape.length;this.enableShapeUniforms=cU(a);let i="";if(n){if(0===a||1===r9.sizeFromShape(this.outputShape))i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else{let e=cD(a);if(i=`
          ${e} coords = getOutputCoords();
        `,1===a)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let e=mj("coords",a);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}}}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gu(e){let{inputs:t,backend:r}=e,{x:n}=t;return r.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function gl(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,i=r.makeTensorInfo(n.shape,"complex64"),s=r.texData.get(i.dataId),o=gu({inputs:{x:n},backend:r}),u=gu({inputs:{x:a},backend:r});return s.complexTensorInfos={real:o,imag:u},i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gd="return (a < 0.) ? b * a : a;",gh=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,gp="return (a < 0.) ? b * a : a;",gc=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`,gf="if (isnan(x)) return x;";function gm({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:r,dtype:n}){return({inputs:a,backend:i})=>{let s;let{x:o}=a,u=n||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=r){let e=r(i.texData.get(o.dataId).values,u);return i.makeTensorInfo(o.shape,u,e)}return s=ey.getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new m7(o.shape,t):new mJ(o.shape,e),i.runWebGLProgram(s,[o],u)}}function gg({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:r=!1,supportsComplex:n=!1,cpuKernelImpl:a,dtype:i}){return({inputs:s,backend:o})=>{let u;let{a:l,b:d}=s;if(n&&"complex64"===l.dtype){let t=o.texData.get(l.dataId),r=o.texData.get(d.dataId),[n,a]=[[t.complexTensorInfos.real,r.complexTensorInfos.real],[t.complexTensorInfos.imag,r.complexTensorInfos.imag]].map(t=>{let[r,n]=t,a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i={dataId:n.dataId,dtype:n.dtype,shape:d.shape},s=new gi(e,l.shape,d.shape);return o.runWebGLProgram(s,[a,i],n6(r.dtype,n.dtype))}),i=gl({inputs:{real:n,imag:a},backend:o});return o.disposeIntermediateTensorInfo(n),o.disposeIntermediateTensorInfo(a),i}let h=i||n6(l.dtype,d.dtype);if(("string"===l.dtype||"string"===d.dtype||o.shouldExecuteOnCPU([l,d]))&&null!=a){let e=o.texData.get(l.dataId).values,t=o.texData.get(d.dataId).values,r="string"===l.dtype?sg.fromUint8ToStringArray(e):e,n="string"===l.dtype?sg.fromUint8ToStringArray(t):t,[i,s]=a(l.shape,d.shape,r,n,h),u=o.makeTensorInfo(s,h);return o.texData.get(u.dataId).values=i,u}return u=ey.getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new go(t,l.shape,d.shape,r):new gi(e,l.shape,d.shape),o.runWebGLProgram(u,[l,d],h)}}function gy(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?m5:m2;if("elu"===e)return t?m6:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?m8:m3;if("prelu"===e)return t?gc:gp;if("leakyrelu"===e)return t?gh:gd;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw Error(`Activation ${e} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gx{constructor(e,t,r,n=!1,a=!1,i=!1,s=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=cU(this.outputShape.length);let l=Math.ceil((n?e[1]:e[2])/2),d=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],h=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],p="",c="";s&&(p=o?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:u?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:`vec4 activation(vec4 x) {
          ${s}
        }`,c="result = activation(result);"),i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let f="rc.x",m="rc.x";e[0]<t[0]?f=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(m=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${p}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${f};
        int batchB = ${m};
        for (int i = 0; i < ${l}; i++) {
          vec4 a = getMatrixA(batchA, ${n?"i * 2, rc.y":"rc.y, i * 2"});
          vec4 b = getMatrixB(batchB, ${a?"rc.z, i * 2":"i * 2, rc.z"});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${h[0]});
          result += (${d[1]} * ${h[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${i?"result += getBiasAtOutCoords();":""}

        ${c}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gb={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class gv{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=sg.assertAndGetBroadcastShape(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}let gw="return a * b;";function gS(e){let t;let{inputs:r,backend:n}=e,{a:a,b:i}=r,s=sg.upcastType(a.dtype,i.dtype);if("complex64"===a.dtype){let e=n.texData.get(a.dataId),t=n.texData.get(i.dataId),r=new gv(gb.REAL,a.shape,i.shape),s=new gv(gb.IMAG,a.shape,i.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape}],u=n.runWebGLProgram(r,o,"float32"),l=n.runWebGLProgram(s,o,"float32"),d=gl({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),d}if(n.shouldExecuteOnCPU([a,i])){let e=n.texData.get(a.dataId),t=n.texData.get(i.dataId),[r,o]=mx(a.shape,i.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=r,u}return t=ey.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new go(gw,a.shape,i.shape):new gi(gw,a.shape,i.shape),n.runWebGLProgram(t,[a,i],s)}function gk(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{shape:i}=n,s=r9.sizeFromShape(a.shape),o=r9.inferFromImplicitShape(i,s),u=r9.sizeFromShape(o);r9.assert(s===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`);let l=r.texData.get(a.dataId);return!l.isPacked||cm(a.shape,o)||null!==l.texture&&cm(l.shape,o)?(r.incRef(a.dataId),{dataId:a.dataId,shape:o,dtype:a.dtype}):/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r){let n=[cp(e.shape),...cc(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},i=new mq([cp(t),...cc(t)],n),s=r.runWebGLProgram(i,[a],e.dtype,[n],!0);return{dataId:s.dataId,shape:t,dtype:s.dtype}}(a,o,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gC{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:i}=e;this.outputShape=[n,i];let s=4*Math.floor(r/4),o=r%4,u="sumValue += dot(values, ones);";if(null!=t){let e=1/t;u=`sumValue += dot(values * ${r9.isInt(e)?e.toPrecision(2):e}, ones);`}let l="";a%r>0&&(l=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${s}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${s};
        if (${1===o}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${2===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${3===o}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gI{constructor(e,t){this.variableNames=["x"];let{windowSize:r,batchSize:n,inSize:a,outSize:i}=e;this.outputShape=[n,i];let s="0.0",o="";"prod"===t?s="1.0":"min"===t?(s="1.0 / 1e-20",o="min"):"max"===t&&(s="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");let l=4*Math.floor(r/4),d=r%4,h=`
      if (${"sum"===t}) {
        sumValue += dot(values, ones);
      } else if (${"prod"===t}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${"min"===t} || ${"max"===t}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";"all"===t?(s="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):"any"===t&&(s="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let c="";a%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${s};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${s});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${1===d}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${2===d}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${3===d}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}function gT(e,t,r,n){let a=function(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let r=t.length?t[t.length-1].outSize:e[1],n=sg.computeOptimalWindowSize(r);t.push({inSize:r,windowSize:n,outSize:Math.ceil(r/n)})}return t}(e.shape),i=e;for(let s=0;s<a.length;s++){let o,u;let{inSize:l,windowSize:d,outSize:h}=a[s];o="mean"===r?0===s?new gC({windowSize:d,inSize:l,batchSize:e.shape[0],outSize:h},l):new gC({windowSize:d,inSize:l,batchSize:e.shape[0],outSize:h}):new gI({windowSize:d,inSize:l,batchSize:e.shape[0],outSize:h},r),u=i,i=n.runWebGLProgram(o,[i],t),u.dataId!==e.dataId&&n.disposeIntermediateTensorInfo(u)}return i}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g${constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.rank=r.length;let n=cD(this.rank),a=function(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=Array(t);for(let t=0;t<e.length;t++)n[e[t]]=r[t];return n.join()}(t);this.userCode=`
    void main() {
      ${n} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gN{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let n=cD(this.rank),a=mH("rc",this.rank),i=Array(this.rank);for(let e=0;e<t.length;e++)i[t[e]]=a[e];let s=`vec2(${i.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${r[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${s})`;this.userCode=`
    void main() {
      ${n} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}function gE(e,t,r){let n=ey.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gN(e.shape,t):new g$(e.shape,t);return r.runWebGLProgram(n,[e],e.dtype)}function gR(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,keepDims:s}=n;return function(e,t,r,n){let a=e.shape.length,i=r9.parseAxisParam(t,e.shape),s=i,o=sg.getAxesPermutation(s,a),u=null!=o,l=e;u&&(l=gE(e,o,n),s=sg.getInnerMostAxes(s.length,a)),sg.assertAxesAreInnerMostDims("sum",s,a);let[d,h]=sg.computeOutAndReduceShapes(l.shape,s),p=d;r&&(p=sg.expandShapeToKeepDim(d,i));let c=r9.sizeFromShape(h),f=gk({inputs:{x:l},attrs:{shape:[r9.sizeFromShape(e.shape)/c,c]},backend:n}),m=gT(f,n5(e.dtype),"sum",n),g=gk({inputs:{x:m},attrs:{shape:p},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),u&&n.disposeIntermediateTensorInfo(l),g}(a,i,s,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{perm:s}=a,o=Array(i.shape.length);for(let e=0;e<o.length;e++)o[e]=i.shape[s[e]];if(n.shouldExecuteOnCPU([i])){let e=mW(n.texData.get(i.dataId).values,i.shape,i.dtype,s,o);t=n.makeTensorInfo(o,i.dtype),n.texData.get(t.dataId).values=e}else t=gE(i,s,n);return t}function g_({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){let l;let d=e.shape.length,h=t.shape.length,p=r?e.shape[d-2]:e.shape[d-1],c=n?t.shape[h-1]:t.shape[h-2],f=r?e.shape[d-1]:e.shape[d-2],m=n?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=r9.sizeFromShape(g),b=r9.sizeFromShape(y),v=su.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r9.assert(p===c,()=>`Error in matMul: inner shapes (${p}) and (${c}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let w=r?[x,p,f]:[x,f,p],S=n?[b,m,c]:[b,c,m],k=gk({inputs:{x:e},backend:a,attrs:{shape:w}}),C=gk({inputs:{x:t},backend:a,attrs:{shape:S}}),I=[k,C],T=Math.max(x,b),$=r?k.shape[1]:k.shape[2],N=null!=i,E=null!=s,R="leakyrelu"===u,A=null!=u?gy(u,!0):null,_=N||E||R||null!=A;if((1===f||1===m)&&$>1e3&&!1===_){let e=k,t=C;r&&(e=gA({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),I.push(e)),n&&(t=gA({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),I.push(t));let i=1!==m,s=1===m,o=e;i&&(o=gk({inputs:{x:e},backend:a,attrs:{shape:[T,$,1]}}),I.push(o));let u=t;s&&(u=gk({inputs:{x:t},backend:a,attrs:{shape:[T,1,$]}}),I.push(u));let d=gS({inputs:{a:o,b:u},backend:a});l=gR({inputs:{x:d},backend:a,attrs:{axis:1===m?2:1,keepDims:!0}}),I.push(d)}else{let u=n6(e.dtype,t.dtype),d=new gx(w,S,[T,f,m],r,n,N,A,E,R),h=[k,C];if(null!=i&&h.push(i),E&&h.push(s),R){let e=a.makeTensorInfo([],"float32",r9.createScalarValue(o,"float32"));h.push(e),I.push(e)}l=a.runWebGLProgram(d,h,u)}let O=gk({inputs:{x:l},backend:a,attrs:{shape:v}});for(let e of(I.push(l),I))a.disposeIntermediateTensorInfo(e);return O}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gO="return abs(x);",gF=gm({opSnippet:m0+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`}),gD=gm({opSnippet:m0+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`}),gP="return a + b;",gM=gg({opSnippet:gP,packedOpSnippet:gP,supportsComplex:!0,cpuKernelImpl:f5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gL{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];this.variableNames.forEach(e=>{r.push(`float v${e} = get${e}AtOutCoords();`)});let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        float result = ${n};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gB{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);let r=[];this.variableNames.forEach(e=>{r.push(`vec4 v${e} = get${e}AtOutCoords();`)});let n=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`
      void main() {
        ${r.join("\n        ")}

        vec4 result = ${n};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gz{constructor(e,t,r){this.variableNames=["A"];let{windowSize:n,batchSize:a,outSize:i}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${n}; i++) {
          int inIdx = ${r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};
          float candidate = getA(batch, inIdx);
          if (candidate ${"max"===t?">":"<"} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gU{constructor(e,t,r,n){let a,i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r9.assert(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);let s=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),n||this.variableNames.push("bestIndicesA");let o=this.outputShape,u=o.length,l=cD(u),d=mj("coords",u);if(1===s){let e=cD(i=u+1);a=`
        ${e} sourceLocR = ${e}(${d.join()}, 0);
        ++${d[u-1]};
        ${e} sourceLocG = ${e}(${d.join()}, 0);
        ++${d[u-2]};
        ${e} sourceLocA = ${e}(${d.join()}, 0);
        --${d[u-1]};
        ${e} sourceLocB = ${e}(${d.join()}, 0);
        --${d[u-2]};`}else i=u,a=`
        ${l} sourceLocR = coords;
        ++${d[u-1]};
        ${l} sourceLocG = coords;
        ++${d[u-2]};
        ${l} sourceLocA = coords;
        --${d[u-1]};
        ${l} sourceLocB = coords;
        --${d[u-2]};`;let h=["x","y","z","w","u","v"].slice(0,i),p="."+h[i-1],c=h.map(e=>"int "+e),f=mj("sourceLocR",i-1).concat("inIdx.r"),m=mj("sourceLocG",i-1).concat("inIdx.g"),g=mj("sourceLocB",i-1).concat("inIdx.b"),y=mj("sourceLocA",i-1).concat("inIdx.a"),x=n?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()})));`,b=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${m.join()}) : 0.,
            hasNextRow ? getAChannel(${g.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,v=n?"":`
      float getBestIndicesAChannel(${c.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${c.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${v}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${d[u-1]} < ${o[u-1]-1};
        bool hasNextRow = ${d[u-2]} < ${o[u-2]-1};
        ${a}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${b};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${b};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${"max"===r?"greaterThan":"lessThan"}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}function gV(e,t,r,n){let a=[r];if(sg.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,t.shape.length),!ey.getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let r=[],i=e.texData.get(t.dataId),s=null!==i&&i.isPacked,o=t;s&&r.push(o=e.unpackTensor(t));let[u,l]=sg.computeOutAndReduceShapes(o.shape,a),d=gk({inputs:{x:o},backend:e,attrs:{shape:[-1,r9.sizeFromShape(l)]}});r.push(d);let h=function e(t,r,n,a=null){let i=r.shape[0],s=r.shape[1];null!=a&&(i=a.shape[0],s=a.shape[1]);let o=sg.computeOptimalWindowSize(s),u=new gz({windowSize:o,inSize:s,batchSize:i,outSize:Math.ceil(s/o)},n,null==a),l=[r];null!=a&&l.push(a);let d=t.runWebGLProgram(u,l,"int32");if(1===d.shape[1])return d;let h=e(t,r,n,d);return t.disposeIntermediateTensorInfo(d),h}(e,d,n);r.push(h);let p=gk({inputs:{x:h},backend:e,attrs:{shape:u}});return r.forEach(t=>e.disposeIntermediateTensorInfo(t)),p}return function e(t,r,n,a=null){let i=null!=a?a.shape:r.shape,s=i[i.length-1],o=new gU(i,sg.computeOptimalWindowSize(s),n,null==a),u=t.runWebGLProgram(o,null==a?[r]:[r,a],"int32");if(u.shape.length===r.shape.length){let a=e(t,r,n,u);return t.disposeIntermediateTensorInfo(u),a}return u}(e,t,n)}let gW=gm({opSnippet:m0+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`}),gG=gm({opSnippet:m0+"return log(x + sqrt(x * x + 1.0));"}),gH=gm({opSnippet:m0+`
  return atan(x);
`}),gj=gg({opSnippet:ga+`
  return atan(a, b);
`,packedOpSnippet:`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+gs+`
  return result;
`}),gK=gm({opSnippet:m0+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gq{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),r){this.userCode=`
        const ivec2 strides = ivec2(${s}, ${o});
        const ivec2 pads = ivec2(${p}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${n?a?m:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / max(count, 1.0)");let b=4*Math.floor(i/4),v=i%4,w=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${o});
      const ivec2 pads = ivec2(${p}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${w}
          }

          int xC = xCCorner + ${b};
          if (${1===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${2===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${w}
          } else if (${3===v}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${w}
          }
        }
        setOutput(${x});
      }
    `}}class gX{constructor(e,t,r,n=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&r)throw Error("Cannot compute positions for average pool.");let i=e.filterWidth,s=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let x="avg"===t,b="0.0";if(x||(b="-1.0 / 1e-20"),r){this.userCode=`
        const ivec3 strides =
            ivec3(${s}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${n?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");let w=4*Math.floor(i/4),S=i%4,k=`
      if (${x}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = max(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${s}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${y});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${w}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${k}
            }

            int xC = xCCorner + ${w};
            if (${1===S}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${2===S}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${k}
            } else if (${3===S}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${k}
            }
          }
        }
        setOutput(${v});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gY{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,d=u-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${1/(t*r)});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${s}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class gQ{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,c=d-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${f}, ${m});
      const float avgMultiplier = float(${1/(t*r*n)});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gZ{constructor(e,t,r,n,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],sg.assertAndGetBroadcastShape(e,t),sg.assertAndGetBroadcastShape(e,r);let s="0.0";null!=n&&(sg.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="1.0";null!=a&&(sg.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${s};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gJ{constructor(e,t,r,n,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],sg.assertAndGetBroadcastShape(e,t),sg.assertAndGetBroadcastShape(e,r);let s="vec4(0.0)";null!=n&&(sg.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset"),s="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(sg.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${s};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g0{constructor(e){let t;this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let r=cD(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=function(e){if(1===e)return"sourceLoc";if(e<=6)return g1.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank),a=e.map((e,t)=>`sourceLoc.${g1[t]} = start[${t}] + coords.${g1[t]};`);t=`
        ${r} sourceLoc;
        ${r} coords = getOutputCoords();
        ${a.join("\n")}
      `,this.userCode=`
      void main() {
        ${t}
        setOutput(getSource(${n}));
      }
    `}}let g1=["x","y","z","w","u","v"];/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g2{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=cD(this.rank),r=mj("coords",this.rank),n=mj("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${n.slice(-2).join()})`,i=`getChannel(getSource(${n.join()}), ${a})`,s=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${n[this.rank-1]};
        result.y = ${i};
        --${n[this.rank-1]};
      }
    `,o=1===this.rank?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${n[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${n[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${n[t]} = ${r[t]} + start[${t}];`).join("\n");this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${s}
        ${o}
        setOutput(result);
      }
    `}}function g3(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:i,size:s}=n,[o,u]=on.parseSliceParams(a,i,s);if(on.assertParamsValid(a,o,u),0===r9.sizeFromShape(u))return r.makeTensorInfo(u,a.dtype,[]);if(r.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=mR(r.texData.get(a.dataId).values,o,u,a.shape,a.dtype);return r.makeTensorInfo(u,a.dtype,e)}let{isPacked:l}=r.texData.get(a.dataId),d=on.isSliceContinous(a.shape,o,u);if(l||!d){let e=ey.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new g2(u):new g0(u),t=[o];return r.runWebGLProgram(e,[a],a.dtype,t)}return r.uploadToGPU(a.dataId),function(e,t,r,n){let a=n.texData.get(e.dataId),i=n.makeTensorInfo(r,e.dtype),s=n.texData.get(i.dataId);Object.assign(s,a),s.refCount=1,s.shape=r,s.dtype=e.dtype;let o=on.computeFlatOffset(t,r9.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),s.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let u=n.dataRefCount.get(s.slice.origDataId)||1;return n.dataRefCount.set(s.slice.origDataId,u+1),i}(a,o,u,r)}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let g4=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,g6=`
  return float(int(a.r) & int(b.r));
`,g5=gg({opSnippet:"return float(a != b);",cpuKernelImpl:mv,dtype:"bool"});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g8(e){let{inputs:t,backend:r}=e,{input:n}=t;return gu({inputs:{x:r.texData.get(n.dataId).complexTensorInfos.real},backend:r})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let g7="return ceil(x);",g9=gm({opSnippet:g7,packedOpSnippet:g7,cpuKernelImpl:mt});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ye{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}function yn(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ya{constructor(e){this.outputShape=[],this.outputShape=sg.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`);let t=Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];let r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let n=t[e-1];r.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${n}));`)}let n=t.length,a=t[t.length-1];r.push(`else setOutput(getT${n}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join("\n        ")}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yi{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=sg.computeOutShape(e,t);let r=this.outputShape,n=r.length,a=cD(n),i=mj("coords",n),s=["x","y","z","w","u","v"].slice(0,n);this.variableNames=e.map((e,t)=>`T${t}`);let o=Array(e.length-1);o[0]=e[0][t];for(let r=1;r<o.length;r++)o[r]=o[r-1]+e[r][t];let u=s[t],l=s.slice(-2),d=s.join(),h=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let e=1;e<o.length;e++){let t=o[e-1];h+=`
        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {
          return getChannel(
            getT${e}(${ys(s,u,t)}),
            vec2(${ys(l,u,t)}));
        }`}let p=o.length,c=o[o.length-1];h+=`
        return getChannel(
          getT${p}(${ys(s,u,c)}),
          vec2(${ys(l,u,c)}));`,this.userCode=`
      float getValue(${s.map(e=>"int "+e)}) {
        ${h}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[n-1]} = ${i[n-1]} + 1;
        if (${i[n-1]} < ${r[n-1]}) {
          result.g = getValue(${i});
        }

        ${i[n-2]} = ${i[n-2]} + 1;
        if (${i[n-2]} < ${r[n-2]}) {
          result.a = getValue(${i});
        }

        ${i[n-1]} = ${i[n-1]} - 1;
        if (${i[n-2]} < ${r[n-2]} &&
            ${i[n-1]} < ${r[n-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function ys(e,t,r){let n=e.indexOf(t);return e.map((e,t)=>t===n?`${e} - ${r}`:e).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yo(e){let{inputs:t,backend:r}=e,{input:n}=t;return gu({inputs:{x:r.texData.get(n.dataId).complexTensorInfos.imag},backend:r})}function yu(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,i=r9.parseAxisParam(a,t[0].shape)[0],s=t.map(e=>e.shape);sg.assertParamsConsistent(s,i);let o=sg.computeOutShape(t.map(e=>e.shape),i);if(0===r9.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(e=>r9.sizeFromShape(e.shape)>0);return 1===u.length?gu({inputs:{x:u[0]},backend:r}):function e(t,r,n){let a=t[0].dtype;if("complex64"===a){let a=t.map(e=>g8({inputs:{input:e},backend:n})),i=t.map(e=>yo({inputs:{input:e},backend:n})),s=e(a,r,n),o=e(i,r,n),u=gl({inputs:{real:s,imag:o},backend:n});return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),i.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}let i=n.shouldExecuteOnCPU(t);if("string"===a&&(i=!0),i){let e=t.map(e=>{let t=r9.sizeFromShape(e.shape.slice(r));return gk({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),i=mr(e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),sg.computeOutShape(e.map(e=>e.shape),1),a,1===e[0].shape[0]),s=sg.computeOutShape(t.map(e=>e.shape),r),o=n.makeTensorInfo(s,a,i);return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),o}let s=t.filter(e=>r9.sizeFromShape(e.shape)>0),o=ey.getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let e=o?new mJ(t[0].shape,m4):new m7(t[0].shape,m4);return n.runWebGLProgram(e,t,a)}let u=ey.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>u){let t=[];for(let a=0;a<s.length;a+=u){let i=s.slice(a,a+u);t.push(e(i,r,n))}let a=e(t,r,n);for(let e of t)n.disposeIntermediateTensorInfo(e);return a}if(o){let e=new yi(s.map(e=>e.shape),r);return n.runWebGLProgram(e,s,a)}let{tensors2D:l,outShape:d}=function(e,t,r){let n=sg.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>gk({inputs:{x:e},attrs:{shape:[-1,r9.sizeFromShape(e.shape.slice(t))]},backend:r})),outShape:n}}(s,r,n),h=new ya(l.map(e=>e.shape)),p=n.runWebGLProgram(h,l,a);l.forEach(e=>n.disposeIntermediateTensorInfo(e));let c=gk({inputs:{x:p},attrs:{shape:d},backend:n});return n.disposeIntermediateTensorInfo(p),c}(u,i,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yl{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let i=e.padInfo.top,s=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g="",y="";r&&(g=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,y="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${g}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${m?3:1}];

        ivec2 xRCCorner =
            ivec2(coords[${m?1:2}], coords[${m?2:3}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${1===f}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${2===f}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${3===f}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${y}
        setOutput(result);
      }
    `}}class yd{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,r=e.padInfo.top,n=e.padInfo.left,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${i}, ${s});
      const ivec3 pads = ivec3(${t}, ${r}, ${n});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${1===f}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${2===f}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${3===f}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yh{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cU(this.outputShape.length);let i=e.padInfo.left,s=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<l;e++)d+=`
           vec4 xTexelC${2*e};
           int xTexelC${2*e}Ready;
           vec4 xTexelC${2*e+1};
           int xTexelC${2*e+1}Ready;
           vec4 xC${e};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let e=0;e<l;e++)d+=`
           xTexelC${2*e} = vec4(0.0);
           xTexelC${2*e}Ready = 0;
           xTexelC${2*e+1} = vec4(0.0);
           xTexelC${2*e+1}Ready = 0;
           xC${e} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let t=0;t<(l+1)/2;t++){let r=2*t;if(d+=`
           xC = xCCorner + ${r*o};
           `,1===s){if(r<l&&(i%2==1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }
               `,1===o&&r>0?d+=`
                 xC${r} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${r} = vec4(previous.zw, xTexelC${r}.xy);
                   } else {
                     xC${r} = vec4(0.0, 0.0, xTexelC${r}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xC${r} = xTexelC${r};
                 `,r+1<l)){let e=i%2==0?r9.nearestLargerEven(o):o;o%2==0&&i%2==1||o%2!=0&&i%2!=1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${e};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                     xTexelC${r+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${r+1}.zw = vec2(0.0);
                     }
                     xTexelC${r+1}Ready = 1;
                   }
                   `,o>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${r+1} = vec4(previous.zw, xTexelC${r+1}.xy);
                     } else {
                      xC${r+1} = vec4(0.0, 0.0, xTexelC${r+1}.xy);
                     }
                     `:d+=`
                     xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.xy);
                     `):1===e?d+=`
                     xC${r+1} = xTexelC${r};
                     `:d+=`
                     xCOffset = xC + ${e};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                       xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${r+1}.zw = vec2(0.0);
                       }
                       xTexelC${r+1}Ready = 1;
                     }

                     xC${r+1} = xTexelC${r+1};
                     `}}else r<l&&(i%2==1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.0);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
               `,r+1<l&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${r+1} = vec4(xTexelC${r+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${r}Ready == 0) {
                   xTexelC${r} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${r}.zw = vec2(0.0);
                   }
                   xTexelC${r}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${r+1}Ready == 0) {
                   xTexelC${r+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${r+1}.zw = vec2(0.);
                   }
                   xTexelC${r+1}Ready = 1;
                 }

                 xC${r} = vec4(
                   xTexelC${r}.xy, xTexelC${r+1}.xy);
               `,r+1<l&&(d+=`
                   xC${r+1} = vec4(xTexelC${r}.zw, xTexelC${r+1}.zw);
                 `)));r<l&&(d+=`
             wTexel = getW(r, ${r}, d1, d2);
             dotProd += xC${r}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${r}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,r+1<l&&(d+=`
               wTexel = getW(r, ${r+1}, d1, d2);
               dotProd += xC${r+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${r+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   
     }
   
     }
   `;let h="",p="";r&&(h=n?`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:a?`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:`vec4 activation(vec4 x) {
           ${r}
         }`,p="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${t?"result += getBiasAtOutCoords();":""}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yp{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=cU(this.outputShape.length);let{dataFormat:r}=t,n=cw(),a="channelsLast"===r,i=a?1:2,s=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`
          blockIndex = rc.z + ${t};
          pos = rc.y + ${e};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${s}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${2*e+t}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${n.output} = result;
      }
    `}}function yc(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&1===r&&e[0]>1?[e[0],1]:null}function yf({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let u;let l=e.shape,d=n.texData.get(e.dataId),h=r.inChannels,p=l[0]*l[1]*l[2],c=r.outChannels,f="channelsLast"===r.dataFormat,m=[];if(null!=i){let e=yc(i.shape,f);null!=e&&(i=gk({inputs:{x:i},backend:n,attrs:{shape:e}}),m.push(i))}if(null!=a){let e=yc(a.shape,f);null!=e&&(a=gk({inputs:{x:a},backend:n,attrs:{shape:e}}),m.push(a))}if(!((1===p||1===c)&&h>1e3)&&d.isPacked&&f&&null!=d.texture&&l[2]%2!=0&&r9.arraysEqual(d.shape.slice(-3),l.slice(-3))){let h=l[0]*l[1]*(l[2]+1),p={dataId:e.dataId,shape:[1,h,r.inChannels],dtype:e.dtype},c=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,r9.assert(cm(d.shape,p.shape),()=>`packed reshape ${d.shape} to ${p.shape} isn't free`);let f=gk({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});m.push(f);let g=g_({a:p,b:f,backend:n,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),y=n.texData.get(g.dataId);r9.assert(y.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=c,y.shape=r.outShape,(u=gu({inputs:{x:g},backend:n})).shape=r.outShape,m.push(g)}else{let l=r.outHeight*r.outWidth,d=gk({inputs:{x:e},backend:n,attrs:{shape:f?[r.batchSize,l,r.inChannels]:[r.batchSize,r.inChannels,l]}}),h=gk({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}}),p=g_({a:f?d:h,b:f?h:d,transposeA:!f,transposeB:!1,backend:n,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s});u=gk({inputs:{x:p},backend:n,attrs:{shape:r.outShape}}),m.push(d),m.push(h),m.push(p)}for(let e of m)n.disposeIntermediateTensorInfo(e);return u}function ym({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let{filterWidth:u,filterHeight:l,inChannels:d,outWidth:h,outHeight:p,dataFormat:c}=r,f="channelsLast"===c,m=u*l*d,g=p*h,y=[r.batchSize,m,g],x=[];if(null!=i){let e=yc(i.shape,f);null!=e&&(i=gk({inputs:{x:i},backend:n,attrs:{shape:e}}),x.push(i))}if(null!=a){let e=yc(a.shape,f);null!=e&&(a=gk({inputs:{x:a},backend:n,attrs:{shape:e}}),x.push(a))}let b=gk({inputs:{x:t},backend:n,attrs:{shape:[1,m,r9.sizeFromShape(t.shape)/m]}});x.push(b);let v=new yp(y,r),w=[e.shape,[r.padInfo.top,r.padInfo.left],[r.strideHeight,r.strideWidth],[r.dilationHeight,r.dilationWidth],[r.inChannels],[r.filterWidth*r.inChannels],[r.outWidth]],S=n.runWebGLProgram(v,[e],"float32",w),k=gk({inputs:{x:S},backend:n,attrs:{shape:y}});x.push(S),x.push(k);let C=null!=a,I=null!=i,T="leakyrelu"===o,$=o?gy(o,!0):null,N=new gx(f?k.shape:b.shape,f?b.shape:k.shape,f?[r.batchSize,g,r.outChannels]:[r.batchSize,r.outChannels,g],!0,!1,C,$,I,T),E=f?[k,b]:[b,k];if(a&&E.push(a),I&&E.push(i),T){let e=n.makeTensorInfo([],"float32",r9.createScalarValue(s,"float32"));E.push(e),x.push(e)}let R=n.runWebGLProgram(N,E,"float32"),A=gk({inputs:{x:R},backend:n,attrs:{shape:r.outShape}});for(let e of(x.push(R),x))n.disposeIntermediateTensorInfo(e);return A}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yg{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yy{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,i="channelsLast"===e.dataFormat,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${i?3:1}];

        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yx{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.padInfo.front,i=e.padInfo.top,s=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${n} - ${s};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class yb{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,r=e.filterHeight,n=e.filterWidth,a=e.strideDepth,i=e.strideHeight,s=e.strideWidth,o=t-1-e.padInfo.front,u=r-1-e.padInfo.top,l=n-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${n}; wC++) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${n} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yv{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=cU(this.outputShape.length);let t=e.filterHeight,r=e.filterWidth,n=t-1-e.padInfo.top,a=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${n}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}let yw=gm({opSnippet:gf+`
  return cos(x);
`,packedOpSnippet:`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${gs}
  return result;
`}),yS=gm({opSnippet:`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yk{constructor(e,t,r,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,s,o,u]=e,[l]=t,[d,h]=r;this.outputShape=[l,d,h,u];let[p,c]=[`${s-1}.0`,`${o-1}.0`],[f,m,g]=d>1?[`${(s-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,b]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${c} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${c}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${m};
        float width_scale = ${x};

        float in_y = ${g};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${c} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${"bilinear"===n?1:0} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}(T_=T4||(T4={})).Prod="*",T_.Sum="+";class yC{constructor(e,t,r,n){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,i=this.op===T4.Prod?"1.0":"0.0",s=r?i:`getX(${yI(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],u="",l="";r?(u=n?`end != ${o-1}`:"end != 0",l=n?"end + 1":"end - 1"):(u=n?`end + pow2 < ${o}`:"end >= pow2",l=n?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${cD(a)} coords = getOutputCoords();
        int end = ${yT(a,"coords",this.op)};
        float val = ${s};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${yT(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${yI(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function yI(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function yT(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(e,t,r,n,a,i){let s=t.shape.length,o=sg.getAxesPermutation([n],s),u=t;null!=o&&(u=gA({inputs:{x:t},backend:r,attrs:{perm:o}}));let l=sg.getInnerMostAxes(1,s)[0];if(l!==s-1)throw Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let d=u.shape[l],h=gu({inputs:{x:u},backend:r});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let n=new yC(e,u.shape,!1,i),a=[[t]],s=h;h=r.runWebGLProgram(n,[h],h.dtype,a),r.disposeIntermediateTensorInfo(s)}if(a){let t=new yC(e,u.shape,a,i),n=h;h=r.runWebGLProgram(t,[h],h.dtype),r.disposeIntermediateTensorInfo(n)}if(null!=o){let e=gA({inputs:{x:h},backend:r,attrs:{perm:sg.getUndoAxesPermutation(o)}});return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(u),e}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yN{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yE{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cU(this.outputShape.length);let i=e.filterHeight,s=e.filterWidth,o=e.outChannels/e.inChannels,u="",l="";r&&(u=n?`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`
          float activation(float x) {
            ${r}
          }
        `,l="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${s}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${t?"result += getBiasAtOutCoords();":""}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yR{constructor(e,t=!1,r=null,n=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=cU(this.outputShape.length);let i=e.outChannels/e.inChannels,s=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let e=0;e<d;e++)h+=`
          vec4 xTexelC${2*e};
          int xTexelC${2*e}Ready;
          vec4 xTexelC${2*e+1};
          int xTexelC${2*e+1}Ready;
          vec4 xC${e};`;h+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let e=0;e<d;e++)h+=`
          xTexelC${2*e} = vec4(0.0);
          xTexelC${2*e}Ready = 0;
          xTexelC${2*e+1} = vec4(0.0);
          xTexelC${2*e+1}Ready = 0;
          xC${e} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let e=0;e<(d+1)/2;e++){let t=2*e;if(h+=`
          xC = xCCorner + ${t*u};
          `,1===o){if(t<d&&(s%2==1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }
              `,1===u&&t>0?h+=`
                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);
                  } else {
                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xC${t} = xTexelC${t};
                `,t+1<d)){let e=s%2==0?r9.nearestLargerEven(u):u;u%2==0&&s%2==1||u%2!=0&&s%2!=1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${e};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${t+1}.zw = vec2(0.0);
                    }
                    xTexelC${t+1}Ready = 1;
                  }
                  `,u>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);
                    } else {
                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);
                    }
                    `:h+=`
                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);
                    `):1===e?h+=`
                    xC${t+1} = xTexelC${t};
                    `:h+=`
                    xCOffset = xC + ${e};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${t+1}.zw = vec2(0.0);
                      }
                      xTexelC${t+1}Ready = 1;
                    }

                    xC${t+1} = xTexelC${t+1};
                    `}}else t<d&&(s%2==1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.0);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
              `,t+1<d&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {
                  xTexelC${t} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${t}.zw = vec2(0.0);
                  }
                  xTexelC${t}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {
                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${t+1}.zw = vec2(0.);
                  }
                  xTexelC${t+1}Ready = 1;
                }

                xC${t} = vec4(
                  xTexelC${t}.xy, xTexelC${t+1}.xy);
              `,t+1<d&&(h+=`
                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);
                `)));t<d&&(h+=`
            wTexel = getW(r, ${t}, d1, q);
            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);
          `,t+1<d&&(h+=`
              wTexel = getW(r, ${t+1}, d1, q);
              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  
      }
    `;let p="",c="";r&&(p=n?`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:a?`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:`vec4 activation(vec4 x) {
          ${r}
        }`,c="result = activation(result);"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${t?"result += getBiasAtOutCoords();":""}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,r=e.strideWidth,n=e.padInfo.top,a=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${n};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class y_{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,r=e.filterWidth,n=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.top,s=r-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:r,padInfo:n,strideHeight:a,strideWidth:i,filterHeight:s,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:d,left:h}=n;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${i});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${s}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}let yD=gm({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`}),yP=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,yM=gg({opSnippet:"return float(a == b);",packedOpSnippet:`
  return vec4(equal(a, b));
`,dtype:"bool",cpuKernelImpl:mn}),yL=gm({opSnippet:`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${sg.ERF_P};
  float a1 = ${sg.ERF_A1};
  float a2 = ${sg.ERF_A2};
  float a3 = ${sg.ERF_A3};
  float a4 = ${sg.ERF_A4};
  float a5 = ${sg.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`}),yB=gm({opSnippet:gf+`
  return exp(x);
`,packedOpSnippet:`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:ma,dtype:"float32"});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:i}=t,s=i.shape.length,o=i.shape.slice(),u=a;return a<0&&(r9.assert(-(s+1)<=a,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),u=s+a+1),o.splice(u,0,1),gk({inputs:{x:i},backend:n,attrs:{shape:o}})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yU="return exp(x) - 1.0;",yV=gm({opSnippet:yU,packedOpSnippet:yU,cpuKernelImpl:mi});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yW{constructor(e,t,r){let n;this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let i=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=r?`${a}.0`:"1.0";if("real"===e)n="return real * expR - imag * expI;";else if("imag"===e)n="return real * expI + imag * expR;";else throw Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${n}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}function yG(e,t,r){let n=r.texData.get(e.dataId),a=r9.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],s=gk({inputs:{x:e},backend:r,attrs:{shape:[a/i,i]}}),o=s.shape,u=new yW("real",o,t),l=new yW("imag",o,t),d=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:o},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:o}],h=r.runWebGLProgram(u,d,"float32"),p=r.runWebGLProgram(l,d,"float32"),c=gl({inputs:{real:h,imag:p},backend:r});r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p);let f=gk({inputs:{x:c},backend:r,attrs:{shape:e.shape}});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(c),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yH{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}function yj(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:i}=r;if("string"===(i=i||r9.inferDtype(a))){let e=r9.getArrayFromDType(i,r9.sizeFromShape(n));return e.fill(a),t.makeTensorInfo(n,i,e)}{let e=new yH(n,a),r=[[a]];return t.runWebGLProgram(e,[],i,r)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yK{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yq="return floor(x);",yX=gm({opSnippet:yq,packedOpSnippet:yq,cpuKernelImpl:ms}),yY=gg({opSnippet:`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,packedOpSnippet:`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,dtype:"int32"});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(e){this.variableNames=["A"];let t=cw(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yZ{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=cw(),[r,n]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${n}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}let yJ=ey.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y0{constructor(e,t,r,n){this.sliceDim=e,this.strides=t,this.paramsShape=n,this.variableNames=["x","indices"],this.outputShape=r;let a=cD(r.length),i=`
    int index;`;for(let e=0;e<this.sliceDim;e++)i+=`
          index = round(getIndices(coords[0], ${e}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};
          flattenIndex += index * ${this.strides[e]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y1{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let r=cD(this.rank),n=function(e,t){let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let t=0;t<e.length;t++)2===t?n.push("index"):n.push(`${r[t]}`);return n.join()}(e,0);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${n}));
      }
    `}}function y2(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=n,u=r9.parseAxisParam(s,a.shape)[0];if(ey.get("DEBUG")){let e=r.readSync(i.dataId),t=a.shape[u];for(let r=0;r<e.length;++r){let n=e[r];r9.assert(n<=t-1&&n>=0,()=>`GatherV2: the index value ${n} is not in [0, ${t-1}]`)}}let l=sg.segment_util.collectGatherOpShapeInfo(a,i,u,o),d=r9.sizeFromShape(i.shape),h=[],p=gk({inputs:{x:a},backend:r,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),c=gk({inputs:{x:i},backend:r,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(c);let f=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(r.shouldExecuteOnCPU([a,i])||"string"===a.dtype){let e=r.bufferSync(c),t=mu(r.bufferSync(p),e,f);return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),r.makeTensorInfo(l.outputShape,t.dtype,t.values)}let m=new y1(p.shape,f),g=r.runWebGLProgram(m,[p,c],p.dtype);h.push(g);let y=gk({inputs:{x:g},backend:r,attrs:{shape:l.outputShape}});return h.forEach(e=>r.disposeIntermediateTensorInfo(e)),y}let y3=gg({opSnippet:"return float(a > b);",packedOpSnippet:`
  return vec4(greaterThan(a, b));
`,cpuKernelImpl:ml,dtype:"bool"}),y4=gg({opSnippet:"return float(a >= b);",packedOpSnippet:`
  return vec4(greaterThanEqual(a, b));
`,dtype:"bool",cpuKernelImpl:md}),y6=gm({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),y5=gm({opSnippet:"return float(isinf(x));",dtype:"bool"}),y8=gm({opSnippet:"return float(isnan(x));",dtype:"bool"}),y7=gg({opSnippet:"return float(a < b);",packedOpSnippet:`
  return vec4(lessThan(a, b));
`,cpuKernelImpl:mh,dtype:"bool"}),y9=gg({opSnippet:"return float(a <= b);",packedOpSnippet:`
  return vec4(lessThanEqual(a, b));
`,cpuKernelImpl:mp,dtype:"bool"}),xe=gm({opSnippet:gf+`
  return x < 0.0 ? 0./0. : log(x);
`,packedOpSnippet:`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,cpuKernelImpl:mf}),xt=gm({opSnippet:gf+`
  return log(1.0 + x);
`}),xr=gg({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,dtype:"bool"}),xn=gm({opSnippet:"return float(!(x >= 1.0));"}),xa=gg({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,dtype:"bool"});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xi{constructor(e,t,r,n,a){let i;this.variableNames=["x"],this.outputShape=[];let s=e[3]-1;this.outputShape=e;let o=`float(${r}) + float(${n}) * sum`;i=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${t}; j <= ${t}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${s}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${i};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xs{constructor(e,t,r,n,a){let i;this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=e[3]-1;this.outputShape=e;let o=`float(${r}) + float(${n}) * sum`;i=.5===a?`inversesqrt(${o})`:1===a?`1.0/(${o})`:`exp(log(${o}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${t};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${t}; j <= ${t}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${i};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xo{constructor(e,t,r,n,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=n,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${n}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${n})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}function xu(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{reductionIndices:s,keepDims:o}=a,u=i.shape.length,l=r9.parseAxisParam(s,i.shape),d=l,h=sg.getAxesPermutation(d,u),p=null!=h,c=n.shouldExecuteOnCPU([i]),f=i;if(p){if(c){let e=n.texData.get(f.dataId).values,t=Array(u);for(let e=0;e<t.length;e++)t[e]=i.shape[h[e]];let r=mW(e,i.shape,i.dtype,h,t);f=n.makeTensorInfo(t,i.dtype),n.texData.get(f.dataId).values=r}else f=gE(i,h,n);d=sg.getInnerMostAxes(d.length,u)}sg.assertAxesAreInnerMostDims("max",d,u);let[m,g]=sg.computeOutAndReduceShapes(f.shape,d),y=m;if(o&&(y=sg.expandShapeToKeepDim(m,l)),c){let e=mm(n.texData.get(f.dataId).values,r9.sizeFromShape(g),y,i.dtype);t=n.makeTensorInfo(y,i.dtype),n.texData.get(t.dataId).values=e}else t=/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){let a=r9.sizeFromShape(t),i=r9.sizeFromShape(e.shape),s=gk({inputs:{x:e},attrs:{shape:[i/a,a]},backend:n}),o=gT(s,e.dtype,"max",n),u=gk({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}(f,g,y,n);return p&&n.disposeIntermediateTensorInfo(f),t}let xl=gg({opSnippet:ga+`
  return max(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+gs+`
  return result;
`,cpuKernelImpl:mg});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xd{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,r=e.strideWidth,n=e.dilationHeight,a=e.effectiveFilterHeight,i=e.effectiveFilterWidth,s=a-1-e.padInfo.top,o=i-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${n}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${a*i-1} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class xh{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,r=e.strideHeight,n=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,s=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${s}) {
              float dyC = float(dyCCorner + wC) / ${n}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${o*u*l-1} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}let xp=gg({opSnippet:ga+`
  return min(a, b);
`,packedOpSnippet:`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+gs+`
  return result;
`,cpuKernelImpl:my});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xc{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=cD(n),i=t.map(e=>e[0]).join(","),s=t.map((t,r)=>t[0]+e[r]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n),u="reflect"===r?0:1;if(1===n){this.userCode=`
        int start = ${i};
        int end = ${s};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${s});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${n}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xf{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=cD(n),i=t.map(e=>e[0]).join(","),s=t.map((t,r)=>t[0]+e[r]).join(","),o=mj("rc",n),u=mj("source",n),l=`${o[n-1]} < ${this.outputShape[n-1]}`,d=1===n?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===r?0:1,p="";if(1===n){let e=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${o[n-1]} += 1;
        if(${l}) {
          ${e}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{let e=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${a} rc = outputLoc;
        ${e}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${o[n-1]} += 1;
        if(${l}) {
          ${e}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${o[n-2]} += 1;
        if(${o[n-2]} < ${this.outputShape[n-2]}) {
          ${e}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${o[n-1]} += 1;
          if(${l}) {
            ${e}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${s});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}let xm=gg({opSnippet:`if (b == 0.0) return NAN;
  return mod(a, b);`,packedOpSnippet:`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+gs+`
  return result;
`});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xg{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}let xy=gg({opSnippet:`
if (a == b) {
  return 1.0;
};
return a / b;`,packedOpSnippet:`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,checkOutOfBounds:!0}),xx="return a - b;",xb=gg({opSnippet:xx,packedOpSnippet:xx,supportsComplex:!0,cpuKernelImpl:mz});function xv(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:i}=n,s=r9.parseAxisParam([i],a.shape),o=xu({inputs:{x:a},backend:r,attrs:{reductionIndices:s,keepDims:!1}}),u=sg.expandShapeToKeepDim(o.shape,s),l=gk({inputs:{x:o},backend:r,attrs:{shape:u}}),d=xb({inputs:{a:a,b:l},backend:r}),h=yB({inputs:{x:d},backend:r}),p=gR({inputs:{x:h},backend:r,attrs:{axis:s,keepDims:!1}}),c=gk({inputs:{x:p},backend:r,attrs:{shape:u}}),f=xy({inputs:{a:h,b:c},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(c),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xw=m0+`
  return -x;
`,xS=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,xk=p4.nonMaxSuppressionV3Impl,xC=p4.nonMaxSuppressionV4Impl,xI=p4.nonMaxSuppressionV5Impl;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xT{constructor(e,t,r,n){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${n}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(e){let{inputs:t,backend:r}=e,{x:n}=t;if("complex64"!==n.dtype)return yj({attrs:{shape:n.shape,dtype:n.dtype,value:"string"===n.dtype?"":0},backend:r});{let e=g8({inputs:{input:n},backend:r}),t=x$({inputs:{x:e},backend:r}),a=yo({inputs:{input:n},backend:r}),i=x$({inputs:{x:a},backend:r}),s=gl({inputs:{real:t,imag:i},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xN{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=cD(n),i=t.map(e=>e[0]).join(","),s=t.map((t,r)=>t[0]+e[r]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n);if(1===n){this.userCode=`
        int start = ${i};
        int end = ${s};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${i});
      ${a} end = ${a}(${s});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xE{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]);let n=e.length,a=cD(n),i=t.map(e=>e[0]).join(","),s=t.map((t,r)=>t[0]+e[r]).join(","),o=mj("rc",n),u=mj("source",n),l=`${o[n-1]} < ${this.outputShape[n-1]}`,d=1===n?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[n-1]} += 1;
       if(${l}) {
      `,1===n?"":`}
       rc = outputLoc;
       ${o[n-2]} += 1;
       if(${o[n-2]} < ${this.outputShape[n-2]}) {`,1===n?"":`  ${o[n-1]} += 1;
         if(${l}) {`],p=1===n?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===n?2:4;e<t;e++)c+=`
        ${h[e]}
        if (${p}) {
          result[${e}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${e}] = getChannel(getX(${u.join()}), ${d});
        }
      `;c+=1===n?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${i});
      const ${a} end = ${a}(${s});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}}let xR=e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:i,constantValue:s}=n;if(0===r9.sizeFromShape(a.shape))return yj({backend:r,attrs:{shape:i.map((e,t)=>e[0]+a.shape[t]+e[1]),value:s,dtype:a.dtype}});let o=ey.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xE(a.shape,i,s):new xN(a.shape,i,s),u=[[s]];return r.runWebGLProgram(o,[a],a.dtype,u)},xA=gg({opSnippet:`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,packedOpSnippet:`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+gs+`
  return result;
`}),x_=e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:i,dtype:s}=r,o=mI(n,a,i,s);return t.makeTensorInfo([o.length],s,o)},xO=gm({opSnippet:"return 1.0 / x;"}),xF=gm({opSnippet:m0+`
  return (x < 0.0) ? 0.0 : x;
`,packedOpSnippet:`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`}),xD=gm({opSnippet:m0+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,packedOpSnippet:`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xP{constructor(e,t,r,n,a){let i;this.variableNames=["A"],this.outputShape=[];let[s,o,u,l]=e;this.outputShape=[s,t,r,l];let d=[n&&t>1?o-1:o,n&&r>1?u-1:u],h=[n&&t>1?t-1:t,n&&r>1?r-1:r];i=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/h[0]},
          ${d[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${i};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xM{constructor(e,t,r,n,a){let i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,o,u,l]=e;this.outputShape=[s,t,r,l];let d=[n&&t>1?o-1:o,n&&r>1?u-1:u],h=[n&&t>1?t-1:t,n&&r>1?r-1:r];i=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/h[0]},
          ${d[1]/h[1]},
          ${d[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${i};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xL{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,i,s]=e,o=[r&&i>1?n-1:n,r&&s>1?a-1:a],u=[r&&i>1?i-1:i,r&&s>1?s-1:s],l=o[0]/u[0],d=o[1]/u[1],h=1/l,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${s}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${n-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xB{constructor(e,t,r,n,a){let i;this.variableNames=["A"],this.outputShape=[];let[s,o,u,l]=e;this.outputShape=[s,t,r,l];let d=[n&&t>1?o-1:o,n&&r>1?u-1:u],h=[n&&t>1?t-1:t,n&&r>1?r-1:r];i=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/h[0]},
          ${d[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${i};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xz{constructor(e,t,r,n,a){let i;this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,o,u,l]=e;this.outputShape=[s,t,r,l];let d=[n&&t>1?o-1:o,n&&r>1?u-1:u],h=[n&&t>1?t-1:t,n&&r>1?r-1:r];i=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/h[0]},
          ${d[1]/h[1]},
          ${d[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${i};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${n?"0.5":"0.0"})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xU{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,n,a]=t,[,i,s]=e,o=[r&&i>1?n-1:n,r&&s>1?a-1:a],u=[r&&i>1?i-1:i,r&&s>1?s-1:s],l=o[0]/u[0],d=o[1]/u[1],h=1/l,p=1/d,c=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${c});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${s}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${n}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xV{constructor(e,t){this.variableNames=["x"];let r=e.length;if(r>4)throw Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,1===r){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let n=r=>-1!==t.indexOf(r)&&1!==e[r]?`${e[r]} - coords[${r}] - 1`:`coords[${r}]`,a=e.map((e,t)=>n(t)).join(","),i=cD(r);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xW{constructor(e,t){var r,n,a;this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let i=e.length;if(i>4)throw Error(`WebGL backend: Reverse of rank-${i} tensor is not yet supported`);this.outputShape=e;let s=mj("rc",i),o=`${s[i-1]} + 1 < ${this.outputShape[i-1]}`,u=`${s[i-2]} + 1 < ${this.outputShape[i-2]}`,l=cD(i);function d(r){let n=e.map((n,a)=>-1!==t.indexOf(a)&&1!==e[a]?`${e[a]} - ${r[a]} - 1`:`${r[a]}`),a=n.join(","),i=n.slice(-2).join(",");return`getChannel(getX(${a}), vec2(${i}))`}1===i?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${d(s.slice())};
          if(${o}){
            result.g = ${(r=s.slice())[i-1]="("+r[i-1]+" + 1)",d(r)};
          }
          if(${u}) {
            result.b = ${(n=s.slice())[i-2]="("+n[i-2]+" + 1)",d(n)};
            if(${o}) {
              result.a = ${(a=s.slice())[i-1]="("+a[i-1]+" + 1)",a[i-2]="("+a[i-2]+" + 1)",d(a)};
            }
          }
          setOutput(result);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xG{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let r=e[1],n=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${n} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}let xH=gm({opSnippet:`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`}),xj=gm({opSnippet:"return inversesqrt(x);",cpuKernelImpl:mT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xK{constructor(e,t,r,n,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let u=cD(a.length),l=cD(i.length),d="";1===r?d="i":2===r&&(d="i, j");let h=`getIndices(${d})`,p="";1===n?p="i":2===n&&(p="i, coords[1]");let c=`getUpdates(${p})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${u} strides = ${u}(${a});

        void main() {
          ${l} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${h});
              flattenedIndex += index * ${t>1?"strides[j]":"strides"};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xq{constructor(e,t,r,n,a,i,s=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let u=cD(a.length),l=cD(i.length),d="";1===r?d="i":2===r&&(d="i, j");let h=`getIndices(${d})`,p="";1===n?p="i":2===n&&(p="i, coords[1]");let c=`getUpdates(${p})`,f="";o&&(f="coords[0], coords[1]");let m=`getDefaultValue(${f})`;this.userCode=`
        ${u} strides = ${u}(${a});

        void main() {
          ${l} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${h});
              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xX{constructor(e,t,r,n){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];let a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===ey.getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${"left"===n?"<":"<="} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xY{constructor(e,t,r){let n,a;if(this.variableNames=["c","a","b"],this.outputShape=t,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(1===r)a="resRC",n="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],s=[];for(let n=0;n<t.length;n++)s.push(`${r[n]}`),n<e&&i.push(`${r[n]}`);n=i.join(),a=s.join()}let i=cD(r);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${n});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}}let xQ=gm({opSnippet:`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${sg.SELU_SCALEALPHA};
  float scale = ${sg.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`}),xZ=gm({opSnippet:gf+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,packedOpSnippet:`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cpuKernelImpl:mN}),xJ=gm({opSnippet:`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`}),x0=gm({opSnippet:gf+`
  return sin(x);
`,packedOpSnippet:`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${gs}
  return result;
`}),x1=gm({opSnippet:`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`}),x2=gm({opSnippet:`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`}),x3="return sqrt(x);",x4=gm({opSnippet:x3,packedOpSnippet:x3,cpuKernelImpl:mF}),x6=gm({opSnippet:"return x * x;"}),x5="return (a - b) * (a - b);",x8=gg({opSnippet:x5,packedOpSnippet:x5});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x7{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;let n=r.length,a=cD(r.length),i=cD(r.length),s="";if(1===n)s="coords * strides + begin";else{let e=0;s=r.map((t,n)=>(e++,1===r.length?`coords * strides[${n}] + begin[${n}]`:`coords[${e-1}] * strides[${n}] + begin[${n}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}}let x9=gm({opSnippet:"return tan(x);"}),be=gm({opSnippet:`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bt{constructor(e,t){this.variableNames=["A"];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[n]*t[n];this.outputShape=r,this.rank=r.length;let n=cD(this.rank),a=function(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let r=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let t=0;t<e.length;t++)n.push(`imod(${r[t]}, ${e[t]})`);return n.join()}(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}}function br(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:i}=n;if("string"===a.dtype||a.shape.length>5){let e=r.readSync(a.dataId),t="string"===a.dtype?e.map(e=>r9.decodeString(e)):e,n=mU(iY(a.shape,a.dtype,t),i);return r.makeTensorInfo(n.shape,n.dtype,n.values)}let s=new bt(a.shape,i);return r.runWebGLProgram(s,[a],a.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bn{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class ba{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}function bi(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function bs(e){let t=1;for(;t<e;)t*=2;return t}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bo{constructor(e,t,r,n,a,i){let s;switch(this.variableNames=["Image","Transforms"],this.outputShape=i,n){case"constant":default:s=1;break;case"reflect":s=2;break;case"wrap":s=3;break;case"nearest":s=4}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${s} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${s} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${s} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${"nearest"===r?1:2} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bu{constructor(e,t){this.variableNames=["x","segmentIds"];let r=e.windowSize,n=e.batchSize,a=e.inSize,i=e.numSegments,s=i*Math.ceil(a/r);this.outputShape=[n,s];let o=4*Math.floor(r/4),u=r%4,l=`
        sumValue += dot(values, segFilter);
    `,d="";a%r>0&&(d=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let h="";a%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = 0.0;

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${l}
        }

        int inIdx = inOffset + ${o};
        if (${1===u}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${l}
        } else if (${2===u}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${l}
        } else if (${3===u}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${l}
        }
        setOutput(sumValue);
      }
    `}}for(let e of[{kernelName:rZ,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:d,leakyreluAlpha:h}=n;return g_({a:a,b:i,transposeA:u,transposeB:l,backend:r,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},{kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{x:a}=r;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){let e=mE(n.texData.get(a.dataId).values);return n.makeTensorInfo(a.shape,a.dtype,e)}return t=ey.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new m7(a.shape,gO):new mJ(a.shape,gO),n.runWebGLProgram(t,[a],a.dtype)}},{kernelName:e_,backendName:"webgl",kernelFunc:gF},{kernelName:eO,backendName:"webgl",kernelFunc:gD},{kernelName:"Add",backendName:"webgl",kernelFunc:gM},{kernelName:eF,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n}=t;if(1===r.length)return gu({inputs:{x:r[0]},backend:n});if(r.length>ey.getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let t=Math.floor(r.length/2),a=e({inputs:r.slice(0,t),backend:n}),i=e({inputs:r.slice(t),backend:n});return e({inputs:[a,i],backend:n})}let a=r.map(e=>e.dtype).reduce((e,t)=>n6(e,t)),i=r.map(e=>e.shape),s=ey.getBool("WEBGL_PACK")?new gB(r[0].shape,i):new gL(r[0].shape,i);return n.runWebGLProgram(s,r,a)}},{kernelName:"All",backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{axis:s,keepDims:o}=a,u=i.shape.length,l=r9.parseAxisParam(s,i.shape),d=l,h=sg.getAxesPermutation(d,u),p=i;null!=h&&(p=gA({inputs:{x:i},backend:n,attrs:{perm:h}}),d=sg.getInnerMostAxes(d.length,u)),sg.assertAxesAreInnerMostDims("all",d,u);let[c,f]=sg.computeOutAndReduceShapes(p.shape,d),m=gk({inputs:{x:p},backend:n,attrs:{shape:[-1,r9.sizeFromShape(f)]}}),g=gT(m,m.dtype,"all",n);return t=o?gk({inputs:{x:g},backend:n,attrs:{shape:sg.expandShapeToKeepDim(c,l)}}):gk({inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),t}},{kernelName:"Any",backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{axis:s,keepDims:o}=a,u=i.shape.length,l=r9.parseAxisParam(s,i.shape),d=l,h=sg.getAxesPermutation(d,u),p=i;null!=h&&(p=gA({inputs:{x:i},backend:n,attrs:{perm:h}}),d=sg.getInnerMostAxes(d.length,u)),sg.assertAxesAreInnerMostDims("any",d,u);let[c,f]=sg.computeOutAndReduceShapes(p.shape,d),m=gk({inputs:{x:p},backend:n,attrs:{shape:[-1,r9.sizeFromShape(f)]}}),g=gT(m,m.dtype,"any",n);return t=o?gk({inputs:{x:g},backend:n,attrs:{shape:sg.expandShapeToKeepDim(c,l)}}):gk({inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),t}},{kernelName:eD,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i}=n,s=r9.parseAxisParam(i,a.shape),o=sg.getAxesPermutation(s,a.shape.length),u=a,l=[];null!=o&&(l.push(u=gA({inputs:{x:a},backend:r,attrs:{perm:o}})),s=sg.getInnerMostAxes(s.length,u.shape.length)),sg.assertAxesAreInnerMostDims("argMax",[s[0]],u.shape.length);let d=gV(r,u,s[0],"max");return l.forEach(e=>r.disposeIntermediateTensorInfo(e)),d}},{kernelName:eP,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i}=n,s=r9.parseAxisParam(i,a.shape),o=sg.getAxesPermutation(s,a.shape.length),u=a,l=[];null!=o&&(l.push(u=gA({inputs:{x:a},backend:r,attrs:{perm:o}})),s=sg.getInnerMostAxes(s.length,u.shape.length)),sg.assertAxesAreInnerMostDims("argMin",[s[0]],u.shape.length);let d=gV(r,u,s[0],"min");return l.forEach(e=>r.disposeIntermediateTensorInfo(e)),d}},{kernelName:eM,backendName:"webgl",kernelFunc:gW},{kernelName:eL,backendName:"webgl",kernelFunc:gG},{kernelName:eB,backendName:"webgl",kernelFunc:gH},{kernelName:eU,backendName:"webgl",kernelFunc:gj},{kernelName:ez,backendName:"webgl",kernelFunc:gK},{kernelName:eV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;cb(a,"avgPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n;r9.assert(sg.eitherStridesOrDilationsAreOne(s,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let l=sg.computePool2DInfo(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&r9.arraysEqual(l.inShape,l.outShape))return gu({inputs:{x:a},backend:r});let d=new gq(l,"avg",!1);return r.runWebGLProgram(d,[a],"float32")}},{kernelName:eG,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u,dataFormat:l}=n,d=new gX(sg.computePool3DInfo(a.shape,i,s,[1,1,1],o,u,l),"avg",!1);return r.runWebGLProgram(d,[a],"float32")}},{kernelName:eH,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=n,d=new gQ(sg.computePool3DInfo(i.shape,s,o,[1,1,1],u,l));return r.runWebGLProgram(d,[a],i.dtype)}},{kernelName:eW,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i}=t;cb([a,i],"avgPoolGrad");let{filterSize:s,strides:o,pad:u}=n,l=new gY(sg.computePool2DInfo(i.shape,s,o,1,u));return r.runWebGLProgram(l,[a],i.dtype)}},{kernelName:ej,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=n;return g_({a:a,b:i,transposeA:s,transposeB:o,backend:r})}},{kernelName:tw,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n,mean:a,variance:i,offset:s,scale:o}=e;r9.assert(a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),r9.assert(null==s||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),r9.assert(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=r;null==u&&(u=.001);let l=[n,a,i],d=null;null!=s&&(d=s.shape,l.push(s));let h=null;null!=o&&(h=o.shape,l.push(o));let p=ey.getBool("WEBGL_PACK_NORMALIZATION")?new gJ(n.shape,a.shape,i.shape,d,h,u):new gZ(n.shape,a.shape,i.shape,d,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}},{kernelName:eK,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:i,crops:s}=n;r9.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=i.reduce((e,t)=>e*t),u=sg.getReshaped(a.shape,i,o),l=sg.getPermuted(u.length,i.length),d=sg.getReshapedPermuted(a.shape,i,o),h=sg.getSliceBeginCoords(s,i.length),p=sg.getSliceSize(d,s,i.length),c=[],f=gk({inputs:{x:a},backend:r,attrs:{shape:u}}),m=gA({inputs:{x:f},backend:r,attrs:{perm:l}}),g=gk({inputs:{x:m},backend:r,attrs:{shape:d}}),y=g3({inputs:{x:g},backend:r,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>r.disposeIntermediateTensorInfo(e)),y}},{kernelName:eq,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:i}=t,{size:s}=n,o=f8(r.readSync(a.dataId),r.readSync(i.dataId),i.dtype,i.shape,s);return r.makeTensorInfo([s],i.dtype,o)}},{kernelName:eX,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{a:a,b:i}=r,s=ey.getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=ey.getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,i])||1===o){let e=n.texData.get(a.dataId).values,t=n.texData.get(i.dataId).values,[r,s]=f9(a.shape,i.shape,e,t,a.dtype),o=n.makeTensorInfo(s,a.dtype);return n.texData.get(o.dataId).values=r,o}return t=s?new go(g4,a.shape,i.shape,!1):new gi(g6,a.shape,i.shape),n.runWebGLProgram(t,[a,i],a.dtype)}},{kernelName:eY,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t,i=r.readSync(n.dataId),s=r.readSync(a.dataId),o=sg.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},{kernelName:eQ,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n,attrs:a}=t,{x:i}=r,{dtype:s}=a;if("complex64"===s){if("complex64"===i.dtype)return gu({inputs:{x:i},backend:n});let t=l8(i.shape),r=e({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),a=gl({inputs:{real:r,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(r),a}if("complex64"===i.dtype){let t=g8({inputs:{input:i},backend:n}),r=e({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),r}if(!r9.hasEncodingLoss(i.dtype,s)){let e=gu({inputs:{x:i},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([i])){let[e,t,r]=me(n.texData.get(i.dataId).values,i.shape,i.dtype,s);return n.makeTensorInfo(e,t,r)}if("int32"===s)return function(e,t){let r=new mJ(e.shape,"return float(int(x));"),n=t.runWebGLProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}(i,n);if("bool"===s){let e=n.makeTensorInfo([],"bool",r9.getTypedArrayFromDType("bool",1)),t=g5({inputs:{a:i,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},{kernelName:eZ,backendName:"webgl",kernelFunc:g9},{kernelName:eJ,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{clipValueMin:s,clipValueMax:o}=a;return t=ey.getBool("WEBGL_PACK_CLIP")?new yt(i.shape):new ye(i.shape),n.runWebGLProgram(t,[i],i.dtype,[[s],[o]])}},{kernelName:e0,backendName:"webgl",kernelFunc:gl},{kernelName:e1,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=r.texData.get(n.dataId),i=new yr(n.shape),s=[yn(n,a.complexTensorInfos.real),yn(n,a.complexTensorInfos.imag)];return r.runWebGLProgram(i,s,s[0].dtype)}},{kernelName:e2,backendName:"webgl",kernelFunc:yu},{kernelName:e3,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s}=r,{strides:o,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}=a,p=sg.convertConv2DDataFormat(l),c=sg.computeConv2DInfo(i.shape,s.shape,o,d,u,h,!1,p);if(1===c.filterHeight&&1===c.filterWidth&&1===c.dilationHeight&&1===c.dilationWidth&&1===c.strideHeight&&1===c.strideWidth&&("SAME"===c.padInfo.type||"VALID"===c.padInfo.type))t=yf({x:i,filter:s,convInfo:c,backend:n});else if(c.strideWidth<=2&&"channelsLast"===p&&ey.getBool("WEBGL_EXP_CONV")){let e=new yh(c),r=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=n.runWebGLProgram(e,[i,s],"float32",r)}else if(ey.getBool("WEBGL_CONV_IM2COL"))t=ym({x:i,filter:s,convInfo:c,backend:n});else{let e=new yl(c);t=n.runWebGLProgram(e,[i,s],"float32")}let f=gk({inputs:{x:t},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(t),f}},{kernelName:e4,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:d}=n,h=sg.convertConv2DDataFormat(u),p=new yg(sg.computeConv2DInfo(a.shape,d,s,1,o,l,!1,h));return r.runWebGLProgram(p,[a,i],"float32")}},{kernelName:e6,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:i}=t,{inputShape:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:d}=n,h=sg.convertConv2DDataFormat(l),p=sg.computeConv2DInfo(s,i.shape,o,1,u,d,!1,h);if(ey.getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){let e=[[p.strideHeight,p.strideWidth]],t=new yv(p);return r.runWebGLProgram(t,[a,i],"float32",e)}{let e=new yy(p);return r.runWebGLProgram(e,[a,i],"float32")}}},{kernelName:e5,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=n,l=new yd(sg.computeConv3DInfo(a.shape,i.shape,s,u,o));return r.runWebGLProgram(l,[a,i],"float32")}},{kernelName:e8,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=n,l=new yx(sg.computeConv3DInfo(a.shape,u,s,1,o));return r.runWebGLProgram(l,[a,i],"float32")}},{kernelName:e7,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:i}=t,{pad:s,strides:o,inputShape:u}=n,l=new yb(sg.computeConv3DInfo(u,i.shape,o,1,s));return r.runWebGLProgram(l,[a,i],"float32")}},{kernelName:"Cos",backendName:"webgl",kernelFunc:yw},{kernelName:e9,backendName:"webgl",kernelFunc:yS},{kernelName:tr,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=n,d=new yk(a.shape,i.shape,o,u,l);return r.runWebGLProgram(d,[a,i,s],"float32")}},{kernelName:te,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=n;return y$(T4.Prod,a,r,i,s,o)}},{kernelName:tt,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=n;return y$(T4.Sum,a,r,i,s,o)}},{kernelName:tn,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=n;if(1===a.shape.length){let e=f8(r.readSync(a.dataId),r.readSync(i.dataId),i.dtype,i.shape,s);return r.makeTensorInfo([s],i.dtype,e)}if(2===a.shape.length){let e=f7(r.bufferSync(a),r.bufferSync(i),s,o);return r.makeTensorInfo(e.shape,i.dtype,e.values)}throw Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},{kernelName:ta,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:i,dataFormat:s}=n,o=a.shape[0],u="NHWC"===s?a.shape[1]:a.shape[2],l="NHWC"===s?a.shape[2]:a.shape[3],d="NHWC"===s?a.shape[3]:a.shape[1],h=u*i,p=l*i,c=d/(i*i),f=new yN("NHWC"===s?[o,h,p,c]:[o,c,h,p],i,s);return r.runWebGLProgram(f,[a],a.dtype)}},{kernelName:ti,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s}=r,{strides:o,pad:u,dilations:l,dimRoundingMode:d}=a,h=l;null==h&&(h=[1,1]),r9.assert(sg.eitherStridesOrDilationsAreOne(o,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`);let p=sg.computeConv2DInfo(i.shape,s.shape,o,h,u,d,!0);t=ey.getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new yR(p):new yE(p);let c=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(t,[i,s],"float32",c)}},{kernelName:ts,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:d}=n,h=new yA(sg.computeConv2DInfo(a.shape,d,s,o,u,l,!0));return r.runWebGLProgram(h,[a,i],"float32")}},{kernelName:to,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:d}=n,h=new y_(sg.computeConv2DInfo(d,i.shape,s,o,u,l,!0));return r.runWebGLProgram(h,[a,i],"float32")}},{kernelName:tu,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=[...n.shape,...n.shape],i=r9.sizeFromShape(n.shape),s=gk({inputs:{x:n},backend:r,attrs:{shape:[i]}}),o=new yO(i),u=r.runWebGLProgram(o,[s],s.dtype),l=gk({inputs:{x:u},backend:r,attrs:{shape:a}});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(u),l}},{kernelName:tl,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s}=r,{strides:o,pad:u,dilations:l}=a,d=sg.computeDilation2DInfo(i.shape,s.shape,o,u,"NHWC",l),h=new yF(d),p=gk({inputs:{x:t=n.runWebGLProgram(h,[i,s],"float32")},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(t),p}},{kernelName:tp,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,{allDims:i,summedDims:s,idDims:o}=sg.decodeEinsumEquation(a,t.length);sg.checkEinsumDimSizes(i.length,o,t);let{path:u,steps:l}=sg.getEinsumComputePath(s,o),d=l.length,h=null,p=i.length,c=[];for(let e=0;e<d;++e){for(let n of l[e]){let e;let{permutationIndices:a,expandDims:i}=sg.getEinsumPermutation(p,o[n]);sg.isIdentityPermutation(a)?e=t[n]:(e=gA({inputs:{x:t[n]},backend:r,attrs:{perm:a}}),c.push(e));let s=e.shape.slice();for(let e=0;e<i.length;++e)s.splice(i[e],0,1);r9.arraysEqual(e.shape,s)||(e=gk({inputs:{x:e},backend:r,attrs:{shape:s}}),c.push(e)),null===h?h=e:(h=gS({inputs:{a:e,b:h},backend:r}),c.push(h))}e<d-1&&(u[e]>=0&&(h=gR({inputs:{x:h},backend:r,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),c.push(h)),p--)}for(let e of c)e!==h&&r.disposeIntermediateTensorInfo(e);return h}},{kernelName:"Elu",backendName:"webgl",kernelFunc:yD},{kernelName:tc,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r}=e,{dy:n,y:a}=t,i=ey.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new go(yP,n.shape,a.shape):new gi("return (b >= 0.0) ? a : a * (b + 1.0);",n.shape,a.shape);return r.runWebGLProgram(i,[n,a],n.dtype)}},{kernelName:tf,backendName:"webgl",kernelFunc:yM},{kernelName:"Erf",backendName:"webgl",kernelFunc:yL},{kernelName:"Exp",backendName:"webgl",kernelFunc:yB},{kernelName:tm,backendName:"webgl",kernelFunc:yz},{kernelName:tg,backendName:"webgl",kernelFunc:yV},{kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t;return yG(n,!1,r)}},{kernelName:ty,backendName:"webgl",kernelFunc:yj},{kernelName:tx,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=new yK(r.shape);return t.runWebGLProgram(n,[r],r.dtype)}},{kernelName:tb,backendName:"webgl",kernelFunc:yX},{kernelName:tv,backendName:"webgl",kernelFunc:yY},{kernelName:rY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{pixels:a}=t,{numChannels:i}=n,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,d]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],h=[d,l],p=[d,l,i];if(u||o){let e=ey.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==s||e!==yJ)&&(yJ=e,s=document.createElement("canvas").getContext("2d",{willReadFrequently:yJ})),s.canvas.width=l,s.canvas.height=d,s.drawImage(a,0,0,l,d),a=s.canvas}let c=r.makeTensorInfo(h,"int32");r.texData.get(c.dataId).usage=T2.PIXELS,r.gpgpu.uploadPixelDataToTexture(r.getTexture(c.dataId),a);let f=ey.getBool("WEBGL_PACK")?new yZ(p):new yQ(p),m=r.runWebGLProgram(f,[c],"int32");return r.disposeData(c.dataId),m}},{kernelName:rJ,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s,bias:o,preluActivationWeights:u}=r,{strides:l,pad:d,dataFormat:h,dilations:p,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=a,g=sg.convertConv2DDataFormat(h),y=sg.computeConv2DInfo(i.shape,s.shape,l,p,d,c,!1,g),x=[],b=null!=o,v=null!=u,w="leakyrelu"===f,S=()=>{let e=[i,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=gk({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(b&&e.push(t(o,h)),v&&e.push(t(u,h)),w){let t=n.makeTensorInfo([],"float32",r9.createScalarValue(m,"float32"));e.push(t),x.push(t)}return e};if(1===y.filterHeight&&1===y.filterWidth&&1===y.dilationHeight&&1===y.dilationWidth&&1===y.strideHeight&&1===y.strideWidth&&("SAME"===y.padInfo.type||"VALID"===y.padInfo.type))t=yf({x:i,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else if(y.strideWidth<=2&&"channelsLast"===g&&ey.getBool("WEBGL_EXP_CONV")){let e=new yh(y,b,f?gy(f,!0):null,v,w),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],a=S();t=n.runWebGLProgram(e,a,"float32",r)}else if(ey.getBool("WEBGL_CONV_IM2COL"))t=ym({x:i,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{let e=new yl(y,b,f?gy(f,!1):null,v,w),r=S();t=n.runWebGLProgram(e,r,"float32")}let k=gk({inputs:{x:t},backend:n,attrs:{shape:y.outShape}});return x.push(t),x.forEach(e=>n.disposeIntermediateTensorInfo(e)),k}},{kernelName:r0,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s,bias:o,preluActivationWeights:u}=r,{strides:l,pad:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=a,m=[],g=h;null==g&&(g=[1,1]),r9.assert(sg.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let y=sg.computeConv2DInfo(i.shape,s.shape,l,g,d,p,!0),x=ey.getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,b=c?gy(c,x):null,v=[i,s],w=null!=o,S=null!=u,k="leakyrelu"===c;if(w&&v.push(o),S&&v.push(u),k){let e=n.makeTensorInfo([],"float32",r9.createScalarValue(f,"float32"));v.push(e),m.push(e)}t=x?new yR(y,w,b,S,k):new yE(y,w,b,S,k);let C=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],I=n.runWebGLProgram(t,v,"float32",C);return m.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}},{kernelName:tk,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,i=a.shape,s=i[i.length-1],o=r9.sizeFromShape(n.shape),[u,l,d,h]=sg.prepareAndValidate(n,a),p=gk({inputs:{x:a},backend:r,attrs:{shape:[l,s]}}),c=gk({inputs:{x:n},backend:r,attrs:{shape:[r9.sizeFromShape(n.shape)/d,d]}});if(r.shouldExecuteOnCPU([n,a])||"string"===n.dtype){let e=mo(r.readSync(a.dataId),r.bufferSync(n),n.dtype,l,s,d,h,n.shape,o);return r.makeTensorInfo(u,n.dtype,e.values)}let f=new y0(s,h,[l,d],n.shape),m=r.runWebGLProgram(f,[c,p],c.dtype),g=gk({inputs:{x:m},backend:r,attrs:{shape:u}});return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(m),g}},{kernelName:tS,backendName:"webgl",kernelFunc:y2},{kernelName:tC,backendName:"webgl",kernelFunc:y3},{kernelName:tI,backendName:"webgl",kernelFunc:y4},{kernelName:tT,backendName:"webgl",kernelFunc:gu},{kernelName:t$,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{input:n}=t;return yG(n,!0,r)}},{kernelName:tN,backendName:"webgl",kernelFunc:yo},{kernelName:tE,backendName:"webgl",kernelFunc:y6},{kernelName:tR,backendName:"webgl",kernelFunc:y5},{kernelName:tA,backendName:"webgl",kernelFunc:y8},{kernelName:t_,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:i}=n,s=r.makeTensorInfo([],"float32",r9.createScalarValue(i,"float32")),o=ey.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new go(gh,a.shape,s.shape):new gi(gd,a.shape,s.shape),u=r.runWebGLProgram(o,[a,s],"float32");return r.disposeIntermediateTensorInfo(s),u}},{kernelName:tO,backendName:"webgl",kernelFunc:y7},{kernelName:tF,backendName:"webgl",kernelFunc:y9},{kernelName:tD,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:i}=r,s=mc(n,a,i);return t.makeTensorInfo([s.length],"float32",s)}},{kernelName:"Log",backendName:"webgl",kernelFunc:xe},{kernelName:tP,backendName:"webgl",kernelFunc:xt},{kernelName:tM,backendName:"webgl",kernelFunc:xr},{kernelName:tL,backendName:"webgl",kernelFunc:xn},{kernelName:tB,backendName:"webgl",kernelFunc:xa},{kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{depthRadius:i,bias:s,alpha:o,beta:u}=n,l=ey.getBool("WEBGL_PACK_NORMALIZATION")?new xs(a.shape,i,s,o,u):new xi(a.shape,i,s,o,u);return r.runWebGLProgram(l,[a],a.dtype)}},{kernelName:tz,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:d}=n,h=new xo(a.shape,o,u,l,d);return r.runWebGLProgram(h,[a,i,s],a.dtype)}},{kernelName:"Max",backendName:"webgl",kernelFunc:xu},{kernelName:tU,backendName:"webgl",kernelFunc:xl},{kernelName:tV,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;cb(a,"maxPool");let{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n;r9.assert(sg.eitherStridesOrDilationsAreOne(s,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '1'`);let l=sg.computePool2DInfo(a.shape,i,s,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&r9.arraysEqual(l.inShape,l.outShape))return gu({inputs:{x:a},backend:r});let d=new gq(l,"max",!1);return r.runWebGLProgram(d,[a],a.dtype)}},{kernelName:tG,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:l}=n,d=new gX(sg.computePool3DInfo(a.shape,i,s,[1,1,1],o,l,u),"max",!1);return r.runWebGLProgram(d,[a],a.dtype)}},{kernelName:tH,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=n,d=sg.computePool3DInfo(i.shape,s,o,[1,1,1],u,l),h=new gX(d,"max",!0),p=r.runWebGLProgram(h,[i],i.dtype),c=new xh(d),f=r.runWebGLProgram(c,[a,p],i.dtype);return r.disposeIntermediateTensorInfo(p),f}},{kernelName:tW,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i,output:s}=t;cb([i,s],"maxPoolGrad");let{filterSize:o,strides:u,pad:l,dimRoundingMode:d}=n,h=sg.computePool2DInfo(i.shape,o,u,1,l,d),p=new gq(h,"max",!0),c=r.runWebGLProgram(p,[i],i.dtype),f=new xd(h),m=r.runWebGLProgram(f,[a,c],i.dtype);return r.disposeIntermediateTensorInfo(c),m}},{kernelName:tj,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=t;r9.assert(4===n.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];r9.assert(sg.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let l=sg.computePool2DInfo(n.shape,a,i,u,s),[d,h]=/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){let a=new gq(r,"max",!1),i=n.runWebGLProgram(a,[e],"float32");return a=new gq(r,"max",!0,!0,t),[i,n.runWebGLProgram(a,[e],"float32")]}(n,o,l,r);return[d,h]}},{kernelName:tK,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{keepDims:a,axis:i}=t,s=n.shape.length,o=r9.parseAxisParam(i,n.shape),u=o,l=sg.getAxesPermutation(u,s),d=null!=l,h=r.shouldExecuteOnCPU([n]),p=[],c=n;if(d){if(h){let e=r.texData.get(c.dataId).values,t=Array(s);for(let e=0;e<t.length;e++)t[e]=n.shape[l[e]];let a=mW(e,n.shape,n.dtype,l,t);c=r.makeTensorInfo(t,n.dtype),r.texData.get(c.dataId).values=a}else c=gE(n,l,r);p.push(c),u=sg.getInnerMostAxes(u.length,s)}sg.assertAxesAreInnerMostDims("sum",u,s);let[f,m]=sg.computeOutAndReduceShapes(c.shape,u),g=f;a&&(g=sg.expandShapeToKeepDim(f,o));let y=/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n){let a=r9.sizeFromShape(t),i=r9.sizeFromShape(e.shape),s=gk({inputs:{x:e},attrs:{shape:[i/a,a]},backend:n}),o=gT(s,"float32","mean",n),u=gk({inputs:{x:o},attrs:{shape:r},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),u}(c,m,g,r);for(let e of p)r.disposeIntermediateTensorInfo(e);return y}},{kernelName:"Min",backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{axis:s,keepDims:o}=a,u=i.shape.length,l=r9.parseAxisParam(s,i.shape),d=l,h=sg.getAxesPermutation(d,u),p=i;null!=h&&(p=gA({inputs:{x:i},backend:n,attrs:{perm:h}}),d=sg.getInnerMostAxes(d.length,i.shape.length)),sg.assertAxesAreInnerMostDims("min",d,u);let[c,f]=sg.computeOutAndReduceShapes(p.shape,d),m=gk({inputs:{x:p},backend:n,attrs:{shape:[-1,r9.sizeFromShape(f)]}}),g=gT(m,m.dtype,"min",n);return t=o?gk({inputs:{x:g},backend:n,attrs:{shape:sg.expandShapeToKeepDim(c,l)}}):gk({inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),t}},{kernelName:tq,backendName:"webgl",kernelFunc:xp},{kernelName:tX,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:r})=>{let{x:n}=e,{paddings:a,mode:i}=r,s=ey.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xf(n.shape,a,i):new xc(n.shape,a,i);return t.runWebGLProgram(s,[n],n.dtype)}},{kernelName:"Mod",backendName:"webgl",kernelFunc:xm},{kernelName:tY,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=n,u=o?a:xv({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),l=new xg(u.shape[0],u.shape[1],i),d=r.runWebGLProgram(l,[u],"int32",[[s]]);return o||r.disposeIntermediateTensorInfo(u),d}},{kernelName:tQ,backendName:"webgl",kernelFunc:gS},{kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n}=e,{x:a}=r;if(n.shouldExecuteOnCPU([a])){let[e,t]=mb(n.texData.get(a.dataId).values,a.shape,a.dtype);return n.makeTensorInfo(t,a.dtype,e)}return t=ey.getBool("WEBGL_PACK_UNARY_OPERATIONS")?new m7(a.shape,xS):new mJ(a.shape,xw),n.runWebGLProgram(t,[a],a.dtype)}},{kernelName:tJ,backendName:"webgl",kernelFunc:function(e){sg.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=n,{selectedIndices:l}=xk(r.readSync(a.dataId),r.readSync(i.dataId),s,o,u);return r.makeTensorInfo([l.length],"int32",new Int32Array(l))}},{kernelName:t0,backendName:"webgl",kernelFunc:function(e){sg.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=n,{selectedIndices:d,validOutputs:h}=xC(r.readSync(a.dataId),r.readSync(i.dataId),s,o,u,l);return[r.makeTensorInfo([d.length],"int32",new Int32Array(d)),r.makeTensorInfo([],"int32",new Int32Array([h]))]}},{kernelName:t1,backendName:"webgl",kernelFunc:function(e){sg.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=n,{selectedIndices:d,selectedScores:h}=xI(r.readSync(a.dataId),r.readSync(i.dataId),s,o,u,l);return[r.makeTensorInfo([d.length],"int32",new Int32Array(d)),r.makeTensorInfo([h.length],"float32",new Float32Array(h))]}},{kernelName:tZ,backendName:"webgl",kernelFunc:g5},{kernelName:t3,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=n,l=r9.sizeFromShape(a.shape),d=new xT(l,s,o,u),h=gk({inputs:{x:a},backend:r,attrs:{shape:[l]}}),p=r.runWebGLProgram(d,[h],i);r.disposeIntermediateTensorInfo(h);let c=gk({inputs:{x:p},backend:r,attrs:{shape:[...a.shape,s]}});return r.disposeIntermediateTensorInfo(p),c}},{kernelName:t2,backendName:"webgl",kernelFunc:function e(t){let{inputs:r,backend:n}=t,{x:a}=r;if("string"===a.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==a.dtype)return yj({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n});{let t=g8({inputs:{input:a},backend:n}),r=e({inputs:{x:t},backend:n}),i=yo({inputs:{input:a},backend:n}),s=x$({inputs:{x:i},backend:n}),o=gl({inputs:{real:r,imag:s},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(s),o}}},{kernelName:t4,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(1===t.length)return yz({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{r9.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r9.assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=yu({inputs:t.map(e=>{let t=yz({inputs:{input:e},backend:r,attrs:{dim:a}});return o.push(t),t}),backend:r,attrs:{axis:a}});return o.forEach(e=>r.disposeIntermediateTensorInfo(e)),u}},{kernelName:t6,backendName:"webgl",kernelFunc:xR},{kernelName:"Pow",backendName:"webgl",kernelFunc:xA},{kernelName:t5,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,i=ey.getBool("WEBGL_PACK_BINARY_OPERATIONS")?new go(gc,n.shape,a.shape):new gi(gp,n.shape,a.shape);return r.runWebGLProgram(i,[n,a],"float32")}},{kernelName:t8,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{axis:s,keepDims:o}=a,u=i.shape.length,l=[],d=r9.parseAxisParam(s,i.shape),h=d,p=sg.getAxesPermutation(h,u),c=i;if(null!=p&&(c=gA({inputs:{x:i},backend:n,attrs:{perm:p}}),h=sg.getInnerMostAxes(h.length,u),l.push(c)),sg.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([c])){let e=n.texData.get(c.dataId).values,{outVals:r,outShape:a,outDtype:i}=mw(c.shape,c.dtype,e,h);t=n.makeTensorInfo(a,i,r)}else{let[e,r]=sg.computeOutAndReduceShapes(c.shape,h),a=gk({inputs:{x:c},backend:n,attrs:{shape:[-1,r9.sizeFromShape(r)]}}),s=gT(a,n5(i.dtype),"prod",n);t=gk({inputs:{x:s},backend:n,attrs:{shape:e}}),l.push(a),l.push(s)}if(o){l.push(t);let e=sg.expandShapeToKeepDim(t.shape,d);t=gk({inputs:{x:t},backend:n,attrs:{shape:e}})}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),t}},{kernelName:t7,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{paramsNestedSplits:a,paramsDenseValues:i,indices:s}=t,{outputRaggedRank:o}=n,u=a.map(e=>r.readSync(e.dataId)),l=a.map(e=>e.shape),d=r.readSync(i.dataId),h=r.readSync(s.dataId),[p,c,f]=mS(u,l,d,i.shape,i.dtype,h,s.shape,o),m=p.map(e=>r.makeTensorInfo([e.length],"int32",e)),g=r.makeTensorInfo(f,i.dtype,c);return m.concat([g])}},{kernelName:t9,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{starts:n,limits:a,deltas:i}=t,s=r.readSync(n.dataId),o=r.readSync(a.dataId),u=r.readSync(i.dataId),[l,d]=mk(s,n.shape,n.dtype,o,a.shape,u,i.shape);return[r.makeTensorInfo([l.length],"int32",l),r.makeTensorInfo([d.length],n.dtype,d)]}},{kernelName:re,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{shape:a,values:i,defaultValue:s,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=n,l=r.readSync(a.dataId),d=r.readSync(i.dataId),h=r.readSync(s.dataId),p=o.map(e=>r.readSync(e.dataId)),c=o.map(e=>e.shape),[f,m]=mC(l,a.shape,d,i.shape,i.dtype,h,s.shape,p,c,u);return r.makeTensorInfo(f,i.dtype,m)}},{kernelName:rt,backendName:"webgl",kernelFunc:x_},{kernelName:rr,backendName:"webgl",kernelFunc:g8},{kernelName:th,backendName:"webgl",kernelFunc:xy},{kernelName:rn,backendName:"webgl",kernelFunc:xO},{kernelName:ra,backendName:"webgl",kernelFunc:xF},{kernelName:rd,backendName:"webgl",kernelFunc:xD},{kernelName:ri,backendName:"webgl",kernelFunc:gk},{kernelName:ru,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=n,[u,l]=o,d=ey.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xM(a.shape,u,l,i,s):new xP(a.shape,u,l,i,s);return r.runWebGLProgram(d,[a],"float32")}},{kernelName:rl,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:i}=t,{alignCorners:s}=n,o=new xL(i.shape,a.shape,s);return r.runWebGLProgram(o,[i],i.dtype)}},{kernelName:rs,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=n,[u,l]=o,d=ey.getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xz(a.shape,u,l,i,s):new xB(a.shape,u,l,i,s);return r.runWebGLProgram(d,[a],a.dtype)}},{kernelName:ro,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:i}=t,{alignCorners:s}=n,o=new xU(i.shape,a.shape,s);return r.runWebGLProgram(o,[i],i.dtype)}},{kernelName:rh,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:i}=n,s=a.shape.length,o=r9.parseAxisParam(i,a.shape);if(0===s)return gu({inputs:{x:a},backend:r});let u=ey.getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xW(a.shape,o):new xV(a.shape,o);return r.runWebGLProgram(u,[a],a.dtype)}},{kernelName:rQ,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:i,center:s}=t,o=new xG(n.shape,i),[u,l]=sg.getImageCenter(s,n.shape[1],n.shape[2]),d=[[u,l,Math.sin(a),Math.cos(a)]];return r.runWebGLProgram(o,[n],n.dtype,d)}},{kernelName:rp,backendName:"webgl",kernelFunc:xH},{kernelName:rc,backendName:"webgl",kernelFunc:xj},{kernelName:rf,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{indices:i,updates:s}=r,{shape:o}=a,{sliceRank:u,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=sg.calculateShapes(s,i,o),c=[p/d,d];if(0===p)return n.makeTensorInfo(o,i.dtype);let f=gk({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=gk({inputs:{x:s},backend:n,attrs:{shape:[l,d]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));t=ey.getBool("WEBGL_PACK")?new xq(l,u,f.shape.length,m.shape.length,h,c):new xK(l,u,f.shape.length,m.shape.length,h,c);let y=n.runWebGLProgram(t,[m,f,g],m.dtype),x=gk({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),x}},{kernelName:rg,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:i}=t,{side:s}=n,o=new xX(a.shape[0],a.shape[1],i.shape[1],s),u=[[a.shape[1]]];return r.runWebGLProgram(o,[a,i],"int32",u)}},{kernelName:ry,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:i}=t,s=new xY(n.shape.length,a.shape,a.shape.length);return r.runWebGLProgram(s,[n,a,i],n6(a.dtype,i.dtype))}},{kernelName:rx,backendName:"webgl",kernelFunc:xQ},{kernelName:rS,backendName:"webgl",kernelFunc:xZ},{kernelName:rw,backendName:"webgl",kernelFunc:xJ},{kernelName:"Sin",backendName:"webgl",kernelFunc:x0},{kernelName:rv,backendName:"webgl",kernelFunc:x1},{kernelName:rb,backendName:"webgl",kernelFunc:g3},{kernelName:r$,backendName:"webgl",kernelFunc:xv},{kernelName:rk,backendName:"webgl",kernelFunc:x2},{kernelName:rI,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:i,paddings:s}=n;r9.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=i.reduce((e,t)=>e*t),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);let l=[],d=xR({inputs:{x:a},backend:r,attrs:{paddings:u,constantValue:0}}),h=sg.getReshaped(d.shape,i,o,!1),p=sg.getPermuted(h.length,i.length,!1),c=sg.getReshapedPermuted(d.shape,i,o,!1),f=gk({inputs:{x:d},backend:r,attrs:{shape:h}}),m=gA({inputs:{x:f},backend:r,attrs:{perm:p}}),g=gk({inputs:{x:m},backend:r,attrs:{shape:c}});return l.push(d),l.push(f),l.push(m),l.forEach(e=>r.disposeIntermediateTensorInfo(e)),g}},{kernelName:rN,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{indices:n,values:a,denseShape:i,defaultValue:s}=t;if(1!==i.shape.length)throw Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(2!==n.shape.length)throw Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(1!==a.shape.length)throw Error(`Values must be a vector, saw:
         ${a.shape}`);if(0!==s.shape.length)throw Error(`Default value must be a scalar, saw:
        ${s.shape}`);let o=r.readSync(n.dataId),u=r.readSync(a.dataId),l=r.readSync(i.dataId),d=r.readSync(s.dataId)[0],[h,p,c,f,m]=mA(o,n.shape,n.dtype,u,a.dtype,l,d);return[r.makeTensorInfo(p,n.dtype,h),r.makeTensorInfo([p[0]],a.dtype,c),r.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),r.makeTensorInfo([m.length],n.dtype,new Int32Array(m))]}},{kernelName:rE,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{inputIndices:n,inputShape:a,newShape:i}=t;if(2!==n.shape.length)throw Error(`Input indices should be a matrix but received shape ${n.shape}`);if(1!==a.shape.length)throw Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==i.shape.length)throw Error(`Target shape should be a vector but received shape ${i.shape}`);let s=Array.from(r.readSync(a.dataId)),o=r.readSync(n.dataId),u=Array.from(r.readSync(i.dataId)),[l,d,h]=m_(o,n.shape,n.dtype,s,u);return[r.makeTensorInfo(d,n.dtype,l),r.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}},{kernelName:rR,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:i}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
              ${a.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
              ${i.shape}`);let s=r.readSync(n.dataId),o=r.readSync(a.dataId),u=r.readSync(i.dataId),[l,d]=mO(s,n.shape,n.dtype,o,u,!0);return r.makeTensorInfo(d,n.dtype,l)}},{kernelName:rA,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:i}=t;if(n.shape.length<1)throw Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw Error(`Indices should be a vector but received shape
             ${a.shape}`);if(1!==i.shape.length)throw Error(`Segment ids should be a vector but received shape
             ${i.shape}`);let s=r.readSync(n.dataId),o=r.readSync(a.dataId),u=r.readSync(i.dataId),[l,d]=mO(s,n.shape,n.dtype,o,u);return r.makeTensorInfo(d,n.dtype,l)}},{kernelName:r_,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=sg.calculateShapes(i,a,o);if("string"===i.dtype){let e=m$(r.bufferSync(a),r.bufferSync(i),o,p,d,l,u,h,r9.decodeString(r.readSync(s.dataId)[0]),!1);return r.makeTensorInfo(o,e.dtype,e.values)}let c=new xK(l,u,a.shape.length,i.shape.length,h,[p,1],!1),f=r.runWebGLProgram(c,[i,a,s],i.dtype),m=gk({inputs:{x:f},backend:r,attrs:{shape:o}});return r.disposeIntermediateTensorInfo(f),m}},{kernelName:rT,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=n,o=r9.parseAxisParam(s,a.shape)[0],u=sg.prepareSplitSize(a,i,o),l=Array(a.shape.length).fill(0),d=a.shape.slice();return u.map(e=>{let t=[...d];t[o]=e;let n=g3({inputs:{x:a},backend:r,attrs:{begin:l,size:t}});return l[o]+=e,n})}},{kernelName:rC,backendName:"webgl",kernelFunc:x4},{kernelName:rF,backendName:"webgl",kernelFunc:x6},{kernelName:rO,backendName:"webgl",kernelFunc:x8},{kernelName:rD,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t;if("string"!==a.dtype)throw Error("Input must be of datatype string");let i=r.readSync(a.dataId),s=mD(sg.fromUint8ToStringArray(i),"string",n);return r.makeTensorInfo(a.shape,"string",s)}},{kernelName:rX,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function({inputs:e,attrs:t,backend:r}){let{x:n}=e,a=m0+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,i=new mJ(n.shape,a);return r.runWebGLProgram(i,[n],n.dtype)}},{kernelName:rP,backendName:"webgl",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{begin:s,end:o,strides:u,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:b,end:v,strides:w}=on.sliceInfo(i.shape,s,o,u,l,d,h,p,c);if(g)t=gk({inputs:{x:i},backend:n,attrs:{shape:m}});else if(y||x){r9.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=on.computeOutShape(b,v,w),r=g3({inputs:{x:i},backend:n,attrs:{begin:b,size:e}});t=gk({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(r)}else if(n.shouldExecuteOnCPU([i])){let e=n.readSync(i.dataId),r=mP(f,iY(i.shape,i.dtype,e),w,b);t=n.makeTensorInfo(m,i.dtype,r.values)}else{let e=new x7(b,w,f);t=n.runWebGLProgram(e,[i],i.dtype)}let S=gk({inputs:{x:t},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(t),S}},{kernelName:rM,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=n,{data:d,dataSplits:h}=t,[p,c]=mM(r.readSync(d.dataId),r.readSync(h.dataId),a,i,s,o,u,l);return[r.makeTensorInfo([p.length],"string",p),r.makeTensorInfo(h.shape,"int32",c)]}},{kernelName:rL,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{skipEmpty:a}=n,{input:i,delimiter:s}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(1!==i.shape.length)throw Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==s.shape.length)throw Error(`Delimiter must be a scalar, got shape: ${s.shape}`);let[o,u,l]=mL(r.readSync(i.dataId),r.readSync(s.dataId)[0],a),d=u.length;return[r.makeTensorInfo([d,2],"int32",o),r.makeTensorInfo([d],"string",u),r.makeTensorInfo([2],"int32",new Int32Array(l))]}},{kernelName:rB,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{numBuckets:a}=n,{input:i}=t;if("string"!==i.dtype)throw Error("Input must be of datatype string");if(a<=0)throw Error("Number of buckets must be at least 1");let s=mB(r.readSync(i.dataId),a);return r.makeTensorInfo(i.shape,"int32",s)}},{kernelName:"Sub",backendName:"webgl",kernelFunc:xb},{kernelName:"Sum",backendName:"webgl",kernelFunc:gR},{kernelName:"Tan",backendName:"webgl",kernelFunc:x9},{kernelName:rz,backendName:"webgl",kernelFunc:be},{kernelName:rm,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{tensor:a,indices:i,updates:s}=t,{}=n,{sliceRank:o,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=sg.calculateShapes(s,i,a.shape),p=[h/l,l];if(0===h)return r.makeTensorInfo(a.shape,i.dtype);let c=gk({inputs:{x:i},backend:r,attrs:{shape:[u,o]}}),f=gk({inputs:{x:s},backend:r,attrs:{shape:[u,l]}}),m=gk({inputs:{x:a},backend:r,attrs:{shape:p}}),g=new xK(u,o,c.shape.length,f.shape.length,d,p,!1,!0),y=r.runWebGLProgram(g,[f,c,m],m.dtype),x=gk({inputs:{x:y},backend:r,attrs:{shape:a.shape}});return r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),x}},{kernelName:rU,backendName:"webgl",kernelFunc:br},{kernelName:rV,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:i,sorted:s}=n,o=ey.getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=ey.getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,d=l[l.length-1];if(r.shouldExecuteOnCPU([a])||d<o||i>u){let[e,t]=mV(r.readSync(a.dataId),l,a.dtype,i,s);return[r.makeTensorInfo(e.shape,e.dtype,e.values),r.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===i)return l[l.length-1]=0,[r.makeTensorInfo(l,a.dtype,[]),r.makeTensorInfo(l,"int32",[])];if(1===d)return[a,yj({attrs:{shape:l,dtype:"int32",value:0},backend:r})];let h=r.texData.get(a.dataId),p=null!==h&&h.isPacked,c=p?r.unpackTensor(a):a,f=r9.sizeFromShape(l)/d,m=gk({inputs:{x:c},attrs:{shape:[f,d]},backend:r});p&&bi(r,c);let g=bs(i),y=bs(d),x=null,b=()=>null===x?[m,m]:[m,x],v=(e,t,n)=>{let a=b(),i=new bn(n),s=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=r.runWebGLProgram(i,a,"int32",s),bi(r,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let r=e;r>=1;r/=2)v(t,r,[f,y])}for(let e=y;e>g;e/=2){let t=b(),n=new ba([f,e/2]),a=[[d],[null===x?1:0],[g]],i=x;x=r.runWebGLProgram(n,t,"int32",a),bi(r,i);let s=g/2,o=2*s;for(let e=s;e>=1;e/=2)v(o,e,x.shape)}let w=x;x=g3({inputs:{x:x},backend:r,attrs:{begin:0,size:[f,i]}}),bi(r,w);let S=y2({inputs:{x:m,indices:x},backend:r,attrs:{axis:1,batchDims:1}});bi(r,m);let k=l.slice(0,-1);k.push(i),w=x,x=gk({inputs:{x:x},attrs:{shape:k},backend:r}),bi(r,w);let C=S;return S=gk({inputs:{x:S},attrs:{shape:k},backend:r}),bi(r,C),[S,x]}},{kernelName:rW,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{image:a,transforms:i}=t,{interpolation:s,fillMode:o,fillValue:u,outputShape:l}=n,[d,h,p,c]=a.shape,[f,m]=null!=l?l:[h,p],g=new bo(h,p,s,o,u,[d,f,m,c]);return r.runWebGLProgram(g,[a,i],"float32")}},{kernelName:rG,backendName:"webgl",kernelFunc:gA},{kernelName:rH,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,attrs:r,backend:n}=e,{axis:a}=r,{x:i}=t;cb(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let{outputValues:s,outputShape:o,indices:u}=mG(n.readSync(i.dataId),a,i.shape,i.dtype);return[n.makeTensorInfo(o,i.dtype,s),n.makeTensorInfo([u.length],"int32",u)]}},{kernelName:rj,backendName:"webgl",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:i}=n;i<0&&(i+=a.shape.length);let s=a.shape.length,o=a.shape[i],u=Array(s-1),l=0;for(let e=0;e<s;e++)e!==i&&(u[l++]=a.shape[e]);let d=[],h=Array(s).fill(0),p=a.shape.slice();p[i]=1;let c=Array(o);for(let e=0;e<c.length;e++){h[i]=e;let t=g3({inputs:{x:a},backend:r,attrs:{begin:h,size:p}}),n=gk({inputs:{x:t},backend:r,attrs:{shape:u}});c[e]=n,d.push(t)}return d.forEach(e=>r.disposeIntermediateTensorInfo(e)),c}},{kernelName:rK,backendName:"webgl",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:i}=t,{numSegments:s}=n,o=a.shape.length,u=[],l=0,d=sg.getAxesPermutation([l],o),h=a;null!=d&&(h=gA({inputs:{x:a},backend:r,attrs:{perm:d}}),u.push(h),l=sg.getInnerMostAxes(1,o)[0]);let p=sg.segment_util.computeOutShape(h.shape,l,s),c=r9.sizeFromShape([h.shape[l]]),f=gk({inputs:{x:h},backend:r,attrs:{shape:[-1,c]}});u.push(f);let m=n5(a.dtype),g=(e,t,n,a,i)=>{let s=e.shape[0],o=e.shape[1],l=sg.segment_util.segOpComputeOptimalWindowSize(o,i),d=new bu({windowSize:l,inSize:o,batchSize:s,numSegments:i},t),h=r.compileAndRun(d,[e,n],a);if(u.push(h),h.shape[1]===i)return h;let p=x_({backend:r,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),c=br({inputs:{x:p},backend:r,attrs:{reps:[o/l]}});return u.push(p),u.push(c),g(h,t,c,a,i)},y=gk({inputs:{x:g(f,"unsortedSegmentSum",i,m,s)},backend:r,attrs:{shape:p}}),x=y;return null!=d&&(u.push(y),x=gA({inputs:{x:x},backend:r,attrs:{perm:sg.getUndoAxesPermutation(d)}})),u.forEach(e=>r.disposeIntermediateTensorInfo(e)),x}},{kernelName:rq,backendName:"webgl",kernelFunc:x$}])r7(e);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var bl={};(function(){function e(e){var t=0;return function(){return t<e.length?{done:!1,value:e[t++]}:{done:!0}}}var t,r="function"==typeof Object.defineProperties?Object.defineProperty:function(e,t,r){return e==Array.prototype||e==Object.prototype||(e[t]=r.value),e},n=function(e){e=["object"==typeof globalThis&&globalThis,e,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof h&&h];for(var t=0;t<e.length;++t){var r=e[t];if(r&&r.Math==Math)return r}throw Error("Cannot find global object")}(this);function a(e,t){if(t)e:{var a=n;e=e.split(".");for(var i=0;i<e.length-1;i++){var s=e[i];if(!(s in a))break e;a=a[s]}(t=t(i=a[e=e[e.length-1]]))!=i&&null!=t&&r(a,e,{configurable:!0,writable:!0,value:t})}}function i(t){var r="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return r?r.call(t):{next:e(t)}}function s(e){if(!(e instanceof Array)){e=i(e);for(var t,r=[];!(t=e.next()).done;)r.push(t.value);e=r}return e}a("Symbol",function(e){function t(e,t){this.h=e,r(this,"description",{configurable:!0,writable:!0,value:t})}if(e)return e;t.prototype.toString=function(){return this.h};var n="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",a=0;return function e(r){if(this instanceof e)throw TypeError("Symbol is not a constructor");return new t(n+(r||"")+"_"+a++,r)}}),a("Symbol.iterator",function(t){if(t)return t;t=Symbol("Symbol.iterator");for(var a="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),i=0;i<a.length;i++){var s=n[a[i]];"function"==typeof s&&"function"!=typeof s.prototype[t]&&r(s.prototype,t,{configurable:!0,writable:!0,value:function(){var t;return(t={next:t=e(this)})[Symbol.iterator]=function(){return this},t}})}return t});var o="function"==typeof Object.assign?Object.assign:function(e,t){for(var r=1;r<arguments.length;r++){var n=arguments[r];if(n)for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};a("Object.assign",function(e){return e||o});var u,l,d="function"==typeof Object.create?Object.create:function(e){function t(){}return t.prototype=e,new t};if("function"==typeof Object.setPrototypeOf)l=Object.setPrototypeOf;else{e:{var p={};try{p.__proto__={a:!0},J=p.a;break e}catch(e){}J=!1}l=J?function(e,t){if(e.__proto__=t,e.__proto__!==t)throw TypeError(e+" is not extensible");return e}:null}var c=l;function f(e,t){if(e.prototype=d(t.prototype),e.prototype.constructor=e,c)c(e,t);else for(var r in t)if("prototype"!=r){if(Object.defineProperties){var n=Object.getOwnPropertyDescriptor(t,r);n&&Object.defineProperty(e,r,n)}else e[r]=t[r]}e.za=t.prototype}function m(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function g(e){if(e.m)throw TypeError("Generator is already running");e.m=!0}function y(e,t){e.l={ma:t,na:!0},e.h=e.s||e.v}function x(e,t,r){return e.h=r,{value:t}}function b(e){this.h=new m,this.i=e}function v(e,t,r,n){try{var a=t.call(e.h.j,r);if(!(a instanceof Object))throw TypeError("Iterator result "+a+" is not an object");if(!a.done)return e.h.m=!1,a;var i=a.value}catch(t){return e.h.j=null,y(e.h,t),w(e)}return e.h.j=null,n.call(e.h,i),w(e)}function w(e){for(;e.h.h;)try{var t=e.i(e.h);if(t)return e.h.m=!1,{value:t.value,done:!1}}catch(t){e.h.i=void 0,y(e.h,t)}if(e.h.m=!1,e.h.l){if(t=e.h.l,e.h.l=null,t.na)throw t.ma;return{value:t.return,done:!0}}return{value:void 0,done:!0}}function S(e){this.next=function(t){return g(e.h),e.h.j?t=v(e,e.h.j.next,t,e.h.u):(e.h.u(t),t=w(e)),t},this.throw=function(t){return g(e.h),e.h.j?t=v(e,e.h.j.throw,t,e.h.u):(y(e.h,t),t=w(e)),t},this.return=function(t){var r;return g(e.h),(r=e.h.j)?v(e,"return"in r?r.return:function(e){return{value:e,done:!0}},t,e.h.return):(e.h.return(t),w(e))},this[Symbol.iterator]=function(){return this}}function k(e){return function(e){function t(t){return e.next(t)}function r(t){return e.throw(t)}return new Promise(function(n,a){!function e(i){i.done?n(i.value):Promise.resolve(i.value).then(t,r).then(e,a)}(e.next())})}(new S(new b(e)))}function C(e){return e||Array.prototype.fill}m.prototype.u=function(e){this.i=e},m.prototype.return=function(e){this.l={return:e},this.h=this.v},a("Promise",function(e){function t(e){this.i=0,this.j=void 0,this.h=[],this.u=!1;var t=this.l();try{e(t.resolve,t.reject)}catch(e){t.reject(e)}}function r(){this.h=null}function a(e){return e instanceof t?e:new t(function(t){t(e)})}if(e)return e;r.prototype.i=function(e){if(null==this.h){this.h=[];var t=this;this.j(function(){t.m()})}this.h.push(e)};var s=n.setTimeout;r.prototype.j=function(e){s(e,0)},r.prototype.m=function(){for(;this.h&&this.h.length;){var e=this.h;this.h=[];for(var t=0;t<e.length;++t){var r=e[t];e[t]=null;try{r()}catch(e){this.l(e)}}}this.h=null},r.prototype.l=function(e){this.j(function(){throw e})},t.prototype.l=function(){function e(e){return function(n){r||(r=!0,e.call(t,n))}}var t=this,r=!1;return{resolve:e(this.I),reject:e(this.m)}},t.prototype.I=function(e){if(e===this)this.m(TypeError("A Promise cannot resolve to itself"));else if(e instanceof t)this.L(e);else{switch(typeof e){case"object":var r=null!=e;break;case"function":r=!0;break;default:r=!1}r?this.F(e):this.s(e)}},t.prototype.F=function(e){var t=void 0;try{t=e.then}catch(e){this.m(e);return}"function"==typeof t?this.M(t,e):this.s(e)},t.prototype.m=function(e){this.v(2,e)},t.prototype.s=function(e){this.v(1,e)},t.prototype.v=function(e,t){if(0!=this.i)throw Error("Cannot settle("+e+", "+t+"): Promise already settled in state"+this.i);this.i=e,this.j=t,2===this.i&&this.K(),this.H()},t.prototype.K=function(){var e=this;s(function(){if(e.D()){var t=n.console;void 0!==t&&t.error(e.j)}},1)},t.prototype.D=function(){if(this.u)return!1;var e=n.CustomEvent,t=n.Event,r=n.dispatchEvent;return void 0===r||("function"==typeof e?e=new e("unhandledrejection",{cancelable:!0}):"function"==typeof t?e=new t("unhandledrejection",{cancelable:!0}):(e=n.document.createEvent("CustomEvent")).initCustomEvent("unhandledrejection",!1,!0,e),e.promise=this,e.reason=this.j,r(e))},t.prototype.H=function(){if(null!=this.h){for(var e=0;e<this.h.length;++e)o.i(this.h[e]);this.h=null}};var o=new r;return t.prototype.L=function(e){var t=this.l();e.T(t.resolve,t.reject)},t.prototype.M=function(e,t){var r=this.l();try{e.call(t,r.resolve,r.reject)}catch(e){r.reject(e)}},t.prototype.then=function(e,r){function n(e,t){return"function"==typeof e?function(t){try{a(e(t))}catch(e){i(e)}}:t}var a,i,s=new t(function(e,t){a=e,i=t});return this.T(n(e,a),n(r,i)),s},t.prototype.catch=function(e){return this.then(void 0,e)},t.prototype.T=function(e,t){function r(){switch(n.i){case 1:e(n.j);break;case 2:t(n.j);break;default:throw Error("Unexpected state: "+n.i)}}var n=this;null==this.h?o.i(r):this.h.push(r),this.u=!0},t.resolve=a,t.reject=function(e){return new t(function(t,r){r(e)})},t.race=function(e){return new t(function(t,r){for(var n=i(e),s=n.next();!s.done;s=n.next())a(s.value).T(t,r)})},t.all=function(e){var r=i(e),n=r.next();return n.done?a([]):new t(function(e,t){var i=[],s=0;do i.push(void 0),s++,a(n.value).T(function(t){return function(r){i[t]=r,0==--s&&e(i)}}(i.length-1),t),n=r.next();while(!n.done)})},t}),a("Array.prototype.keys",function(e){return e||function(){var e,t,r,n,a;return e=this,t=function(e){return e},e instanceof String&&(e+=""),r=0,n=!1,(a={next:function(){if(!n&&r<e.length){var a=r++;return{value:t(a,e[a]),done:!1}}return n=!0,{done:!0,value:void 0}}})[Symbol.iterator]=function(){return a},a}}),a("Array.prototype.fill",function(e){return e||function(e,t,r){var n=this.length||0;for(0>t&&(t=Math.max(0,n+t)),(null==r||r>n)&&(r=n),0>(r=Number(r))&&(r=Math.max(0,n+r)),t=Number(t||0);t<r;t++)this[t]=e;return this}}),a("Int8Array.prototype.fill",C),a("Uint8Array.prototype.fill",C),a("Uint8ClampedArray.prototype.fill",C),a("Int16Array.prototype.fill",C),a("Uint16Array.prototype.fill",C),a("Int32Array.prototype.fill",C),a("Uint32Array.prototype.fill",C),a("Float32Array.prototype.fill",C),a("Float64Array.prototype.fill",C),a("Object.is",function(e){return e||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}}),a("Array.prototype.includes",function(e){return e||function(e,t){var r=this;r instanceof String&&(r=String(r));var n=r.length;for(0>(t=t||0)&&(t=Math.max(t+n,0));t<n;t++){var a=r[t];if(a===e||Object.is(a,e))return!0}return!1}}),a("String.prototype.includes",function(e){return e||function(e,t){if(null==this)throw TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(e instanceof RegExp)throw TypeError("First argument to String.prototype.includes must not be a regular expression");return -1!==this.indexOf(e,t||0)}});var I=this||self;function T(e,t){e=e.split(".");var r,n=I;for((e[0]in n)||void 0===n.execScript||n.execScript("var "+e[0]);e.length&&(r=e.shift());)e.length||void 0===t?n=n[r]&&n[r]!==Object.prototype[r]?n[r]:n[r]={}:n[r]=t}function $(e){var t;return(t=I.navigator)&&(t=t.userAgent)||(t=""),-1!=t.indexOf(e)}var N=Array.prototype.map?function(e,t){return Array.prototype.map.call(e,t,void 0)}:function(e,t){for(var r=e.length,n=Array(r),a="string"==typeof e?e.split(""):e,i=0;i<r;i++)i in a&&(n[i]=t.call(void 0,a[i],i,e));return n},E={},R=null;function A(){if(!R){R={};for(var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),t=["+/=","+/","-_=","-_.","-_"],r=0;5>r;r++){var n=e.concat(t[r].split(""));E[r]=n;for(var a=0;a<n.length;a++){var i=n[a];void 0===R[i]&&(R[i]=a)}}}}var _="undefined"!=typeof Uint8Array,O=!($("Trident")||$("MSIE"))&&"function"==typeof I.btoa;function F(e){if(!O){var t;void 0===t&&(t=0),A(),t=E[t];for(var r=Array(Math.floor(e.length/3)),n=t[64]||"",a=0,i=0;a<e.length-2;a+=3){var s=e[a],o=e[a+1],u=e[a+2],l=t[s>>2];s=t[(3&s)<<4|o>>4],o=t[(15&o)<<2|u>>6],u=t[63&u],r[i++]=l+s+o+u}switch(l=0,u=n,e.length-a){case 2:u=t[(15&(l=e[a+1]))<<2]||n;case 1:e=e[a],r[i]=t[e>>2]+t[(3&e)<<4|l>>4]+u+n}return r.join("")}for(t="";10240<e.length;)t+=String.fromCharCode.apply(null,e.subarray(0,10240)),e=e.subarray(10240);return btoa(t+=String.fromCharCode.apply(null,e))}var D=RegExp("[-_.]","g");function P(e){switch(e){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function M(e){if(!O){var t,r,n,a,i;return(n=3*(r=(t=e).length)/4)%3?n=Math.floor(n):-1!="=.".indexOf(t[r-1])&&(n=-1!="=.".indexOf(t[r-2])?n-2:n-1),a=new Uint8Array(n),i=0,function(e,t){function r(t){for(;n<e.length;){var r=e.charAt(n++),a=R[r];if(null!=a)return a;if(!/^[\s\xa0]*$/.test(r))throw Error("Unknown base64 encoding at char: "+r)}return t}A();for(var n=0;;){var a=r(-1),i=r(0),s=r(64),o=r(64);if(64===o&&-1===a)break;t(a<<2|i>>4),64!=s&&(t(i<<4&240|s>>2),64!=o&&t(s<<6&192|o))}}(t,function(e){a[i++]=e}),i!==n?a.subarray(0,i):a}D.test(e)&&(e=e.replace(D,P)),e=atob(e);for(var s=new Uint8Array(e.length),o=0;o<e.length;o++)s[o]=e.charCodeAt(o);return s}function L(){return ee||(ee=new Uint8Array(0))}var B={},z="function"==typeof Uint8Array.prototype.slice,U=0,V=0;function W(e){var t=0>e,r=(e=Math.abs(e))>>>0;e=Math.floor((e-r)/4294967296),t&&(t=(r=i(H(r,e))).next().value,e=r.next().value,r=t),U=r>>>0,V=e>>>0}var G="function"==typeof BigInt;function H(e,t){return t=~t,e?e=~e+1:t+=1,[e,t]}function j(e,t){this.i=e>>>0,this.h=t>>>0}function K(e){if(!e)return et||(et=new j(0,0));if(!/^-?\d+$/.test(e))return null;if(16>e.length)W(Number(e));else if(G)U=Number((e=BigInt(e))&BigInt(4294967295))>>>0,V=Number(e>>BigInt(32)&BigInt(4294967295));else{var t=+("-"===e[0]);V=U=0;for(var r=e.length,n=t,a=(r-t)%6+t;a<=r;n=a,a+=6)n=Number(e.slice(n,a)),V*=1e6,4294967296<=(U=1e6*U+n)&&(V+=U/4294967296|0,U%=4294967296);t&&(e=(t=i(H(U,V))).next().value,t=t.next().value,U=e,V=t)}return new j(U,V)}function q(e,t){return Error("Invalid wire type: "+e+" (at position "+t+")")}function X(){return Error("Failed to read varint, encoding is invalid.")}function Y(e,t){return Error("Tried to read past the end of the data "+t+" > "+e)}function Q(){throw Error("Invalid UTF8")}function Z(e,t){return t=String.fromCharCode.apply(null,t),null==e?t:e+t}var J,ee,et,er,en,ea=void 0,ei="undefined"!=typeof TextDecoder,es="undefined"!=typeof TextEncoder;function eo(e){if(e!==B)throw Error("illegal external caller")}function eu(e,t){if(eo(t),this.V=e,null!=e&&0===e.length)throw Error("ByteString should be constructed with non-empty values")}function el(){return eF||(eF=new eu(null,B))}function ed(e){eo(B);var t=e.V;return null==(t=null==t||_&&null!=t&&t instanceof Uint8Array?t:"string"==typeof t?M(t):null)?t:e.V=t}function eh(e,t){this.i=null,this.m=!1,this.h=this.j=this.l=0,ep(this,e,t)}function ep(e,t,r){r=void 0===r?{}:r,e.S=void 0!==r.S&&r.S,t&&(t=function(e){if("string"==typeof e)return{buffer:M(e),C:!1};if(Array.isArray(e))return{buffer:new Uint8Array(e),C:!1};if(e.constructor===Uint8Array)return{buffer:e,C:!1};if(e.constructor===ArrayBuffer)return{buffer:new Uint8Array(e),C:!1};if(e.constructor===eu)return{buffer:ed(e)||L(),C:!0};if(e instanceof Uint8Array)return{buffer:new Uint8Array(e.buffer,e.byteOffset,e.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}(t),e.i=t.buffer,e.m=t.C,e.l=0,e.j=e.i.length,e.h=e.l)}function ec(e,t){if(e.h=t,t>e.j)throw Y(e.j,t)}function ef(e){var t=e.i,r=e.h,n=t[r++],a=127&n;if(128&n&&(a|=(127&(n=t[r++]))<<7,128&n&&(a|=(127&(n=t[r++]))<<14,128&n&&(a|=(127&(n=t[r++]))<<21,128&n&&(a|=(n=t[r++])<<28,128&n&&128&t[r++]&&128&t[r++]&&128&t[r++]&&128&t[r++]&&128&t[r++])))))throw X();return ec(e,r),a}function em(e,t){if(0>t)throw Error("Tried to read a negative byte length: "+t);var r=e.h,n=r+t;if(n>e.j)throw Y(t,e.j-r);return e.h=n,r}eh.prototype.reset=function(){this.h=this.l};var eg=[];function ey(){this.h=[]}function ex(e,t,r){for(;0<r||127<t;)e.h.push(127&t|128),t=(t>>>7|r<<25)>>>0,r>>>=7;e.h.push(t)}function eb(e,t){for(;127<t;)e.h.push(127&t|128),t>>>=7;e.h.push(t)}function ev(e,t){if(eg.length){var r=eg.pop();ep(r,e,t),e=r}else e=new eh(e,t);this.h=e,this.j=this.h.h,this.i=this.l=-1,this.setOptions(t)}function ew(e){var t=e.h;if(t.h==t.j)return!1;e.j=e.h.h;var r=ef(e.h)>>>0;if(t=r>>>3,!(0<=(r&=7)&&5>=r))throw q(r,e.j);if(1>t)throw Error("Invalid field number: "+t+" (at position "+e.j+")");return e.l=t,e.i=r,!0}ey.prototype.length=function(){return this.h.length},ey.prototype.end=function(){var e=this.h;return this.h=[],e},ev.prototype.setOptions=function(e){e=void 0===e?{}:e,this.ca=void 0!==e.ca&&e.ca},ev.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};var eS=[];function ek(){this.j=[],this.i=0,this.h=new ey}function eC(e,t){0!==t.length&&(e.j.push(t),e.i+=t.length)}var eI="function"==typeof Symbol&&"symbol"==typeof Symbol()?Symbol():void 0;function eT(e,t){return eI?e[eI]|=t:void 0!==e.A?e.A|=t:(Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}}),t)}function e$(e,t){eI?e[eI]&&(e[eI]&=~t):void 0!==e.A&&(e.A&=~t)}function eN(e){var t;return null==(t=eI?e[eI]:e.A)?0:t}function eE(e,t){eI?e[eI]=t:void 0!==e.A?e.A=t:Object.defineProperties(e,{A:{value:t,configurable:!0,writable:!0,enumerable:!1}})}function eR(e,t){eE(t,(0|e)&-51)}function eA(e,t){eE(t,(18|e)&-41)}var e_={};function eO(e){return null!==e&&"object"==typeof e&&!Array.isArray(e)&&e.constructor===Object}var eF,eD,eP=[];function eM(e){if(2&eN(e.o))throw Error("Cannot mutate an immutable Message")}function eL(e){var t=e.length;(t=t?e[t-1]:void 0)&&eO(t)?t.g=1:(t={},e.push((t.g=1,t)))}function eB(e){var t=e.i+e.G;return e.B||(e.B=e.o[t]={})}function ez(e,t){return -1===t?null:t>=e.i?e.B?e.B[t]:void 0:e.o[t+e.G]}function eU(e,t,r,n){eM(e),eV(e,t,r,n)}function eV(e,t,r,n){e.j&&(e.j=void 0),t>=e.i||n?eB(e)[t]=r:(e.o[t+e.G]=r,(e=e.B)&&t in e&&delete e[t])}function eW(e,t,r,n){var a=ez(e,t);Array.isArray(a)||(a=eD);var i=eN(a);if(1&i||eT(a,1),n)2&i||eT(a,2),1&r||Object.freeze(a);else{n=!(2&r);var s,o=2&i;1&r||!o?n&&16&i&&!o&&e$(a,16):(eT(s=Array.prototype.slice.call(a),1),eV(e,t,a=s))}return a}function eG(e,t){var r=ez(e,t),n=null==r?r:"number"==typeof r||"NaN"===r||"Infinity"===r||"-Infinity"===r?Number(r):void 0;return null!=n&&n!==r&&eV(e,t,n),n}function eH(e,t,r,n,a){e.h||(e.h={});var i=e.h[r],s=eW(e,r,3,a);if(!i){var o=s;i=[];var u=!!(16&eN(e.o));s=!!(2&eN(o));var l=o;!a&&s&&(o=Array.prototype.slice.call(o));for(var d=s,h=0;h<o.length;h++){var p=o[h],c=t,f=!1;if(void 0!==(p=Array.isArray(p)?new c(p):f?new c:void 0)){var m=f=eN(c=p.o);s&&(m|=2),u&&(m|=16),m!=f&&eE(c,m),c=m,d=d||!!(2&c),i.push(p)}}return e.h[r]=i,t=33|(u=eN(o)),u!=(t=d?-9&t:8|t)&&(Object.isFrozen(d=o)&&(d=Array.prototype.slice.call(d)),eE(d,t),o=d),l!==o&&eV(e,r,o),(a||n&&s)&&eT(i,2),n&&Object.freeze(i),i}return a||(a=Object.isFrozen(i),n&&!a?Object.freeze(i):!n&&a&&(i=Array.prototype.slice.call(i),e.h[r]=i)),i}function ej(e,t,r){var n=!!(2&eN(e.o));if(t=eH(e,t,r,n,n),e=eW(e,r,3,n),!(n||8&eN(e))){for(n=0;n<t.length;n++){if(2&eN((r=t[n]).o)){var a=e2(r,!1);a.j=r}else a=r;r!==a&&(t[n]=a,e[n]=a.o)}eT(e,8)}return t}function eK(e,t,r){if(null!=r&&"number"!=typeof r)throw Error("Value of float/double field must be a number|null|undefined, found "+typeof r+": "+r);eU(e,t,r)}function eq(e,t,r,n,a){eM(e);var i=eH(e,r,t,!1,!1);return r=null!=n?n:new r,e=eW(e,t,2,!1),void 0!=a?(i.splice(a,0,r),e.splice(a,0,r.o)):(i.push(r),e.push(r.o)),r.C()&&e$(e,8),r}function eX(e,t){return null==e?t:e}function eY(e,t,r){return r=void 0===r?0:r,eX(eG(e,t),r)}function eQ(e,t,r,n){var a=eN(e);n=n?!!(16&a):void 0,e=Array.prototype.slice.call(e);for(var i=0;i<e.length;i++)e[i]=function e(t,r,n,a){if(null!=t){if(Array.isArray(t))t=eQ(t,r,n,void 0!==a);else if(eO(t)){var i,s={};for(i in t)s[i]=e(t[i],r,n,a);t=s}else t=r(t,a);return t}}(e[i],t,r,n);return r(a,e),e}function eZ(e){return e.ja===e_?e.toJSON():function(e){switch(typeof e){case"number":return isFinite(e)?e:String(e);case"object":if(e){if(Array.isArray(e)){if(0!=(128&eN(e)))return eL(e=Array.prototype.slice.call(e)),e}else{if(_&&null!=e&&e instanceof Uint8Array)return F(e);if(e instanceof eu){var t=e.V;return null==t?"":"string"==typeof t?t:e.V=F(t)}}}}return e}(e)}function eJ(e,t){128&e&&eL(t)}function e0(e,t,r,n,a,i,s){if(e=e.h&&e.h[r]){var o;if(2&(n=eN(e))?n=e:(eA(n,i=N(e,e1)),Object.freeze(i),n=i),eM(t),s=null==n?eD:(eT(o=[],1),o),null!=n){for(e=0,i=!!n.length;e<n.length;e++){var u=n[e];i=i&&!(2&eN(u.o)),s[e]=u.o}i=(i?8:0)|1,((e=eN(s))&i)!==i&&(Object.isFrozen(s)&&(s=Array.prototype.slice.call(s)),eE(s,e|i)),t.h||(t.h={}),t.h[r]=n}else t.h&&(t.h[r]=void 0);eV(t,r,s,a)}else eU(t,r,function e(t,r,n){if(n=void 0===n?eA:n,null!=t){if(_&&t instanceof Uint8Array)return t.length?new eu(new Uint8Array(t),B):el();if(Array.isArray(t)){var a=eN(t);return 2&a||(r&&!(32&a)&&(16&a||0===a)?eE(t,2|a):4&(r=eN(t=eQ(t,e,4&a?eA:n,!0)))&&2&r&&Object.freeze(t)),t}return t.ja===e_?e1(t):t}}(n,i,s),a)}function e1(e){return 2&eN(e.o)||eT((e=e2(e,!0)).o,2),e}function e2(e,r){var n=e.o,a=[];eT(a,16);var i=e.constructor.h;if(i&&a.push(i),i=e.B){a.length=n.length,a.fill(void 0,a.length,n.length);var s={};a[a.length-1]=s}0!=(128&eN(n))&&eL(a),r=r||e.C()?eA:eR,s=e.constructor,t=a,a=new s(a),t=void 0,e.R&&(a.R=e.R.slice()),s=!!(16&eN(n));for(var o=i?n.length-1:n.length,u=0;u<o;u++)e0(e,a,u-e.G,n[u],!1,s,r);if(i)for(var l in i)e0(e,a,+l,i[l],!0,s,r);return a}function e3(e,r,n){null==e&&(e=t),t=void 0;var a,i=this.constructor.i||0,s=0<i,o=this.constructor.h,u=!1;if(null==e){var l=48,d=!0;s&&(i=0,l|=128),eE(e=o?[o]:[],l)}else{if(!Array.isArray(e)||o&&o!==e[0])throw Error();var h=l=eT(e,0);if((d=0!=(16&h))&&((u=0!=(32&h))||(h|=32)),s){if(128&h)i=0;else if(0<e.length){var p=e[e.length-1];if(eO(p)&&"g"in p){i=0,h|=128,delete p.g;var c,f=!0;for(c in p){f=!1;break}f&&e.pop()}}}else if(128&h)throw Error();l!==h&&eE(e,h)}this.G=(o?0:-1)-i,this.h=void 0,this.o=e;e:{if(i=(o=this.o.length)-1,o&&eO(o=this.o[i])){this.B=o,this.i=i-this.G;break e}void 0!==r&&-1<r?(this.i=Math.max(r,i+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!s&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(n)for(r=d&&!u&&!0,s=this.i,d=0;d<n.length;d++)(u=n[d])<s?(u+=this.G,(i=e[u])?e4(i,r):e[u]=eD):(a||(a=eB(this)),(i=a[u])?e4(i,r):a[u]=eD)}function e4(e,t){if(Array.isArray(e)){var r=eN(e),n=1;!t||2&r||(n|=16),(r&n)!==n&&eE(e,r|n)}}function e6(e,t,r){if(r){var n,a={};for(n in r){var i=r[n],s=i.ra;s||(a.J=i.xa||i.oa.W,i.ia?(a.aa=tr(i.ia),s=function(e){return function(t,r,n){return e.J(t,r,n,e.aa)}}(a)):i.ka?(a.Z=tn(i.da.P,i.ka),s=function(e){return function(t,r,n){return e.J(t,r,n,e.Z)}}(a)):s=a.J,i.ra=s),s(t,e,i.da),a={J:a.J,aa:a.aa,Z:a.Z}}}!function(e,t){if(t=t.R){eC(e,e.h.end());for(var r=0;r<t.length;r++)eC(e,ed(t[r])||L())}}(t,e)}eE(eP,23),eD=Object.freeze(eP),e3.prototype.toJSON=function(){return eQ(this.o,eZ,eJ)},e3.prototype.C=function(){return!!(2&eN(this.o))},e3.prototype.ja=e_,e3.prototype.toString=function(){return this.o.toString()};var e5=Symbol();function e8(e,t,r){return e[e5]||(e[e5]=function(e,n){return t(e,n,r)})}function e7(e){var t=e[e5];if(!t){var r=tm(e);t=function(e,t){return tg(e,t,r)},e[e5]=t}return t}function e9(e,t){var r=e[t];return"function"==typeof r&&0===r.length&&(r=r(),e[t]=r),Array.isArray(r)&&(td in r||ta in r||0<r.length&&"function"==typeof r[0])?r:void 0}function te(e,t,r,n,a,i){t.P=e[0];var s=1;if(e.length>s&&"number"!=typeof e[s]){var o=e[s++];r(t,o)}for(;s<e.length;){r=e[s++];for(var u=s+1;u<e.length&&"number"!=typeof e[u];)u++;switch(o=e[s++],u-=s){case 0:n(t,r,o);break;case 1:(u=e9(e,s))?(s++,a(t,r,o,u)):n(t,r,o,e[s++]);break;case 2:a(t,r,o,u=e9(e,u=s++),e[s++]);break;case 3:i(t,r,o,e[s++],e[s++],e[s++]);break;case 4:i(t,r,o,e[s++],e[s++],e[s++],e[s++]);break;default:throw Error("unexpected number of binary field arguments: "+u)}}return t}var tt=Symbol();function tr(e){var t=e[tt];if(!t){var r=tl(e);t=function(e,t){return ty(e,t,r)},e[tt]=t}return t}function tn(e,t){var r=e[tt];return r||(r=function(e,r){return e6(e,r,t)},e[tt]=r),r}var ta=Symbol();function ti(e,t){e.push(t)}function ts(e,t,r){e.push(t,r.W)}function to(e,t,r,n){var a=tr(n),i=tl(n).P,s=r.W;e.push(t,function(e,t,r){return s(e,t,r,i,a)})}function tu(e,t,r,n,a,i){var s=tn(n,i),o=r.W;e.push(t,function(e,t,r){return o(e,t,r,n,s)})}function tl(e){var t=e[ta];return t||(t=te(e,e[ta]=[],ti,ts,to,tu),td in e&&ta in e&&(e.length=0)),t}var td=Symbol();function th(e,t){e[0]=t}function tp(e,t,r,n){var a=r.U;e[t]=n?function(e,t,r){return a(e,t,r,n)}:a}function tc(e,t,r,n,a){var i=r.U,s=e7(n),o=tm(n).P;e[t]=function(e,t,r){return i(e,t,r,o,s,a)}}function tf(e,t,r,n,a,i,s){var o=r.U,u=e8(n,a,i);e[t]=function(e,t,r){return o(e,t,r,n,u,s)}}function tm(e){var t=e[td];return t||(t=te(e,e[td]={},th,tp,tc,tf),td in e&&ta in e&&(e.length=0)),t}function tg(e,t,r){for(;ew(t)&&4!=t.i;){var n=t.l,a=r[n];if(!a){var i=r[0];i&&(i=i[n])&&(a=r[n]=function(e){var t,r=(t=e.ia)?e7(t):(t=e.wa)?e8(e.da.P,t,e.ka):void 0,n=e.da,a=e.oa.U;return r?function(e,t){return a(e,t,n,r)}:function(e,t){return a(e,t,n)}}(i))}if(!a||!a(t,e,n)){a=t,n=e,i=a.j,function e(t){switch(t.i){case 0:if(0!=t.i)e(t);else e:{t=t.h;for(var r=t.h,n=r+10,a=t.i;r<n;)if(0==(128&a[r++])){ec(t,r);break e}throw X()}break;case 1:ec(t=t.h,t.h+8);break;case 2:2!=t.i?e(t):(r=ef(t.h)>>>0,ec(t=t.h,t.h+r));break;case 5:ec(t=t.h,t.h+4);break;case 3:for(r=t.l;;){if(!ew(t))throw Error("Unmatched start-group tag: stream EOF");if(4==t.i){if(t.l!=r)throw Error("Unmatched end-group tag");break}e(t)}break;default:throw q(t.i,t.j)}}(a);var s=a;if(!s.ca){if(a=s.h.h-i,s.h.h=i,s=s.h,0==a)a=el();else{if(i=em(s,a),s.S&&s.m)a=s.i.subarray(i,i+a);else{s=s.i;var o=i;a=o===(a=i+a)?L():z?s.slice(o,a):new Uint8Array(s.subarray(o,a))}a=0==a.length?el():new eu(a,B)}(i=n.R)?i.push(a):n.R=[a]}}}return e}function ty(e,t,r){for(var n=r.length,a=1==n%2,i=a?1:0;i<n;i+=2)(0,r[i+1])(t,e,r[i]);e6(e,t,a?r[0]:void 0)}function tx(e,t){return{U:e,W:t}}var tb=tx(function(e,t,r){if(5!==e.i)return!1;var n=(e=e.h).i,a=e.h,i=n[a],s=n[a+1],o=n[a+2];return n=n[a+3],ec(e,e.h+4),e=2*((s=(i<<0|s<<8|o<<16|n<<24)>>>0)>>31)+1,i=s>>>23&255,s&=8388607,eU(t,r,255==i?s?NaN:1/0*e:0==i?1401298464324817e-60*e*s:e*Math.pow(2,i-150)*(s+8388608)),!0},function(e,t,r){if(null!=(t=eG(t,r))){eb(e.h,8*r+5),e=e.h;var n=+t;0===n?0<1/n?U=V=0:(V=0,U=2147483648):isNaN(n)?(V=0,U=2147483647):34028234663852886e22<(n=(r=0>n?-2147483648:0)?-n:n)?(V=0,U=(2139095040|r)>>>0):11754943508222875e-54>n?(V=0,U=(r|(n=Math.round(n/1401298464324817e-60)))>>>0):(t=Math.floor(Math.log(n)/Math.LN2),n*=Math.pow(2,-t),16777216<=(n=Math.round(8388608*n))&&++t,V=0,U=(r|t+127<<23|8388607&n)>>>0),r=U,e.h.push(r>>>0&255),e.h.push(r>>>8&255),e.h.push(r>>>16&255),e.h.push(r>>>24&255)}}),tv=tx(function(e,t,r){if(0!==e.i)return!1;var n=e.h,a=0,i=e=0,s=n.i,o=n.h;do{var u=s[o++];a|=(127&u)<<i,i+=7}while(32>i&&128&u)for(32<i&&(e|=(127&u)>>4),i=3;32>i&&128&u;i+=7)e|=(127&(u=s[o++]))<<i;if(ec(n,o),128>u)n=a>>>0,(e=2147483648&(u=e>>>0))&&(u=~u>>>0,0==(n=~n+1>>>0)&&(u=u+1>>>0)),n=4294967296*u+(n>>>0);else throw X();return eU(t,r,e?-n:n),!0},function(e,t,r){null!=(t=ez(t,r))&&("string"==typeof t&&K(t),null!=t&&(eb(e.h,8*r),"number"==typeof t?(e=e.h,W(t),ex(e,U,V)):(r=K(t),ex(e.h,r.i,r.h))))}),tw=tx(function(e,t,r){return 0===e.i&&(eU(t,r,ef(e.h)),!0)},function(e,t,r){if(null!=(t=ez(t,r))&&null!=t){if(eb(e.h,8*r),e=e.h,0<=(r=t))eb(e,r);else{for(t=0;9>t;t++)e.h.push(127&r|128),r>>=7;e.h.push(1)}}}),tS=tx(function(e,t,r){if(2!==e.i)return!1;var n=ef(e.h)>>>0,a=em(e=e.h,n);if(e=e.i,ei){var i,s=e;(i=er)||(i=er=new TextDecoder("utf-8",{fatal:!0})),e=a+n,s=0===a&&e===s.length?s:s.subarray(a,e);try{var o=i.decode(s)}catch(e){if(void 0===ea){try{i.decode(new Uint8Array([128]))}catch(e){}try{i.decode(new Uint8Array([97])),ea=!0}catch(e){ea=!1}}throw ea||(er=void 0),e}}else{n=(o=a)+n,a=[];for(var u,l,d=null;o<n;)128>(u=e[o++])?a.push(u):224>u?o>=n?Q():(l=e[o++],194>u||128!=(192&l)?(o--,Q()):a.push((31&u)<<6|63&l)):240>u?o>=n-1?Q():128!=(192&(l=e[o++]))||224===u&&160>l||237===u&&160<=l||128!=(192&(s=e[o++]))?(o--,Q()):a.push((15&u)<<12|(63&l)<<6|63&s):244>=u?o>=n-2?Q():128!=(192&(l=e[o++]))||0!=(u<<28)+(l-144)>>30||128!=(192&(s=e[o++]))||128!=(192&(i=e[o++]))?(o--,Q()):(u=((7&u)<<18|(63&l)<<12|(63&s)<<6|63&i)-65536,a.push((u>>10&1023)+55296,(1023&u)+56320)):Q(),8192<=a.length&&(d=Z(d,a),a.length=0);o=Z(d,a)}return eU(t,r,o),!0},function(e,t,r){if(null!=(t=ez(t,r))){if(es)t=(en||(en=new TextEncoder)).encode(t);else{for(var n=0,a=new Uint8Array(3*t.length),i=0;i<t.length;i++){var s=t.charCodeAt(i);if(128>s)a[n++]=s;else{if(2048>s)a[n++]=s>>6|192;else{if(55296<=s&&57343>=s){if(56319>=s&&i<t.length){var o=t.charCodeAt(++i);if(56320<=o&&57343>=o){s=1024*(s-55296)+o-56320+65536,a[n++]=s>>18|240,a[n++]=s>>12&63|128,a[n++]=s>>6&63|128,a[n++]=63&s|128;continue}i--}s=65533}a[n++]=s>>12|224,a[n++]=s>>6&63|128}a[n++]=63&s|128}}t=n===a.length?a:a.subarray(0,n)}eb(e.h,8*r+2),eb(e.h,t.length),eC(e,e.h.end()),eC(e,t)}}),tk=tx(function(e,t,r,n,a){if(2!==e.i)return!1;t=eq(t,r,n),r=e.h.j,n=ef(e.h)>>>0;var i=e.h.h+n,s=i-r;if(0>=s&&(e.h.j=i,a(t,e,void 0,void 0,void 0),s=i-e.h.h),s)throw Error("Message parsing ended unexpectedly. Expected to read "+n+" bytes, instead read "+(n-s)+" bytes, either the data ended unexpectedly or the message misreported its own length");return e.h.h=i,e.h.j=r,!0},function(e,t,r,n,a){if(null!=(t=ej(t,n,r)))for(n=0;n<t.length;n++){var i=e;eb(i.h,8*r+2);var s=i.h.end();eC(i,s),s.push(i.i),i=s,a(t[n],e),s=e;var o=i.pop();for(o=s.i+s.h.length()-o;127<o;)i.push(127&o|128),o>>>=7,s.i++;i.push(o),s.i++}});function tC(e){return function(t,r){e:{if(eS.length){var n=eS.pop();n.setOptions(r),ep(n.h,t,r),t=n}else t=new ev(t,r);try{var a=tm(e),i=tg(new a.P,t,a);break e}finally{(a=t.h).i=null,a.m=!1,a.l=0,a.j=0,a.h=0,a.S=!1,t.l=-1,t.i=-1,100>eS.length&&eS.push(t)}i=void 0}return i}}function tI(e){return function(){var t=new ek;ty(this,t,tl(e)),eC(t,t.h.end());for(var r=new Uint8Array(t.i),n=t.j,a=n.length,i=0,s=0;s<a;s++){var o=n[s];r.set(o,i),i+=o.length}return t.j=[r],r}}function tT(e){e3.call(this,e)}f(tT,e3);var t$=[tT,1,tw,2,tb,3,tS,4,tS];function tN(e){e3.call(this,e,-1,tE)}tT.prototype.l=tI(t$),f(tN,e3),tN.prototype.addClassification=function(e,t){return eq(this,1,tT,e,t),this};var tE=[1],tR=tC([tN,1,tk,t$]);function tA(e){e3.call(this,e)}f(tA,e3);var t_=[tA,1,tb,2,tb,3,tb,4,tb,5,tb];function tO(e){e3.call(this,e,-1,tF)}tA.prototype.l=tI(t_),f(tO,e3);var tF=[1],tD=tC([tO,1,tk,t_]);function tP(e){e3.call(this,e)}f(tP,e3);var tM=[tP,1,tb,2,tb,3,tb,4,tb,5,tb,6,tv],tL=tC(tM);function tB(e,t,r){if(r=e.createShader(0===r?e.VERTEX_SHADER:e.FRAGMENT_SHADER),e.shaderSource(r,t),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS))throw Error("Could not compile WebGL shader.\n\n"+e.getShaderInfoLog(r));return r}function tz(e){return{x:eY(e,1),y:eY(e,2),z:eY(e,3),visibility:null!=eG(e,4)?eY(e,4):void 0}}function tU(e){return ej(tD(e),tA,1).map(tz)}function tV(e,t){this.i=e,this.h=t,this.m=0}function tW(e,t,r){return(function(e,t){var r=e.h;if(void 0===e.s){var n=tB(r,"\n  attribute vec2 aVertex;\n  attribute vec2 aTex;\n  varying vec2 vTex;\n  void main(void) {\n    gl_Position = vec4(aVertex, 0.0, 1.0);\n    vTex = aTex;\n  }",0),a=tB(r,"\n  precision mediump float;\n  varying vec2 vTex;\n  uniform sampler2D sampler0;\n  void main(){\n    gl_FragColor = texture2D(sampler0, vTex);\n  }",1),i=r.createProgram();if(r.attachShader(i,n),r.attachShader(i,a),r.linkProgram(i),!r.getProgramParameter(i,r.LINK_STATUS))throw Error("Could not compile WebGL program.\n\n"+r.getProgramInfoLog(i));n=e.s=i,r.useProgram(n),a=r.getUniformLocation(n,"sampler0"),e.l={O:r.getAttribLocation(n,"aVertex"),N:r.getAttribLocation(n,"aTex"),ya:a},e.v=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,e.v),r.enableVertexAttribArray(e.l.O),r.vertexAttribPointer(e.l.O,2,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),r.STATIC_DRAW),r.bindBuffer(r.ARRAY_BUFFER,null),e.u=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,e.u),r.enableVertexAttribArray(e.l.N),r.vertexAttribPointer(e.l.N,2,r.FLOAT,!1,0,0),r.bufferData(r.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),r.STATIC_DRAW),r.bindBuffer(r.ARRAY_BUFFER,null),r.uniform1i(a,0)}n=e.l,r.useProgram(e.s),r.canvas.width=t.width,r.canvas.height=t.height,r.viewport(0,0,t.width,t.height),r.activeTexture(r.TEXTURE0),e.i.bindTexture2d(t.glName),r.enableVertexAttribArray(n.O),r.bindBuffer(r.ARRAY_BUFFER,e.v),r.vertexAttribPointer(n.O,2,r.FLOAT,!1,0,0),r.enableVertexAttribArray(n.N),r.bindBuffer(r.ARRAY_BUFFER,e.u),r.vertexAttribPointer(n.N,2,r.FLOAT,!1,0,0),r.bindFramebuffer(r.DRAW_FRAMEBUFFER?r.DRAW_FRAMEBUFFER:r.FRAMEBUFFER,null),r.clearColor(0,0,0,0),r.clear(r.COLOR_BUFFER_BIT),r.colorMask(!0,!0,!0,!0),r.drawArrays(r.TRIANGLE_FAN,0,4),r.disableVertexAttribArray(n.O),r.disableVertexAttribArray(n.N),r.bindBuffer(r.ARRAY_BUFFER,null),e.i.bindTexture2d(0)}(e,t),"function"==typeof e.h.canvas.transferToImageBitmap)?Promise.resolve(e.h.canvas.transferToImageBitmap()):r?Promise.resolve(e.h.canvas):"function"==typeof createImageBitmap?createImageBitmap(e.h.canvas):(void 0===e.j&&(e.j=document.createElement("canvas")),new Promise(function(t){e.j.height=e.h.canvas.height,e.j.width=e.h.canvas.width,e.j.getContext("2d",{}).drawImage(e.h.canvas,0,0,e.h.canvas.width,e.h.canvas.height),t(e.j)}))}function tG(e){this.h=e}tP.prototype.l=tI(tM);var tH=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function tj(e,t){return t+e}function tK(e){if(this.h=e,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=e&&e.locateFile||tj,"object"==typeof window)var t=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if("undefined"!=typeof location)t=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=t,e.options){t=i(Object.keys(e.options));for(var r=t.next();!r.done;r=t.next()){r=r.value;var n=e.options[r].default;void 0!==n&&(this.l[r]="function"==typeof n?n():n)}}}function tq(e,t){var r;return k(function(n){return t in e.L?n.return(e.L[t]):(r=fetch(e.locateFile(t,"")).then(function(e){return e.arrayBuffer()}),e.L[t]=r,n.return(r))})}function tX(e){switch(void 0===e&&(e=0),e){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function tY(e){var t=this;e=e||{},this.h=new tK({locateFile:e.locateFile,files:function(e){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:tX(e.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:tU},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:tU},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:"object"==typeof window&&void 0!==window.navigator&&("iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document)},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(e){var r,n,a;return k(function(i){return 1==i.h?(n="third_party/mediapipe/modules/pose_landmark/"+(r=tX(e)),x(i,tq(t.h,r),2)):(a=i.i,t.h.overrideFile(n,a),i.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}(u=tK.prototype).close=function(){return this.j&&this.j.delete(),Promise.resolve()},u.reset=function(){var e=this;return k(function(t){e.j&&(e.j.reset(),e.s={},e.v={}),t.h=0})},u.setOptions=function(e,t){var r=this;if(t=t||this.h.options){for(var n=[],a=[],s={},o=i(Object.keys(e)),u=o.next();!u.done;s={X:s.X,Y:s.Y},u=o.next())if(!((u=u.value)in this.l&&this.l[u]===e[u])){this.l[u]=e[u];var l=t[u];void 0!==l&&(l.onChange&&(s.X=l.onChange,s.Y=e[u],n.push(function(e){return function(){return k(function(t){if(1==t.h)return x(t,e.X(e.Y),2);!0===t.i&&(r.u=!0),t.h=0})}}(s))),l.graphOptionXref&&(u=Object.assign({},{calculatorName:"",calculatorIndex:0},l.graphOptionXref,{valueNumber:1===l.type?e[u]:0,valueBoolean:0===l.type&&e[u],valueString:2===l.type?e[u]:""}),a.push(u)))}(0!==n.length||0!==a.length)&&(this.u=!0,this.H=(void 0===this.H?[]:this.H).concat(a),this.F=(void 0===this.F?[]:this.F).concat(n))}},u.initialize=function(){var e=this;return k(function(t){var r,n,a,o,u,l,d,h,p,c,f,m,g,y,b,v,w,S,C,I,T,$,N,E;return 1==t.h?x(t,k(function(t){switch(t.h){case 1:if(!e.ga)return t.return();return r=void 0===e.h.files?[]:"function"==typeof e.h.files?e.h.files(e.l):e.h.files,x(t,k(function(e){switch(e.h){case 1:return e.s=2,x(e,WebAssembly.instantiate(tH),4);case 4:e.h=3,e.s=0;break;case 2:return e.s=0,e.l=null,e.return(!1);case 3:return e.return(!0)}}),2);case 2:if(n=t.i,"object"==typeof window){var i,m;return i={locateFile:e.locateFile},window.createMediapipeSolutionsWasm=i,m={locateFile:e.locateFile},window.createMediapipeSolutionsPackedAssets=m,l=r.filter(function(e){return void 0!==e.data}),d=r.filter(function(e){return void 0===e.data}),h=Promise.all(l.map(function(t){var r=tq(e,t.url);if(void 0!==t.path){var n=t.path;r=r.then(function(t){return e.overrideFile(n,t),Promise.resolve(t)})}return r})),p=Promise.all(d.map(function(t){var r,a;return void 0===t.simd||t.simd&&n||!t.simd&&!n?(r=e.locateFile(t.url,e.ha),(a=document.createElement("script")).setAttribute("src",r),a.setAttribute("crossorigin","anonymous"),new Promise(function(e){a.addEventListener("load",function(){e()},!1),a.addEventListener("error",function(){e()},!1),document.body.appendChild(a)})):Promise.resolve()})).then(function(){var t,r,n;return k(function(a){if(1==a.h)return t=window.createMediapipeSolutionsWasm,r=window.createMediapipeSolutionsPackedAssets,n=e,x(a,t(r),2);n.i=a.i,a.h=0})}),c=k(function(t){return e.h.graph&&e.h.graph.url?t=x(t,tq(e,e.h.graph.url),0):(t.h=0,t=void 0),t}),x(t,Promise.all([p,h,c]),7)}if("function"!=typeof importScripts)throw Error("solutions can only be loaded on a web page or in a web worker");return a=r.filter(function(e){return void 0===e.simd||e.simd&&n||!e.simd&&!n}).map(function(t){return e.locateFile(t.url,e.ha)}),importScripts.apply(null,s(a)),o=e,x(t,createMediapipeSolutionsWasm(Module),6);case 6:o.i=t.i,e.m=new OffscreenCanvas(1,1),e.i.canvas=e.m,u=e.i.GL.createContext(e.m,{antialias:!1,alpha:!1,va:"undefined"!=typeof WebGL2RenderingContext?2:1}),e.i.GL.makeContextCurrent(u),t.h=4;break;case 7:if(e.m=document.createElement("canvas"),!(f=e.m.getContext("webgl2",{}))&&!(f=e.m.getContext("webgl",{})))return alert("Failed to create WebGL canvas context when passing video frame."),t.return();e.K=f,e.i.canvas=e.m,e.i.createContext(e.m,!0,!0,{});case 4:e.j=new e.i.SolutionWasm,e.ga=!1,t.h=0}}),2):3!=t.h?x(t,k(function(t){if(1==t.h){if(e.h.graph&&e.h.graph.url&&e.fa===e.h.graph.url)return t.return();if(e.u=!0,!e.h.graph||!e.h.graph.url){t.h=2;return}return e.fa=e.h.graph.url,x(t,tq(e,e.h.graph.url),3)}for(2!=t.h&&(m=t.i,e.j.loadGraph(m)),y=(g=i(Object.keys(e.D))).next();!y.done;y=g.next())b=y.value,e.j.overrideFile(b,e.D[b]);if(e.D={},e.h.listeners)for(w=(v=i(e.h.listeners)).next();!w.done;w=v.next())(function(e,t){for(var r=t.name||"$",n=[].concat(s(t.wants)),a=new e.i.StringList,o=i(t.wants),u=o.next();!u.done;u=o.next())a.push_back(u.value);o=e.i.PacketListener.implement({onResults:function(a){for(var s,o,u,l,d,h,p,c,f,m,g,y,b,v,w={},S=0;S<t.wants.length;++S)w[n[S]]=a.get(S);var C=e.listeners[r];C&&(e.I=(s=t.outs,k(function(t){switch(t.h){case 1:if(!s)return t.return(w);for(o={},u=0,d=(l=i(Object.keys(s))).next();!d.done;d=l.next())"string"!=typeof(h=s[d.value])&&"texture"===h.type&&void 0!==w[h.stream]&&++u;1<u&&(e.M=!1),d=(p=i(Object.keys(s))).next();case 2:if(d.done){t.h=4;break}if("string"==typeof(f=s[c=d.value]))return b=o,v=c,x(t,function(e,t,r){var n;return k(function(a){return"number"==typeof r||r instanceof Uint8Array||r instanceof e.i.Uint8BlobList?a.return(r):r instanceof e.i.Texture2dDataOut?((n=e.v[t])||(n=new tV(e.i,e.K),e.v[t]=n),a.return(tW(n,r,e.M))):a.return(void 0)})}(e,c,w[f]),14);if(m=w[f.stream],"detection_list"===f.type){if(m){for(var r=m.getRectList(),n=m.getLandmarksList(),a=m.getClassificationsList(),S=[],C=0;C<r.size();++C){var I=tL(r.get(C)),T=eY(I,1),$=eY(I,2),N=eY(I,3),E=eY(I,4),R=eY(I,5,0),A=void 0;A=void 0===A?0:A,I={la:{sa:T,ta:$,height:N,width:E,rotation:R,pa:eX(ez(I,6),A)},ea:tU(n.get(C)),ba:ej(tR(a.get(C)),tT,1).map(function(e){var t=ez(e,1);return{index:null==t?0:t,qa:eY(e,2),label:null!=ez(e,3)?eX(ez(e,3),""):void 0,displayName:null!=ez(e,4)?eX(ez(e,4),""):void 0}})},S.push(I)}r=S}else r=[];o[c]=r,t.h=7;break}if("proto_list"===f.type){if(m){for(n=0,r=Array(m.size());n<m.size();n++)r[n]=m.get(n);m.delete()}else r=[];o[c]=r,t.h=7;break}if(void 0===m){t.h=3;break}if("float_list"===f.type||"proto"===f.type){o[c]=m,t.h=7;break}if("texture"!==f.type)throw Error("Unknown output config type: '"+f.type+"'");return(g=e.v[c])||(g=new tV(e.i,e.K),e.v[c]=g),x(t,tW(g,m,e.M),13);case 13:y=t.i,o[c]=y;case 7:f.transform&&o[c]&&(o[c]=f.transform(o[c])),t.h=3;break;case 14:b[v]=t.i;case 3:d=p.next(),t.h=2;break;case 4:return t.return(o)}})).then(function(r){r=C(r);for(var a=0;a<t.wants.length;++a){var i=w[n[a]];"object"==typeof i&&i.hasOwnProperty&&i.hasOwnProperty("delete")&&i.delete()}r&&(e.I=r)}))}}),e.j.attachMultiListener(a,o),a.delete()})(e,w.value);S=e.l,e.l={},e.setOptions(S),t.h=0}),3):x(t,k(function(t){switch(t.h){case 1:if(!e.u)return t.return();if(!e.F){t.h=2;break}I=(C=i(e.F)).next();case 3:if(I.done){t.h=5;break}return x(t,(0,I.value)(),4);case 4:I=C.next(),t.h=3;break;case 5:e.F=void 0;case 2:if(e.H){for(T=new e.i.GraphOptionChangeRequestList,N=($=i(e.H)).next();!N.done;N=$.next())E=N.value,T.push_back(E);e.j.changeOptions(T),T.delete(),e.H=void 0}e.u=!1,t.h=0}}),0)})},u.overrideFile=function(e,t){this.j?this.j.overrideFile(e,t):this.D[e]=t},u.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},u.send=function(e,t){var r,n,a,s,o,u,l,d,h,p=this;return k(function(c){switch(c.h){case 1:if(!p.h.inputs)return c.return();return r=1e3*(null==t?performance.now():t),x(c,p.I,2);case 2:return x(c,p.initialize(),3);case 3:for(n=new p.i.PacketDataList,s=(a=i(Object.keys(e))).next();!s.done;s=a.next())if(o=s.value,u=p.h.inputs[o]){e:{var f=e[o];switch(u.type){case"video":var m=p.s[u.stream];if(m||(m=new tV(p.i,p.K),p.s[u.stream]=m),0===m.m&&(m.m=m.i.createTexture()),"undefined"!=typeof HTMLVideoElement&&f instanceof HTMLVideoElement)var g=f.videoWidth,y=f.videoHeight;else"undefined"!=typeof HTMLImageElement&&f instanceof HTMLImageElement?(g=f.naturalWidth,y=f.naturalHeight):(g=f.width,y=f.height);y={glName:m.m,width:g,height:y},(g=m.h).canvas.width=y.width,g.canvas.height=y.height,g.activeTexture(g.TEXTURE0),m.i.bindTexture2d(m.m),g.texImage2D(g.TEXTURE_2D,0,g.RGBA,g.RGBA,g.UNSIGNED_BYTE,f),m.i.bindTexture2d(0),m=y;break e;case"detections":for((m=p.s[u.stream])||(m=new tG(p.i),p.s[u.stream]=m),m.data||(m.data=new m.h.DetectionListData),m.data.reset(f.length),y=0;y<f.length;++y){g=f[y];var b=m.data,v=b.setBoundingBox,w=y,S=g.la,k=new tP;if(eK(k,1,S.sa),eK(k,2,S.ta),eK(k,3,S.height),eK(k,4,S.width),eK(k,5,S.rotation),eU(k,6,S.pa),S=k.l(),v.call(b,w,S),g.ea)for(b=0;b<g.ea.length;++b){k=g.ea[b],w=(v=m.data).addNormalizedLandmark,S=y,k=Object.assign({},k,{visibility:k.visibility?k.visibility:0});var C=new tA;eK(C,1,k.x),eK(C,2,k.y),eK(C,3,k.z),k.visibility&&eK(C,4,k.visibility),k=C.l(),w.call(v,S,k)}if(g.ba)for(b=0;b<g.ba.length;++b)w=(v=m.data).addClassification,S=y,k=g.ba[b],eK(C=new tT,2,k.qa),k.index&&eU(C,1,k.index),k.label&&eU(C,3,k.label),k.displayName&&eU(C,4,k.displayName),k=C.l(),w.call(v,S,k)}m=m.data;break e;default:m={}}}switch(l=m,d=u.stream,u.type){case"video":n.pushTexture2d(Object.assign({},l,{stream:d,timestamp:r}));break;case"detections":(h=l).stream=d,h.timestamp=r,n.pushDetectionList(h);break;default:throw Error("Unknown input config type: '"+u.type+"'")}}return p.j.send(n),x(c,p.I,4);case 4:n.delete(),c.h=0}})},u.onResults=function(e,t){this.listeners[t||"$"]=e},T("Solution",tK),T("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"}),(u=tY.prototype).reset=function(){this.h.reset()},u.close=function(){return this.h.close(),Promise.resolve()},u.onResults=function(e){this.h.onResults(e)},u.initialize=function(){var e=this;return k(function(t){return x(t,e.h.initialize(),0)})},u.send=function(e,t){var r=this;return k(function(n){return x(n,r.h.send(e,t),0)})},u.setOptions=function(e){this.h.setOptions(e)},T("Pose",tY),T("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),T("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),T("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),T("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),T("VERSION","0.5.1675469404")}).call(bl),ey.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),(TO=T6||(T6={}))[TO.DT_INVALID=0]="DT_INVALID",TO[TO.DT_FLOAT=1]="DT_FLOAT",TO[TO.DT_DOUBLE=2]="DT_DOUBLE",TO[TO.DT_INT32=3]="DT_INT32",TO[TO.DT_UINT8=4]="DT_UINT8",TO[TO.DT_INT16=5]="DT_INT16",TO[TO.DT_INT8=6]="DT_INT8",TO[TO.DT_STRING=7]="DT_STRING",TO[TO.DT_COMPLEX64=8]="DT_COMPLEX64",TO[TO.DT_INT64=9]="DT_INT64",TO[TO.DT_BOOL=10]="DT_BOOL",TO[TO.DT_QINT8=11]="DT_QINT8",TO[TO.DT_QUINT8=12]="DT_QUINT8",TO[TO.DT_QINT32=13]="DT_QINT32",TO[TO.DT_BFLOAT16=14]="DT_BFLOAT16",TO[TO.DT_QINT16=15]="DT_QINT16",TO[TO.DT_QUINT16=16]="DT_QUINT16",TO[TO.DT_UINT16=17]="DT_UINT16",TO[TO.DT_COMPLEX128=18]="DT_COMPLEX128",TO[TO.DT_HALF=19]="DT_HALF",TO[TO.DT_RESOURCE=20]="DT_RESOURCE",TO[TO.DT_VARIANT=21]="DT_VARIANT",TO[TO.DT_UINT32=22]="DT_UINT32",TO[TO.DT_UINT64=23]="DT_UINT64",TO[TO.DT_FLOAT_REF=101]="DT_FLOAT_REF",TO[TO.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",TO[TO.DT_INT32_REF=103]="DT_INT32_REF",TO[TO.DT_UINT8_REF=104]="DT_UINT8_REF",TO[TO.DT_INT16_REF=105]="DT_INT16_REF",TO[TO.DT_INT8_REF=106]="DT_INT8_REF",TO[TO.DT_STRING_REF=107]="DT_STRING_REF",TO[TO.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",TO[TO.DT_INT64_REF=109]="DT_INT64_REF",TO[TO.DT_BOOL_REF=110]="DT_BOOL_REF",TO[TO.DT_QINT8_REF=111]="DT_QINT8_REF",TO[TO.DT_QUINT8_REF=112]="DT_QUINT8_REF",TO[TO.DT_QINT32_REF=113]="DT_QINT32_REF",TO[TO.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",TO[TO.DT_QINT16_REF=115]="DT_QINT16_REF",TO[TO.DT_QUINT16_REF=116]="DT_QUINT16_REF",TO[TO.DT_UINT16_REF=117]="DT_UINT16_REF",TO[TO.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",TO[TO.DT_HALF_REF=119]="DT_HALF_REF",TO[TO.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",TO[TO.DT_VARIANT_REF=121]="DT_VARIANT_REF",TO[TO.DT_UINT32_REF=122]="DT_UINT32_REF",TO[TO.DT_UINT64_REF=123]="DT_UINT64_REF",(TD=(TF=T5||(T5={})).CheckpointFormatVersion||(TF.CheckpointFormatVersion={}))[TD.LEGACY=0]="LEGACY",TD[TD.V1=1]="V1",TD[TD.V2=2]="V2";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bd={};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bh(e,t,r,n,a){let i=t.inputParams[e];if(i&&void 0!==i.inputIndexStart){let e=i.inputIndexStart,s=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?e+1:i.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===i.type)return bp(t.inputNames[o],r,n,a);if("tensors"===i.type){let i=t.inputs.slice(e,s);return t.inputNames.slice(e,s).filter((e,t)=>{var r;return(null===(r=i[t])||void 0===r?void 0:r.op)!=="NoOp"}).map(e=>bp(e,r,n,a))}let u=bp(t.inputNames[o],r,n,a),l=u.dataSync();return"number"===i.type?l[0]:r9.toNestedArray(u.shape,l)}let s=t.attrParams[e];return s&&s.value}function bp(e,t,r,n){let[a,i]=bg(e,r);if(null!=n){let e=n.getHashTableHandleByName(a);if(null!=e)return e}let s=r.currentContextIds.find(e=>!!t[bm(a,e)]);return void 0!==s?t[bm(a,s)][i]:void 0}function bc(e,t,r){return t[bm(e,r.currentContextId)]}function bf(e,t){let[r,n,a]=bg(e,t);return[bm(r,t&&t.currentContextId),n,a]}function bm(e,t){return t?`${e}-${t}`:e}function bg(e,t){let r;if(""===e)return["",0,void 0];let n=null!=t&&null!=t.parseNodeNameCache;if(n){let r=t.parseNodeNameCache.get(e);if(null!=r)return r}let a=e.split(":");if(1===a.length)r=[e,0,void 0];else{let e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function by(e,t,r){let n=bh("pad",e,t,r);if("explicit"===n){n=bh("explicitPaddings",e,t,r);let a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=n[2*e],a[e][1]=n[2*e+1];return a}return n}function bx(e){return e.kept?e:iZ(e)}var bb={};u(bb,"json",function(){return bv});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bv=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bw={};u(bw,"json",function(){return bS});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bS=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bk={};u(bk,"json",function(){return bC});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bC=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var bI={};u(bI,"json",function(){return bT});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bT=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var b$={};u(b$,"json",function(){return bN});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var bE={};u(bE,"json",function(){return bR});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bR=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var bA={};u(bA,"json",function(){return b_});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b_=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var bO={};u(bO,"json",function(){return bF});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bF=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var bD={};u(bD,"json",function(){return bP});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bP=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var bM={};u(bM,"json",function(){return bL});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bL=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var bB={};u(bB,"json",function(){return bz});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bz=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var bU={};u(bU,"json",function(){return bV});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bV=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var bW={};u(bW,"json",function(){return bG});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bG=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var bH={};u(bH,"json",function(){return bj});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bj=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var bK={};u(bK,"json",function(){return bq});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bq=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var bX={};u(bX,"json",function(){return bY});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bY=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var bQ={};u(bQ,"json",function(){return bZ});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bZ=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var bJ={};u(bJ,"json",function(){return b0});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b0=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var b1={};u(b1,"json",function(){return b2});/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b2=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class b3{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[].concat(...[bb,bw,bk,bI,b$,bE,bA,bO,bD,bM,bB,bU,bW,bH,bK,bX,bQ,bJ,b1].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){let r=e.node,n=[],a=[],i=[],s=r.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):(null==t.input||0===t.input.length)&&i.push(e[t.name]),e),{}),o=[],u=[],l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));let h=Object.keys(s);h.forEach(e=>{let t=s[e];t.inputNames.forEach((e,r)=>{let[n,,a]=bf(e),i=s[n];if(null!=i.outputs){let e=i.outputs.indexOf(a);if(-1!==e){let a=`${n}:${e}`;t.inputNames[r]=a}}t.inputs.push(i),i.children.push(t)})}),0===Object.keys(d).length?h.forEach(e=>{let t=s[e];0===t.children.length&&u.push(t)}):Object.keys(d).forEach(e=>{let[t]=bf(e),r=s[t];null!=r&&(r.signatureKey=d[e],u.push(r))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{let[t]=bf(e),r=s[t];r&&(r.signatureKey=l[e],o.push(r))}):o=n;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));let c={nodes:s,inputs:o,outputs:u,weights:a,placeholders:n,signature:t,functions:p};return i.length>0&&(c.initNodes=i),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){let t=bd[e.op]||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.slice(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(r.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(r.attrParams=t.attrs.reduce((t,r)=>{let n;let a=r.type;switch(r.type){case"string":void 0===(n=b6(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=b6(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":void 0===(n=vi(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=vi(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":void 0===(n=b8(e.attr,r.tfName,r.defaultValue||0))&&r.tfDeprecatedName&&(n=b8(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":void 0===(n=va(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=va(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":void 0===(n=b5(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=b5(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":void 0===(n=vo(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=vo(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":void 0===(n=vn(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=vn(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":void 0===(n=vs(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=vs(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":void 0===(n=ve(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=ve(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":void 0===(n=vt(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=vt(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":void 0===(n=b9(e.attr,r.tfName,r.defaultValue))&&r.tfDeprecatedName&&(n=b9(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return t[r.name]={value:n,type:a},t},{})),r}mapFunction(e){let t=e.nodeDef,r=[],n={};null!=t&&(n=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&r.push(e[t.name]),e),{}));let a=[],i=[];e.signature.inputArg.forEach(e=>{let[t]=bf(e.name),r={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:b7(e.type),type:"dtype"}},children:[]};r.signatureKey=e.name,a.push(r),n[t]=r}),Object.keys(n).forEach(e=>{let t=n[e];t.inputNames.forEach((e,r)=>{let[a,,i]=bf(e),s=n[a];if(null!=s.outputs){let e=s.outputs.indexOf(i);if(-1!==e){let n=`${a}:${e}`;t.inputNames[r]=n}}t.inputs.push(s),s.children.push(t)})});let s=e.ret;e.signature.outputArg.forEach(e=>{let[t,r]=bf(s[e.name]),a=n[t];null!=a&&(a.defaultOutput=r,i.push(a))});let o=this.mapArgsToSignature(e);return{nodes:n,inputs:a,outputs:i,weights:r,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return null!=t&&(r=t[r]),{name:r,dtype:e.type}}}function b4(e,t){let r=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){let t=ey.global;return void 0!==t.atob?t.atob(e):new aM(e,"base64").toString()}(e);return t?r:r.toLowerCase()}function b6(e,t,r,n=!1){let a=e[t];return null!=a?b4(a.s,n):r}function b5(e,t,r){let n=e[t];return n?n.b:r}function b8(e,t,r){let n=e[t]||{},a=null!=n.i?n.i:null!=n.f?n.f:r;return"number"==typeof a?a:parseInt(a,10)}function b7(e){switch("string"==typeof e&&(e=T6[e]),e){case T6.DT_FLOAT:case T6.DT_HALF:return"float32";case T6.DT_INT32:case T6.DT_INT64:case T6.DT_INT8:case T6.DT_UINT8:return"int32";case T6.DT_BOOL:return"bool";case T6.DT_DOUBLE:return"float32";case T6.DT_STRING:return"string";case T6.DT_COMPLEX64:case T6.DT_COMPLEX128:return"complex64";default:return null}}function b9(e,t,r){let n=e[t];return n&&n.func?n.func.name:r}function ve(e,t,r){let n=e[t];return n&&n.type?b7(n.type):r}function vt(e,t,r){let n=e[t];return n&&n.list&&n.list.type?n.list.type.map(e=>b7(e)):r}function vr(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function vn(e,t,r){let n=e[t];return n&&n.shape?vr(n.shape):r}function va(e,t,r){let n=e[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):r}function vi(e,t,r,n=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>b4(e,n)):r}function vs(e,t,r){let n=e[t];return n&&n.list&&n.list.shape?n.list.shape.map(e=>vr(e)):r}function vo(e,t,r){let n=e[t];return n&&n.list&&n.list.b?n.list.b:r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vu{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return bp(e,this.tensorMap,this.context)}getAttr(e,t){let r=this.node.rawAttrs[e];if(null!=r.tensor)return bp(e,this.tensorMap,this.context);if(null!=r.i||null!=r.f)return b8(this.node.rawAttrs,e,t);if(null!=r.s)return b6(this.node.rawAttrs,e,t);if(null!=r.b)return b5(this.node.rawAttrs,e,t);if(null!=r.shape)return vn(this.node.rawAttrs,e,t);if(null!=r.type)return ve(this.node.rawAttrs,e,t);if(null!=r.list){if(null!=r.list.i||null!=r.list.f)return va(this.node.rawAttrs,e,t);if(null!=r.list.s)return vi(this.node.rawAttrs,e,t);if(null!=r.list.shape)return vs(this.node.rawAttrs,e,t);if(null!=r.list.b)return vo(this.node.rawAttrs,e,t);if(null!=r.list.type)return vt(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vl={};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */p(vl,uO);let vd=(e,t,r,n=vl)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(bh("a",e,t,r),bh("b",e,t,r))];case"AddN":return[n.addN(bh("tensors",e,t,r))];case"FloorMod":case"Mod":return[n.mod(bh("a",e,t,r),bh("b",e,t,r))];case"Mul":return[n.mul(bh("a",e,t,r),bh("b",e,t,r))];case"RealDiv":case"Div":return[n.div(bh("a",e,t,r),bh("b",e,t,r))];case"DivNoNan":return[n.divNoNan(bh("a",e,t,r),bh("b",e,t,r))];case"FloorDiv":return[n.floorDiv(bh("a",e,t,r),bh("b",e,t,r))];case"Sub":return[n.sub(bh("a",e,t,r),bh("b",e,t,r))];case"Minimum":return[n.minimum(bh("a",e,t,r),bh("b",e,t,r))];case"Maximum":return[n.maximum(bh("a",e,t,r),bh("b",e,t,r))];case"Pow":return[n.pow(bh("a",e,t,r),bh("b",e,t,r))];case"SquaredDifference":return[n.squaredDifference(bh("a",e,t,r),bh("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vh=(e,t,r,n=vl)=>{switch(e.op){case"Abs":case"ComplexAbs":return[n.abs(bh("x",e,t,r))];case"Acos":return[n.acos(bh("x",e,t,r))];case"Acosh":return[n.acosh(bh("x",e,t,r))];case"Asin":return[n.asin(bh("x",e,t,r))];case"Asinh":return[n.asinh(bh("x",e,t,r))];case"Atan":return[n.atan(bh("x",e,t,r))];case"Atan2":return[n.atan2(bh("x",e,t,r),bh("y",e,t,r))];case"Atanh":return[n.atanh(bh("x",e,t,r))];case"Ceil":return[n.ceil(bh("x",e,t,r))];case"Complex":return[n.complex(bh("real",e,t,r),bh("imag",e,t,r))];case"Cos":return[n.cos(bh("x",e,t,r))];case"Cosh":return[n.cosh(bh("x",e,t,r))];case"Elu":return[n.elu(bh("x",e,t,r))];case"Erf":return[n.erf(bh("x",e,t,r))];case"Exp":return[n.exp(bh("x",e,t,r))];case"Expm1":return[n.expm1(bh("x",e,t,r))];case"Floor":return[n.floor(bh("x",e,t,r))];case"Log":return[n.log(bh("x",e,t,r))];case"Log1p":return[n.log1p(bh("x",e,t,r))];case"Imag":return[n.imag(bh("x",e,t,r))];case"Neg":return[n.neg(bh("x",e,t,r))];case"Reciprocal":return[n.reciprocal(bh("x",e,t,r))];case"Real":return[n.real(bh("x",e,t,r))];case"Relu":return[n.relu(bh("x",e,t,r))];case"Round":return[n.round(bh("x",e,t,r))];case"Selu":return[n.selu(bh("x",e,t,r))];case"Sigmoid":return[n.sigmoid(bh("x",e,t,r))];case"Sin":return[n.sin(bh("x",e,t,r))];case"Sign":return[n.sign(bh("x",e,t,r))];case"Sinh":return[n.sinh(bh("x",e,t,r))];case"Softplus":return[n.softplus(bh("x",e,t,r))];case"Sqrt":return[n.sqrt(bh("x",e,t,r))];case"Square":return[n.square(bh("x",e,t,r))];case"Tanh":return[n.tanh(bh("x",e,t,r))];case"Tan":return[n.tan(bh("x",e,t,r))];case"ClipByValue":return[n.clipByValue(bh("x",e,t,r),bh("clipValueMin",e,t,r),bh("clipValueMax",e,t,r))];case"Relu6":return[n.relu6(bh("x",e,t,r))];case"Rsqrt":return[n.rsqrt(bp(e.inputNames[0],t,r))];case"LeakyRelu":return[n.leakyRelu(bh("x",e,t,r),bh("alpha",e,t,r))];case"Prelu":return[n.prelu(bh("x",e,t,r),bh("alpha",e,t,r))];case"IsNan":return[n.isNaN(bp(e.inputNames[0],t,r))];case"IsInf":return[n.isInf(bp(e.inputNames[0],t,r))];case"IsFinite":return[n.isFinite(bp(e.inputNames[0],t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(e,t,r=""){if("number"!=typeof e&&"number"!=typeof t){r9.assert(e.length===t.length,()=>r+` Shapes ${e} and ${t} must match`);for(let n=0;n<e.length;n++){let a=e[n],i=t[n];r9.assert(a<0||i<0||a===i,()=>r+` Shapes ${e} and ${t} must match`)}}}function vc(e){return!("number"==typeof e||e.some(e=>e<0))}function vf(e,t,r){let n=vm(e,r),a=!vc(n);if(a&&0===t.length)throw Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(a&&t.forEach(e=>{n=vm(e.shape,n)}),!vc(n))throw Error(`Non-fully-defined elementShape: ${n}`);return n}function vm(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let r=[];for(let n=0;n<e.length;++n){let a=e[n],i=t[n];if(a>=0&&i>=0&&a!==i)throw Error(`Incompatible shape during merge: ${e} vs. ${t}`);r[n]=a>=0?a:i}return r}class vg{constructor(e,t,r,n,a,i,s){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=n,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=i7(0),aI(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),vp(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,aI(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,r)=>this.write(e,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return av([],[0].concat(this.elementShape));let r=this.readMany(e);return vp(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),hn(r,0)}concat(e){if(e&&e!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return av([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let r=this.readMany(t);return vp(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),uR(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,hg(t,0))}split(e,t){if(t.dtype!==this.dtype)throw Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0,n=e.map(e=>r+=e);if(r!==t.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=0===r?0:t.size/r,i=[];ak(()=>{t=sQ(t,[1,r,a]);for(let r=0;r<e.length;++r){let s=[0,0===r?0:n[r-1],0],o=[1,e[r],a];i[r]=sQ(uq(t,s,o),this.elementShape)}return i});let s=[];for(let t=0;t<e.length;t++)s[t]=t;this.writeMany(s,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vy{get id(){return this.idTensor.id}constructor(e,t,r,n=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,null!=e&&e.forEach(e=>{if(r!==e.dtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${e.dtype}`);vp(t,e.shape,"TensorList shape mismatch: "),aI(e)}),this.idTensor=i7(0),this.maxNumElements=n,aI(this.idTensor)}copy(){return new vy([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==r&&this.tensors.length!==r)throw Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);vp(e,this.elementShape,"TensorList shape mismatch: ");let n=vf(this.elementShape,this.tensors,e);return ak(()=>hn(this.tensors.map(e=>sQ(e,n)),0))}popBack(e,t){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw Error("Trying to pop from an empty list.");let r=vf(this.elementShape,this.tensors,e),n=this.tensors.pop();return n.kept=!1,vp(n.shape,e,"TensorList shape mismatch: "),sQ(n,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(vp(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw Error("Trying to push element into a full list.");aI(e),this.tensors.push(e)}resize(e){if(e<0)throw Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new vy([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw Error(`element at index ${e} is null.`);vp(this.tensors[e].shape,t,"TensorList shape mismatch: ");let n=vf(this.elementShape,this.tensors,t);return sQ(this.tensors[e],n)}setItem(e,t){if(t.dtype!==this.elementDtype)throw Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);vp(this.elementShape,t.shape,"TensorList shape mismatch: "),aI(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);vp(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());let n=vf(this.elementShape,this.tensors,r);return 0===e.length?av([],[0].concat(n)):ak(()=>hn(e.map(e=>sQ(this.tensors[e],n)),0))}concat(e,t){if(e&&e!==this.elementDtype)throw Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);vp(this.elementShape,t,"TensorList shape mismatch: ");let r=vf(this.elementShape,this.tensors,t);return 0===this.size()?av([],[0].concat(r)):ak(()=>uR(this.tensors.map(e=>sQ(e,r)),0))}}let vx=async(e,t,r)=>{switch(e.op){case"If":case"StatelessIf":{let n=bh("thenBranch",e,t,r),a=bh("elseBranch",e,t,r),i=bh("cond",e,t,r),s=bh("args",e,t,r);if((await i.data())[0])return r.functionMap[n].executeFunctionAsync(s,r.tensorArrayMap,r.tensorListMap);return r.functionMap[a].executeFunctionAsync(s,r.tensorArrayMap,r.tensorListMap)}case"While":case"StatelessWhile":{let n=bh("body",e,t,r),a=bh("cond",e,t,r),i=bh("args",e,t,r),s=await r.functionMap[a].executeFunctionAsync(i,r.tensorArrayMap,r.tensorListMap),o=i.map(e=>e.id),u=await s[0].data();s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=i;for(;u[0];){let e=l,t=(l=await r.functionMap[n].executeFunctionAsync(l,r.tensorArrayMap,r.tensorListMap)).map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});let i=await r.functionMap[a].executeFunctionAsync(l,r.tensorArrayMap,r.tensorListMap);u=await i[0].data(),i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[bx(bh("pred",e,t,r))];case"Switch":{let n=bh("pred",e,t,r),a=bh("data",e,t,r);return a.kept||(a=bx(a)),(await n.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let n=e.inputNames.find(e=>void 0!==bp(e,t,r));if(n)return[bx(bp(n,t,r))];return}case"Enter":{let n=bh("frameName",e,t,r),a=bh("tensor",e,t,r);return r.enterFrame(n),[bx(a)]}case"Exit":{let n=bh("tensor",e,t,r);return r.exitFrame(),[bx(n)]}case"NextIteration":{let n=bh("tensor",e,t,r);return r.nextIteration(),[bx(n)]}case"TensorArrayV3":{let n=bh("size",e,t,r),a=bh("dtype",e,t,r),i=bh("elementShape",e,t,r),s=bh("dynamicSize",e,t,r),o=bh("clearAfterRead",e,t,r),u=bh("identicalElementShapes",e,t,r),l=new vg(bh("name",e,t,r),a,n,i,u,s,o);return r.addTensorArray(l),[l.idTensor,i7(1)]}case"TensorArrayWriteV3":{let n=bh("tensorArrayId",e,t,r),a=bh("index",e,t,r),i=bh("tensor",e,t,r),s=r.getTensorArray(n.id);return s.write(a,i),[s.idTensor]}case"TensorArrayReadV3":{let n=bh("tensorArrayId",e,t,r),a=bh("index",e,t,r);return[r.getTensorArray(n.id).read(a)]}case"TensorArrayGatherV3":{let n=bh("tensorArrayId",e,t,r),a=bh("indices",e,t,r),i=bh("dtype",e,t,r);return[r.getTensorArray(n.id).gather(a,i)]}case"TensorArrayScatterV3":{let n=bh("tensorArrayId",e,t,r),a=bh("indices",e,t,r),i=bh("tensor",e,t,r),s=r.getTensorArray(n.id);return s.scatter(a,i),[s.idTensor]}case"TensorArrayConcatV3":{let n=bh("tensorArrayId",e,t,r),a=r.getTensorArray(n.id),i=bh("dtype",e,t,r);return[a.concat(i)]}case"TensorArraySplitV3":{let n=bh("tensorArrayId",e,t,r),a=bh("tensor",e,t,r),i=bh("lengths",e,t,r),s=r.getTensorArray(n.id);return s.split(i,a),[s.idTensor]}case"TensorArraySizeV3":{let n=bh("tensorArrayId",e,t,r);return[i7(r.getTensorArray(n.id).size(),"int32")]}case"TensorArrayCloseV3":{let n=bh("tensorArrayId",e,t,r),a=r.getTensorArray(n.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let n=bh("tensorListId",e,t,r),a=bh("index",e,t,r),i=bh("tensor",e,t,r),s=r.getTensorList(n.id);return s.setItem(a,i),[s.idTensor]}case"TensorListGetItem":{let n=bh("tensorListId",e,t,r),a=bh("index",e,t,r),i=bh("elementShape",e,t,r),s=bh("elementDType",e,t,r);return[r.getTensorList(n.id).getItem(a,i,s)]}case"TensorListScatterV2":case"TensorListScatter":{let n=bh("indices",e,t,r),a=function(e,t,r,n){if(t.length!==e.shape[0])throw Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(null!=n&&-1!==n&&a>=n)throw Error(`Max index must be < array size (${a}  vs. ${n})`);let i=new vy([],r,e.dtype,n),s=hg(e,0);return t.forEach((e,t)=>{i.setItem(e,s[t])}),i}(bh("tensor",e,t,r),n,bh("elementShape",e,t,r),bh("numElements",e,t,r));return r.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=bh("elementShape",e,t,r),a=bh("elementDType",e,t,r),i=bh("TensorListReserve"===e.op?"numElements":"maxNumElements",e,t,r),s=new vy([],n,a,"TensorListReserve"===e.op?-1:i);return r.addTensorList(s),[s.idTensor]}case"TensorListGather":{let n=bh("tensorListId",e,t,r),a=bh("indices",e,t,r),i=bh("elementShape",e,t,r),s=bh("elementDType",e,t,r);return[r.getTensorList(n.id).gather(a,s,i)]}case"TensorListStack":{let n=bh("tensorListId",e,t,r),a=bh("elementShape",e,t,r),i=bh("elementDType",e,t,r),s=bh("numElements",e,t,r);return[r.getTensorList(n.id).stack(a,i,s)]}case"TensorListFromTensor":{let n=function(e,t,r){let n=e.dtype;if(e.shape.length<1)throw Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==r)throw Error(`Invalid data types; op elements ${e.dtype}, but list elements ${r}`);return vp(e.shape.slice(1),t,"TensorList shape mismatch: "),new vy(hg(e),t,n)}(bh("tensor",e,t,r),bh("elementShape",e,t,r),bh("elementDType",e,t,r));return r.addTensorList(n),[n.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=bh("tensorListId",e,t,r),a=r.getTensorList(n.id),i=bh("dtype",e,t,r),s=bh("elementShape",e,t,r);return[a.concat(i,s)]}case"TensorListPushBack":{let n=bh("tensorListId",e,t,r),a=bh("tensor",e,t,r),i=r.getTensorList(n.id);return i.pushBack(a),[i.idTensor]}case"TensorListPopBack":{let n=bh("tensorListId",e,t,r),a=bh("elementShape",e,t,r),i=bh("elementDType",e,t,r);return[r.getTensorList(n.id).popBack(a,i)]}case"TensorListSplit":{let n=bh("tensor",e,t,r),a=bh("elementShape",e,t,r),i=function(e,t,r){let n=0,a=t.map(e=>n+=e);if(n!==e.shape[0])throw Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);let i=vm(e.shape.slice(1),r),s=0===n?0:e.size/n,o=ak(()=>{let r=[];e=sQ(e,[1,n,s]);for(let n=0;n<t.length;++n){let o=[0,0===n?0:a[n-1],0],u=[1,t[n],s];r[n]=sQ(uq(e,o,u),i)}return e.dispose(),r}),u=new vy([],r,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(n,bh("lengths",e,t,r),a);return r.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=bh("tensorListId",e,t,r);return[i7(r.getTensorList(n.id).size(),"int32")]}case"TensorListResize":{let n=bh("tensorListId",e,t,r),a=bh("size",e,t,r),i=r.getTensorList(n.id).resize(a);return r.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vb(e,t,r){let[n,a]=bh("fusedOps",e,t,r),i="biasadd"===n,s="prelu"===a,o=bh("numArgs",e,t,r);if(i){if(s&&2!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&i&&1!==o)throw Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if("fusedbatchnorm"===n)throw Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let u=bh("strides",e,t,r),l=by(e,t,r),d=bh("dataFormat",e,t,r).toUpperCase(),h=bh("dilations",e,t,r),[p,c]=bh("args",e,t,r);return i||(c=p,p=void 0),{stride:u,pad:l,dataFormat:d,dilations:h,biasArg:p,preluArg:c,activationFunc:a,leakyreluAlpha:bh("leakyreluAlpha",e,t,r)}}let vv=(e,t,r,n=vl)=>{switch(e.op){case"Conv1D":{let a=bh("stride",e,t,r),i=bh("pad",e,t,r),s=bh("dataFormat",e,t,r).toUpperCase(),o=bh("dilation",e,t,r);return[n.conv1d(bh("x",e,t,r),bh("filter",e,t,r),a,i,s,o)]}case"Conv2D":{let a=bh("strides",e,t,r),i=by(e,t,r),s=bh("dataFormat",e,t,r).toUpperCase(),o=bh("dilations",e,t,r);return[n.conv2d(bh("x",e,t,r),bh("filter",e,t,r),[a[1],a[2]],i,s,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:i,dataFormat:s,dilations:o,biasArg:u,preluArg:l,activationFunc:d,leakyreluAlpha:h}=vb(e,t,r);return[n.fused.conv2d({x:bh("x",e,t,r),filter:bh("filter",e,t,r),strides:[a[1],a[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:u,activation:d,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:i,dataFormat:s,dilations:o,biasArg:u,preluArg:l,activationFunc:d,leakyreluAlpha:h}=vb(e,t,r);return[n.fused.depthwiseConv2d({x:bh("x",e,t,r),filter:bh("filter",e,t,r),strides:[a[1],a[2]],pad:i,dataFormat:s,dilations:[o[1],o[2]],bias:u,activation:d,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=bh("outputShape",e,t,r),i=bh("strides",e,t,r),s=by(e,t,r);return[n.conv2dTranspose(bh("x",e,t,r),bh("filter",e,t,r),a,[i[1],i[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=bh("strides",e,t,r),i=by(e,t,r),s=bh("dilations",e,t,r),o=bh("dataFormat",e,t,r).toUpperCase();return[n.depthwiseConv2d(bh("input",e,t,r),bh("filter",e,t,r),[a[1],a[2]],i,o,[s[1],s[2]])]}case"Conv3D":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("dataFormat",e,t,r).toUpperCase(),o=bh("dilations",e,t,r);return[n.conv3d(bh("x",e,t,r),bh("filter",e,t,r),[a[1],a[2],a[3]],i,s,[o[1],o[2],o[3]])]}case"AvgPool":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("kernelSize",e,t,r);return[n.avgPool(bh("x",e,t,r),[s[1],s[2]],[a[1],a[2]],i)]}case"MaxPool":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("kernelSize",e,t,r);return[n.maxPool(bh("x",e,t,r),[s[1],s[2]],[a[1],a[2]],i)]}case"MaxPoolWithArgmax":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("kernelSize",e,t,r),o=bh("includeBatchInIndex",e,t,r),{result:u,indexes:l}=n.maxPoolWithArgmax(bh("x",e,t,r),[s[1],s[2]],[a[1],a[2]],i,o);return[u,l]}case"AvgPool3D":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("kernelSize",e,t,r);return[n.avgPool3d(bh("x",e,t,r),[s[1],s[2],s[3]],[a[1],a[2],a[3]],i)]}case"MaxPool3D":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("kernelSize",e,t,r);return[n.maxPool3d(bh("x",e,t,r),[s[1],s[2],s[3]],[a[1],a[2],a[3]],i)]}case"Dilation2D":{let a=bh("strides",e,t,r),i=bh("pad",e,t,r),s=bh("dilations",e,t,r),o=a[1],u=a[2],l=s[1],d=s[2];return[n.dilation2d(bh("x",e,t,r),bh("filter",e,t,r),[o,u],i,[l,d],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vw=(e,t,r,n=vl)=>{switch(e.op){case"Fill":{let a=bh("shape",e,t,r),i=bh("dtype",e,t,r),s=bh("value",e,t,r);return[n.fill(a,s,i)]}case"LinSpace":{let a=bh("start",e,t,r),i=bh("stop",e,t,r),s=bh("num",e,t,r);return[n.linspace(a,i,s)]}case"Multinomial":{let a=bh("logits",e,t,r),i=bh("numSamples",e,t,r),s=bh("seed",e,t,r);return[n.multinomial(a,i,s)]}case"OneHot":{let a=bh("indices",e,t,r),i=bh("depth",e,t,r),s=bh("onValue",e,t,r),o=bh("offValue",e,t,r),u=bh("dtype",e,t,r);return[n.oneHot(a,i,s,o,u)]}case"Ones":return[n.ones(bh("shape",e,t,r),bh("dtype",e,t,r))];case"OnesLike":return[n.onesLike(bh("x",e,t,r))];case"RandomStandardNormal":return[n.randomStandardNormal(bh("shape",e,t,r),bh("dtype",e,t,r),bh("seed",e,t,r))];case"RandomUniform":return[n.randomUniform(bh("shape",e,t,r),bh("minval",e,t,r),bh("maxval",e,t,r),bh("dtype",e,t,r))];case"RandomUniformInt":return[n.randomUniformInt(bh("shape",e,t,r),bh("minval",e,t,r),bh("maxval",e,t,r),bh("seed",e,t,r))];case"Range":{let a=bh("start",e,t,r),i=bh("stop",e,t,r),s=bh("step",e,t,r);return[n.range(a,i,s,bh("dtype",e,t,r))]}case"TruncatedNormal":{let a=bh("shape",e,t,r),i=bh("mean",e,t,r),s=bh("stdDev",e,t,r),o=bh("seed",e,t,r);return[n.truncatedNormal(a,i,s,bh("dtype",e,t,r),o)]}case"Zeros":return[n.zeros(bh("shape",e,t,r),bh("dtype",e,t,r))];case"ZerosLike":return[n.zerosLike(bh("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(e,t,r){let n=bh("boxes",e,t,r),a=bh("scores",e,t,r),i=bh("maxOutputSize",e,t,r);return{boxes:n,scores:a,maxOutputSize:i,iouThreshold:bh("iouThreshold",e,t,r),scoreThreshold:bh("scoreThreshold",e,t,r),softNmsSigma:bh("softNmsSigma",e,t,r)}}let vk=async(e,t,r,n,a=vl)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:n,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=vS(e,t,r),d=await a.image.nonMaxSuppressionWithScoreAsync(n,i,s,o,u,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:n,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=vS(e,t,r),l=bh("padToMaxOutputSize",e,t,r),d=await a.image.nonMaxSuppressionPaddedAsync(n,i,s,o,u,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:n,scores:i,maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=vS(e,t,r);return[await a.image.nonMaxSuppressionAsync(n,i,s,o,u)]}case"Where":{let n=a.cast(bh("condition",e,t,r),"bool"),i=[await a.whereAsync(n)];return n.dispose(),i}case"ListDiff":return a.setdiff1dAsync(bh("x",e,t,r),bh("y",e,t,r));default:throw TypeError(`Node type ${e.op} is not implemented`)}},vC=(e,t,r,n=vl)=>{switch(e.op){case"LowerBound":{let a=bh("sortedSequence",e,t,r),i=bh("values",e,t,r);return[n.lowerBound(a,i)]}case"TopKV2":{let a=bh("x",e,t,r),i=bh("k",e,t,r),s=bh("sorted",e,t,r),o=n.topk(a,i,s);return[o.values,o.indices]}case"UpperBound":{let a=bh("sortedSequence",e,t,r),i=bh("values",e,t,r);return[n.upperBound(a,i)]}case"Unique":{let a=bh("x",e,t,r),i=n.unique(a);return[i.values,i.indices]}case"UniqueV2":{let a=bh("x",e,t,r),i=bh("axis",e,t,r),s=n.unique(a,i);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vI=(e,t,r,n=vl)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=bh("default",e,t,r);return[bp(e.name,t,r)||a];case"Placeholder":return[bp(e.name,t,r)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[bx(bh("x",e,t,r))];case"IdentityN":return bh("x",e,t,r).map(e=>bx(e));case"Shape":return[n.tensor1d(bh("x",e,t,r).shape,"int32")];case"ShapeN":return bh("x",e,t,r).map(e=>n.tensor1d(e.shape));case"Size":return[n.scalar(bh("x",e,t,r).size,"int32")];case"Rank":return[n.scalar(bh("x",e,t,r).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=bh("x",e,t,r),s=bh("data",e,t,r),o=bh("message",e,t,r),u=bh("summarize",e,t,r);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vT{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=i7(0),this.tensorMap=new Map,aI(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return i7(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),ak(()=>{let e=hg(t),n=r.length,a=e.length;r9.assert(n===a,()=>`The number of elements doesn't match, keys has ${n} elements, the values has ${a} elements.`);for(let t=0;t<n;t++){let n=r[t],a=e[t];aI(a),this.tensorMap.set(n,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let r=await e.data();return ak(()=>{let e=[];for(let n=0;n<r.length;n++){let a=r[n],i=this.findWithDefault(a,t);e.push(i)}return hn(e)})}findWithDefault(e,t){let r=this.tensorMap.get(e);return null!=r?r:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}let v$=async(e,t,r,n)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=n.getHashTableHandleByName(e.name);if(null!=a)return[a];{let a=new vT(bh("keyDType",e,t,r),bh("valueDType",e,t,r));return n.addHashTable(e.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=bh("tableHandle",e,t,r,n),i=bh("keys",e,t,r),s=bh("values",e,t,r),o=n.getHashTableById(a.id);return[await o.import(i,s)]}case"LookupTableFind":case"LookupTableFindV2":{let a=bh("tableHandle",e,t,r,n),i=bh("keys",e,t,r),s=bh("defaultValue",e,t,r),o=n.getHashTableById(a.id);return[await o.find(i,s)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=bh("tableHandle",e,t,r,n);return[n.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vN=(e,t,r,n=vl)=>{switch(e.op){case"ResizeBilinear":{let a=bh("images",e,t,r),i=bh("size",e,t,r),s=bh("alignCorners",e,t,r),o=bh("halfPixelCenters",e,t,r);return[n.image.resizeBilinear(a,[i[0],i[1]],s,o)]}case"ResizeNearestNeighbor":{let a=bh("images",e,t,r),i=bh("size",e,t,r),s=bh("alignCorners",e,t,r),o=bh("halfPixelCenters",e,t,r);return[n.image.resizeNearestNeighbor(a,[i[0],i[1]],s,o)]}case"CropAndResize":{let a=bh("image",e,t,r),i=bh("boxes",e,t,r),s=bh("boxInd",e,t,r),o=bh("cropSize",e,t,r),u=bh("method",e,t,r),l=bh("extrapolationValue",e,t,r);return[n.image.cropAndResize(a,i,s,o,u,l)]}case"ImageProjectiveTransformV3":{let a=bh("images",e,t,r),i=bh("transforms",e,t,r),s=bh("outputShape",e,t,r),o=bh("fillValue",e,t,r),u=bh("interpolation",e,t,r),l=bh("fillMode",e,t,r);return[n.image.transform(a,i,u.toLowerCase(),l.toLowerCase(),o,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vE=(e,t,r,n=vl)=>{switch(e.op){case"Equal":return[n.equal(bh("a",e,t,r),bh("b",e,t,r))];case"NotEqual":return[n.notEqual(bh("a",e,t,r),bh("b",e,t,r))];case"Greater":return[n.greater(bh("a",e,t,r),bh("b",e,t,r))];case"GreaterEqual":return[n.greaterEqual(bh("a",e,t,r),bh("b",e,t,r))];case"Less":return[n.less(bh("a",e,t,r),bh("b",e,t,r))];case"LessEqual":return[n.lessEqual(bh("a",e,t,r),bh("b",e,t,r))];case"LogicalAnd":return[n.logicalAnd(bh("a",e,t,r),bh("b",e,t,r))];case"LogicalNot":return[n.logicalNot(bh("a",e,t,r))];case"LogicalOr":return[n.logicalOr(bh("a",e,t,r),bh("b",e,t,r))];case"Select":case"SelectV2":return[n.where(bh("condition",e,t,r),bh("a",e,t,r),bh("b",e,t,r))];case"BitwiseAnd":return[n.bitwiseAnd(bh("a",e,t,r),bh("b",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vR=(e,t,r,n=vl)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(bh("a",e,t,r),bh("b",e,t,r),bh("transposeA",e,t,r),bh("transposeB",e,t,r))];case"Einsum":return[n.einsum(bh("equation",e,t,r),...bh("tensors",e,t,r))];case"Transpose":return[n.transpose(bh("x",e,t,r),bh("perm",e,t,r))];case"_FusedMatMul":let[a,i]=bh("fusedOps",e,t,r),s="prelu"===i,o=bh("numArgs",e,t,r),u=bh("leakyreluAlpha",e,t,r);if("biasadd"===a){if(s&&2!==o)throw Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==o)throw Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,d]=bh("args",e,t,r);return[n.fused.matMul({a:bh("a",e,t,r),b:bh("b",e,t,r),transposeA:bh("transposeA",e,t,r),transposeB:bh("transposeB",e,t,r),bias:l,activation:i,preluActivationWeights:d,leakyreluAlpha:u})];case"MatrixBandPart":return[n.linalg.bandPart(bh("a",e,t,r),bh("numLower",e,t,r),bh("numUpper",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vA=(e,t,r,n=vl)=>{switch(e.op){case"EuclideanNorm":return[n.euclideanNorm(bh("x",e,t,r),bh("axis",e,t,r),bh("keepDims",e,t,r))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[n.batchNorm(bh("x",e,t,r),bh("mean",e,t,r),bh("variance",e,t,r),bh("offset",e,t,r),bh("scale",e,t,r),bh("epsilon",e,t,r))];case"LRN":return[n.localResponseNormalization(bh("x",e,t,r),bh("radius",e,t,r),bh("bias",e,t,r),bh("alpha",e,t,r),bh("beta",e,t,r))];case"Softmax":return[n.softmax(bh("x",e,t,r))];case"LogSoftmax":return[n.logSoftmax(bh("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},v_=(e,t,r,n=vl)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:i}=n.raggedGather(bh("paramsNestedSplits",e,t,r),bh("paramsDenseValues",e,t,r),bh("indices",e,t,r),bh("outputRaggedRank",e,t,r));return a.concat(i)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:i}=n.raggedRange(bh("starts",e,t,r),bh("limits",e,t,r),bh("splits",e,t,r));return[a,i]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(bh("shape",e,t,r),bh("values",e,t,r),bh("defaultValue",e,t,r),bh("rowPartitionTensors",e,t,r),bh("rowPartitionTypes",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vO=(e,t,r,n=vl)=>{switch(e.op){case"Max":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.max(bh("x",e,t,r),a,i)]}case"Mean":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.mean(bh("x",e,t,r),a,i)]}case"Min":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.min(bh("x",e,t,r),a,i)]}case"Sum":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.sum(bh("x",e,t,r),a,i)]}case"All":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.all(bh("x",e,t,r),a,i)]}case"Any":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.any(bh("x",e,t,r),a,i)]}case"ArgMax":{let a=bh("axis",e,t,r);return[n.argMax(bh("x",e,t,r),a)]}case"ArgMin":{let a=bh("axis",e,t,r);return[n.argMin(bh("x",e,t,r),a)]}case"Prod":{let a=bh("axis",e,t,r),i=bh("keepDims",e,t,r);return[n.prod(bh("x",e,t,r),a,i)]}case"Cumprod":{let a=bh("axis",e,t,r),i=bh("exclusive",e,t,r),s=bh("reverse",e,t,r);return[n.cumprod(bh("x",e,t,r),a,i,s)]}case"Cumsum":{let a=bh("axis",e,t,r),i=bh("exclusive",e,t,r),s=bh("reverse",e,t,r);return[n.cumsum(bh("x",e,t,r),a,i,s)]}case"Bincount":let a=bh("x",e,t,r),i=bh("weights",e,t,r),s=bh("size",e,t,r);return[n.bincount(a,i,s)];case"DenseBincount":{let a=bh("x",e,t,r),i=bh("weights",e,t,r),s=bh("size",e,t,r),o=bh("binaryOutput",e,t,r);return[n.denseBincount(a,i,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vF=(e,t,r,n=vl)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=bh("n",e,t,r),i=bh("axis",e,t,r),s=bh("tensors",e,t,r);return s=s.slice(0,a),[n.concat(s,i)]}case"Gather":{let a=bh("x",e,t,r),i=bh("indices",e,t,r);return[n.gather(a,n.cast(i,"int32"),0)]}case"GatherV2":{let a=bh("axis",e,t,r),i=bh("batchDims",e,t,r),s=bh("x",e,t,r),o=bh("indices",e,t,r);return[n.gather(s,n.cast(o,"int32"),a,i)]}case"Reverse":{let a=bh("dims",e,t,r),i=[];for(let e=0;e<a.length;e++)a[e]&&i.push(e);let s=bh("x",e,t,r);return[n.reverse(s,i)]}case"ReverseV2":{let a=bh("axis",e,t,r),i=bh("x",e,t,r);return[n.reverse(i,a)]}case"Slice":{let a=bh("begin",e,t,r),i=bh("size",e,t,r);return[n.slice(bh("x",e,t,r),a,i)]}case"StridedSlice":{let a=bh("begin",e,t,r),i=bh("end",e,t,r),s=bh("strides",e,t,r),o=bh("beginMask",e,t,r),u=bh("endMask",e,t,r),l=bh("ellipsisMask",e,t,r),d=bh("newAxisMask",e,t,r),h=bh("shrinkAxisMask",e,t,r),p=bh("x",e,t,r);return[n.stridedSlice(p,a,i,s,o,u,l,d,h)]}case"Pack":return ak(()=>{let a=bh("axis",e,t,r),i=bh("tensors",e,t,r),s=i[0].shape,o=n.squeeze(i[0]).shape,u=i.map(e=>{let t=r9.arraysEqual(e.shape,s);if(!t&&!r9.arraysEqual(n.squeeze(e).shape,o))throw Error("the input tensors shape does not match");return t?e:n.reshape(e,s)});return[n.stack(u,a)]});case"Unpack":{let a=bh("axis",e,t,r),i=bh("tensor",e,t,r);return n.unstack(i,a)}case"Tile":{let a=bh("reps",e,t,r);return[n.tile(bh("x",e,t,r),a)]}case"Split":case"SplitV":{let a=bh("axis",e,t,r),i=bh("numOrSizeSplits",e,t,r),s=bh("x",e,t,r);return n.split(s,i,a)}case"ScatterNd":{let a=bh("indices",e,t,r),i=bh("values",e,t,r),s=bh("shape",e,t,r);return[n.scatterND(a,i,s)]}case"GatherNd":{let a=bh("x",e,t,r),i=bh("indices",e,t,r);return[n.gatherND(a,i)]}case"SparseToDense":{let a=bh("sparseIndices",e,t,r),i=bh("outputShape",e,t,r),s=bh("sparseValues",e,t,r),o=bh("defaultValue",e,t,r);return[n.sparseToDense(a,s,i,s.dtype===o.dtype?o:n.cast(o,s.dtype))]}case"TensorScatterUpdate":{let a=bh("indices",e,t,r),i=bh("values",e,t,r),s=bh("tensor",e,t,r);return[n.tensorScatterUpdate(s,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},vD=(e,t,r,n=vl)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:i,emptyRowIndicator:s,reverseIndexMap:o}=n.sparse.sparseFillEmptyRows(bh("indices",e,t,r),bh("values",e,t,r),bh("denseShape",e,t,r),bh("defaultValue",e,t,r));return[a,i,s,o]}case"SparseReshape":{let{outputIndices:a,outputShape:i}=n.sparse.sparseReshape(bh("inputIndices",e,t,r),bh("inputShape",e,t,r),bh("newShape",e,t,r));return[a,i]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(bh("data",e,t,r),bh("indices",e,t,r),bh("segmentIds",e,t,r))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(bh("data",e,t,r),bh("indices",e,t,r),bh("segmentIds",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vP=(e,t,r,n=vl)=>{switch(e.op){case"FFT":return[n.fft(bh("x",e,t,r))];case"IFFT":return[n.ifft(bh("x",e,t,r))];case"RFFT":return[n.rfft(bh("x",e,t,r))];case"IRFFT":return[n.irfft(bh("x",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vM=(e,t,r,n=vl)=>{switch(e.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(bh("input",e,t,r),bh("pattern",e,t,r),bh("rewrite",e,t,r),bh("replaceGlobal",e,t,r))];case"StringNGrams":{let{nGrams:a,nGramsSplits:i}=n.string.stringNGrams(bh("data",e,t,r),bh("dataSplits",e,t,r),bh("separator",e,t,r),bh("nGramWidths",e,t,r),bh("leftPad",e,t,r),bh("rightPad",e,t,r),bh("padWidth",e,t,r),bh("preserveShortSequences",e,t,r));return[a,i]}case"StringSplit":{let{indices:a,values:i,shape:s}=n.string.stringSplit(bh("input",e,t,r),bh("delimiter",e,t,r),bh("skipEmpty",e,t,r));return[a,i,s]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(bh("input",e,t,r),bh("numBuckets",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},vL=(e,t,r,n=vl)=>{switch(e.op){case"Cast":return[n.cast(bh("x",e,t,r),bh("dtype",e,t,r))];case"ExpandDims":{let a=bh("axis",e,t,r);return[n.expandDims(bh("x",e,t,r),a)]}case"Squeeze":{let a=bh("axis",e,t,r);return[n.squeeze(bh("x",e,t,r),a)]}case"Reshape":return[n.reshape(bh("x",e,t,r),bh("shape",e,t,r))];case"EnsureShape":return[n.ensureShape(bh("x",e,t,r),bh("shape",e,t,r))];case"MirrorPad":return[n.mirrorPad(bh("x",e,t,r),bh("padding",e,t,r),bh("mode",e,t,r))];case"PadV2":case"Pad":return[n.pad(bh("x",e,t,r),bh("padding",e,t,r),bh("constantValue",e,t,r))];case"SpaceToBatchND":{let a=bh("blockShape",e,t,r),i=bh("paddings",e,t,r);return[n.spaceToBatchND(bh("x",e,t,r),a,i)]}case"BatchToSpaceND":{let a=bh("blockShape",e,t,r),i=bh("crops",e,t,r);return[n.batchToSpaceND(bh("x",e,t,r),a,i)]}case"DepthToSpace":{let a=bh("blockSize",e,t,r),i=bh("dataFormat",e,t,r).toUpperCase();return[n.depthToSpace(bh("x",e,t,r),a,i)]}case"BroadcastTo":return[n.broadcastTo(bh("x",e,t,r),bh("shape",e,t,r))];case"BroadcastArgs":return[n.broadcastArgs(bh("s0",e,t,r),bh("s1",e,t,r))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function vB(e,t,r,n,a=ak){let i=((e,t,r)=>{switch(e.category){case"arithmetic":return a(()=>vd(e,t,r));case"basic_math":return a(()=>vh(e,t,r));case"control":return vx(e,t,r);case"convolution":return a(()=>vv(e,t,r));case"creation":return a(()=>vw(e,t,r));case"dynamic":return vk(e,t,r);case"evaluation":return a(()=>vC(e,t,r));case"image":return a(()=>vN(e,t,r));case"graph":return a(()=>vI(e,t,r));case"logical":return a(()=>vE(e,t,r));case"matrices":return a(()=>vR(e,t,r));case"normalization":return a(()=>vA(e,t,r));case"ragged":return a(()=>v_(e,t,r));case"reduction":return a(()=>vO(e,t,r));case"slice_join":return a(()=>vF(e,t,r));case"sparse":return a(()=>vD(e,t,r));case"spectral":return a(()=>vP(e,t,r));case"string":return a(()=>vM(e,t,r));case"transformation":return a(()=>vL(e,t,r));case"hash_table":return v$(e,t,r,n);case"custom":let i=bd[e.op];if(i&&i.customExecutor)return i.customExecutor(new vu(e,t,r));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,r);return r9.isPromise(i)?i.then(e=>[].concat(e)):[].concat(i)}class vz{constructor(e={},t={},r={},n={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=n,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vU(e,t,r,n){let a=new Set,i=[],s=null,o=null,u=new Set,l=new Set(Object.keys(e).map(e=>bg(e)[0])),d=new Set((n=n||[]).map(e=>bg(e.name)[0])),h=[...t];for(;h.length>0;){let e=h.pop();if((vj(e)||vG.has(e.op)||vH.has(e.op))&&null==s&&(o=(s=e).children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),!(null!=r[e.name]||l.has(e.name)||d.has(e.name))){if(0===e.inputs.length){i.push(e.name);continue}e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),h.push(e))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:i,dynamicNode:s,syncInputs:o}}class vV extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}let vW=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),vG=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),vH=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function vj(e){return vW.has(e.op)}class vK{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new vK(e.functions[t],this)})}getCompilationKey(e,t){let r=e.map(e=>e.name).sort(),n=t.map(e=>e.name).sort();return r.join(this.SEPARATOR)+"--"+n.join(this.SEPARATOR)}compile(e,t){let r=vU(e,t,this.weightMap,this._initNodes),{missingInputs:n,dynamicNode:a,syncInputs:i}=r;if(null!=a)throw Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(n.length>0){let r=t.map(e=>e.name),a=Object.keys(e);throw Error(`Cannot compute the outputs [${r}] from the provided inputs [${a}]. Missing the following inputs: [${n}]`)}let s=function(e,t){let{usedNodes:r,inputs:n}=t,a=Object.keys(n).map(e=>bg(e)[0]).map(t=>e.nodes[t]),i=e.initNodes||[],s=e=>r.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map(e=>[e.name,e])).values()]}let u=o([...a,...e.weights,...i]).filter(s),l=o([...u,...Object.values(e.nodes)]).filter(s),d=new Map(l.map(e=>[e.name,e])),h={};for(let e of l)for(let t of(h[e.name]=h[e.name]||0,e.children))s(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1;let p=Object.entries(h).filter(([,e])=>0===e).map(([e])=>e),c=[...p];for(;p.length>0;){let e=p.pop();for(let t of d.get(e).children.filter(s))0==--h[t.name]&&(c.push(t.name),p.push(t.name))}let f=function(e,t){let r=new Map(e.map(e=>[e.name,e])),n=t.map(e=>e.name),a=new Set(n);for(;n.length>0;){let e=n.pop();for(let t of r.get(e).children)!r.has(t.name)||a.has(t.name)||(a.add(t.name),n.push(t.name))}return e.filter(e=>a.has(e.name))}(c.map(e=>d.get(e)),u);return function(e,t){let r=new Map(e.map((e,t)=>[e.name,t])),n=new Set(t.map(e=>e.name)),a=e=>n.has("string"==typeof e?e:e.name),i=new Set(e.map(e=>e.name)),s=e=>i.has("string"==typeof e?e:e.name);for(let t of e){for(let e of t.children.filter(s)){if(!r.has(e.name))throw new vV(`Child ${e.name} of node ${t.name} is unreachable.`);if(r.get(t.name)>r.get(e.name))throw new vV(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!a(t))for(let e of t.inputs){if(!r.has(e.name))throw new vV(`Input ${e.name} of node ${t.name} is unreachable.`);if(r.get(e.name)>r.get(t.name))throw new vV(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,u),f}(this.graph,r),o=function(e){let t=new Map(e.map((e,t)=>[e.name,t])),r=Number.MAX_SAFE_INTEGER,n=e.map((e,t)=>vj(e)?r:t),a=e=>{let r=n[t.get(e.name)];return null==r?-1:r},i=e.map((e,t)=>e.children.map(a).reduce((e,t)=>Math.max(e,t),n[t])),s=new Map;for(let t=0;t<e.length;++t){let n=i[t];if(n===r)continue;let a=e[t],o=e[n];s.has(o.name)||s.set(o.name,[]),s.get(o.name).push(a)}return s}(s);return{orderedNodes:s,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return aI(t),t}cloneTensorList(e){return e?e.map(e=>this.cloneAndKeepTensor(e)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([e,t])=>[e,this.cloneTensorList(t)]))}execute(e,t){this.disposeIntermediateTensors();let r=Object.keys(e=this.mapInputs(e)).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let n=r.map(e=>this.graph.nodes[bg(e)[0]]),a=t.map(e=>bg(e)[0]),i=new Set(a),s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);let o=this.getCompilationKey(n,s),u=this.compiledMap.get(o);null==u&&(u=this.compile(e,s),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=ey.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let l={},d={};return ak(()=>{let r=new vz(this.weightMap,l,d,this.functionExecutorMap,this.parseNodeNameCache),n=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(t=>{let[a,i]=bg(t,r),s=[];s[i]=e[t],n[a]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[a]=this.cloneTensorList(s))});let a=this.getFrozenTensorIds(n),{orderedNodes:s,nodeLiveUntilMap:o}=u;for(let e of s){if(n[e.name])continue;let t=vB(e,n,r,this._resourceManager);if(r9.isPromise(t))throw Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);n[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,n,r,a,i,o.get(e.name))}return null==this.parent&&r.dispose(a),t.map(e=>bp(e,n,r))})}getFrozenTensorIds(e){return new Set([].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id))))}checkTensorForDisposal(e,t,r,n,a,i,s){if(!(vj(t)||i.has(e))){for(let n of r[e])null!=n&&(s[n.id]=(s[n.id]||0)+t.children.length);for(let e of t.inputs){if(vj(e))continue;let t=bc(e.name,r,n);if(null!=t)for(let e of t){if(!e||e.kept||a.has(e.id))continue;let t=s[e.id];1===t?(e.dispose(),delete s[e.id]):null!=t&&s[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,n,a,i){if(!vj(e)&&null!=i){for(let e of i)if(!(vj(e)||a.has(e.name)))for(let a of bc(e.name,t,r))!a||a.kept||n.has(a.id)||a.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,n={},a={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=ey.getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let i=new vz(this.weightMap,n,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let s=await this.executeWithControlFlow(e,i,t,r),o=t.map(e=>bp(e,s,i)),u=new Set([...o.map(e=>e.id),...Object.keys(e).map(t=>e[t].id),...this.weightIds]);return Object.values(s).forEach(e=>{e.forEach(e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()})}),null==this.parent&&i.dispose(u),o}async executeFunctionAsync(e,t,r){let n=e.reduce((e,t,r)=>(e[this.inputs[r].name]=t,e),{});return this._executeAsync(n,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,n){let a=Object.keys(e),i=a.map(e=>this.graph.nodes[bg(e)[0]]),s=r.map(e=>bg(e)[0]),o=new Set(s),u=s.map(e=>this.graph.nodes[e]);0===u.length&&(u=this._outputs);let{usedNodes:l,missingInputs:d,dynamicNode:h,syncInputs:p}=vU(e,u,this.weightMap,this._initNodes),c=[...i,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),f=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{let[r,n]=bg(t),a=[];a[n]=e[t],f[r]=a});let m={},g=this.getFrozenTensorIds(f),y={};for(;c.length>0;){let e=this.processStack(i,c,t,f,y,g,o,m,l);await Promise.all(e)}null!=h||n||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let x=u.filter(e=>!vj(e)&&!bp(e.name,f,t)).map(e=>e.name);if(x.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),Error(`Cannot compute the outputs [${x}] from the provided inputs [${a}]. Consider providing the following inputs: [${d}]. ${e}`)}return f}processStack(e,t,r,n,a,i,s,o,u){let l=[];for(;t.length>0;){let e=t.pop();r.currentContext=e.contexts;let d="";if("Enter"===e.node.op&&bh("isConstant",e.node,n,r)&&([d]=bf(e.node.name,r)),null==n[e.node.name]){let h=vB(e.node,n,r,this._resourceManager);d||([d]=bf(e.node.name,r));let p=r.currentContext;r9.isPromise(h)?l.push(h.then(l=>(n[d]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(l)),r.currentContext=p,this.checkTensorForDisposal(d,e.node,n,r,i,s,o),this.processChildNodes(e.node,t,r,n,a,u),l))):(n[d]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(h)),this.checkTensorForDisposal(d,e.node,n,r,i,s,o),this.processChildNodes(e.node,t,r,n,a,u))}else this.processChildNodes(e.node,t,r,n,a,u)}return l}processChildNodes(e,t,r,n,a,i){e.children.forEach(e=>{let[s]=bf(e.name,r);!a[s]&&i.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!bp(e,n,r))&&(a[s]=!0,t.push({contexts:r.currentContext,node:e})):e.inputNames.every(e=>!!bp(e,n,r))&&(a[s]=!0,t.push({contexts:r.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let r=e[t],[n]=bg(t),a=this.graph.nodes[n];if(a.attrParams.shape&&a.attrParams.shape.value){let e=a.attrParams.shape.value,t=e.length===r.shape.length&&r.shape.every((t,r)=>-1===e[r]||e[r]===t);r9.assert(t,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&r9.assert(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;let n={};for(let a in e){let i=null===(r=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===r?void 0:r[a];null!=i?n[i.name]=e[a]:n[a]=e[a]}return n}checkInputs(e){let t=Object.keys(e).filter(e=>{let[t]=bg(e);return null==this.graph.nodes[t]});if(t.length>0)throw Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{var t,r;let n=null===(r=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===r?void 0:r[e];return null!=n?n.name:e},{})}checkOutputs(e){e.forEach(e=>{let[t]=bg(e);if(!this.graph.nodes[t])throw Error(`The output '${e}' is not found in the graph`)})}}class vq{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class vX{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=pM){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,null==t&&(this.loadOptions={}),this.resourceManager=new vq}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return r9.isPromise(e)?e.then(e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e)):this.loadSync(e)}loadSync(e){let t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw Error("Model artifacts missing streamWeights function");let t=await ic(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;let r=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=n,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new vK(b3.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=b3.Instance.transformGraph(e.modelInitializer);this.initializer=new vK(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof n1?[e]:e).forEach((e,r)=>t[this.structuredOutputKeys[r]]=e),t}return e}predict(e,t){let r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){let r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof n1)&&!Array.isArray(e)){let r=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=r)for(let t in r){let n=r[t];null!=n.resourceId&&(e[t]=this.resourceIdToCapturedInput[n.resourceId])}return e}e=Array.isArray(e)?e:[e];let r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let n=0;return this.inputNodes.reduce((t,r)=>{var a,i,s;let o=null===(s=null===(i=null===(a=this.signature)||void 0===a?void 0:a.inputs)||void 0===i?void 0:i[r])||void 0===s?void 0:s.resourceId;return null!=o?t[r]=this.resourceIdToCapturedInput[o]:t[r]=e[n++],t},{})}normalizeOutputs(e){return Array.isArray(e=e||this.outputNodes)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,r=Object.keys(t);for(let n=0;n<r.length;n++){let a=t[r[n]];this.resourceIdToCapturedInput[a.resourceId]=e[n]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&aC(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function vY(e,t={},r=pM){var n;if(null==e)throw Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&((n=e).endsWith("/")||(n+="/"),e=`${n}model.json?tfjs-format=file`);let a=new vX(e,t,r);return await a.load(),a}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vQ=ey;vQ.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15),vQ.registerFlag("WEBGPU_CPU_FORWARD",()=>!0),vQ.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1),vQ.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0),vQ.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1),vQ.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3),vQ.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1),vQ.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0),vQ.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1),vQ.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1),vQ.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1),vQ.registerFlag("WEBGPU_PRINT_SHADER",()=>""),vQ.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vZ{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return"intel"===this.vendor}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vJ{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,r=!1,n=!0){let a;let i=`${e}_${t}`;return n?(this.freeBuffers.has(i)||this.freeBuffers.set(i,[]),this.freeBuffers.get(i).length>0?(a=this.freeBuffers.get(i).pop(),this.numFreeBuffers--):(a=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r}),this.numBytesAllocated+=e)):(a=this.device.createBuffer({size:e,usage:t,mappedAtCreation:r}),this.numBytesAllocated+=e),this.usedBuffers.has(i)||this.usedBuffers.set(i,[]),this.usedBuffers.get(i).push(a),this.numUsedBuffers++,this.numBytesUsed+=e,a}releaseBuffer(e,t=!0){var r;if(0===this.freeBuffers.size)return;let n=e.size,a=(r=e.usage,`${n}_${r}`),i=this.usedBuffers.get(a),s=i.indexOf(e);if(s<0)throw Error("Cannot find the buffer in buffer manager");i[s]=i[i.length-1],i.pop(),this.numUsedBuffers--,this.numBytesUsed-=n,t?(this.freeBuffers.get(a).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=n)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v0{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,r,n){let a=e*t*v2(r),i=v1(e,t,r,n);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let e=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(e),e}this.numBytesAllocated+=a;let s=this.device.createTexture({size:[e,t],format:r,usage:n});return this.usedTextures.get(i).push(s),s}releaseTexture(e){if(0===this.freeTextures.size)return;let t=e.width,r=e.height,n=e.format,a=v1(t,r,n,e.usage);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),s=i.indexOf(e);if(s<0)throw Error("Cannot release a texture that was never provided by this texture manager");i.splice(s,1);let o=t*r*v2(n);this.numBytesUsed-=o}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(e=>{e.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function v1(e,t,r,n){return`${e}_${t}_${r}_${n}`}function v2(e){if("rgba8unorm"===e)return 16;throw Error(`${e} is not supported!`)}let v3=(e,t,r)=>"int32"===r?`atomicAdd(${e}, bitcast<i32>(${t}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${t});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${e}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;(TP=T8||(T8={}))[TP.FROM_PIXELS=0]="FROM_PIXELS",TP[TP.DRAW=1]="DRAW";let v4=(e,t,r,n,a)=>{let i=function(e,t,r){var n;let a;let i=[],s=r.workgroupSize[0]*r.workgroupSize[1]*r.workgroupSize[2];if(r.outputComponent=r.outputComponent?r.outputComponent:1,i.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${wn(r)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${s}u +
                localIndex);
        `}
      }
    `),null!=r.pixelsOpType){let n=r.pixelsOpType===T8.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${wa(t.dtype,r.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${wa(e[0].dtype,r.outputComponent)}>;`,a=3===t.shape.length?"vec2<i32>":"i32";i.push(`
        struct Uniform {
          outShapeStrides : ${a},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${n}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);let s=wi(r);return[we,i.join("\n"),wr(t.shape),r.getUserCode(),v9(s,r)].join("\n")}let o="struct Uniforms { NAN : f32, INFINITY : f32, ";r.variableNames.forEach((t,r)=>{let n=v5(e[r].shape.length);o+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${n}, `,a=v5(e[r].shape.length-1),o+=`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides: ${a}, `});let u=v5(t.shape.length);o+=`outShape : ${u}, `,a=v5(t.shape.length-1),o+=`
         outShapeStrides: ${a}, `,r.size&&(o+="size : i32, "),r.uniforms&&(o+=r.uniforms),o+="};",o=o.replace(/(\w+)\s*:\s*vec(5|6)/g,e=>"@align(16) "+e).replace(/vec(5|6)\s*,\s*(\w+)/g,(e,t,r)=>`vec${t}, @align(16) ${r}`),i.push(o),r.atomic?i.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):i.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${wa(t.dtype,r.outputComponent)}>;
    `),r.variableNames.forEach((t,n)=>{i.push(`
      @group(0) @binding(${1+n}) var<storage, read> ${t}: array<${r.variableComponents?wa(e[n].dtype,r.variableComponents[n]):wa(e[n].dtype,r.outputComponent)}>;
        `)}),""!==o&&i.push(`
      @group(0) @binding(${1+r.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let l=function(e,t){let{x:r,y:n=[],z:a=[]}=t,i=e.length,s=r.length+n.length+a.length;if(s!==i)return"";if(r.length===i){let e=v5(i);return`fn getOutputCoords() -> ${e}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `}let o="",u=[r,n,a];for(let e=0;e<u.length;e++){let t=u[e];if(0!==t.length){if(1===t.length)o+=`let d${t[0]} = i32(globalId[${e}]);`;else{let r=/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){if(Math.max(...e)>5)throw Error("Cannot symbolically compute strides for rank > 6 tensor.");let r=e.length,n=e.map(e=>`${t}.${"xyzwuv"[e]}`),a=Array(r-1);a[r-2]=n[r-1];for(let e=r-3;e>=0;--e)a[e]=`(${a[e+1]} * ${n[e+1]})`;return a}(t,"uniforms.outShape");o+=`var index${e} = i32(globalId[${e}]);`;for(let n=0;n<r.length;n++)o+=`let d${t[n]} = index${e} / ${r[n]};`,n===r.length-1?o+=`let d${t[n+1]} = index${e} - d${t[n]} * ${r[n]};`:o+=`index${e} = index${e} - d${t[n]} * ${r[n]};`}}}let l=[];for(let e=0;e<s;e++)l.push(`d${e}`);let d=v5(s),h=`fn getOutputCoords() -> ${d} {
  ${o}
`;return 0===l.length?h+=`return ${d}(0); }`:h+=`return ${d}(${l.join(",")}); }`,h}(t.shape,r.dispatchLayout),d=[we,i.join("\n")+wt,wr(t.shape),l,function(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:r9.assert(!1,()=>`Unsupported ${e}D shape`)}return t}(t.shape.length)];r.atomic||d.push(function(e,t,r){let n=e.length,a=wa(t,r),i=`fn setOutputAtIndex(flatIndex : i32, value : ${v6(r)}) {
      result[flatIndex] = ${a}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${v6(r,"i32")}) {
      result[flatIndex] = ${a}(value);
    }
    `;if(n>=2){let e=["d0","d1","d2","d3","d4","d5"].slice(0,n),t=v5(n);i+=`
      fn setOutputAtCoords(${e.map(e=>`${e} : i32`).join(", ")}, value : ${v6(r)}) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndex(flatIndex${1===r?"":` / ${r}`}, value);
      }
      fn setOutputAtCoordsI32(${e.map(e=>`${e} : i32`).join(", ")}, value : ${v6(r,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${t}(${e.join(", ")}));
        setOutputAtIndexI32(flatIndex${1===r?"":` / ${r}`}, value);
      }
    `}return i}(t.shape,t.dtype,r.outputComponent)),r.variableNames.forEach((t,r)=>{d.push(`${wr(e[r].shape,t)}`)});let h=e.map((e,n)=>{var a,i,s;let o;return a=t.shape,i=r.variableComponents?r.variableComponents[n]:r.outputComponent,s=r.dispatchLayout.x.length===t.shape.length,o=function(e,t){let r=e.name,n=e.shape.length,a=v5(n),i="get"+r.charAt(0).toUpperCase()+r.slice(1),s=["d0","d1","d2","d3","d4","d5"].slice(0,n),o=s.map(e=>`${e} : i32`).join(", ");if(n<1)return`
      fn ${i}() -> ${v6(t)} {
        return ${v6(t)}(${r}[0]);
      }
    `;let u=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,l=`${n}D`;return 0===n&&(l="1D"),`
    fn ${i}(${o}) -> ${v6(t)} {
      return ${v6(t)}(${r}[getIndexFromCoords${l}(${a}(${s.join(",")}),
        ${u})${1===t?"":` / ${t}`}]);
    }
   `}(e,i),e.shape.length<=a.length&&(o+=function(e,t,r,n){let a=e.name,i=a.charAt(0).toUpperCase()+a.slice(1),s="get"+i+"ByOutput",o=e.shape.length,u=t.length,l=v5(u);if(r9.arraysEqual(e.shape,t)&&n)return`
    fn ${s}Index(globalIndex : i32) -> ${v6(r)} {
      return ${v6(r)}(${a}[globalIndex]);
    }

    fn ${s}Coords(coords : ${l}) -> ${v6(r)} {
      return ${v6(r)}(${a}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}${1===r?"":` / ${r}`}]);
    }
    `;let d=sg.getBroadcastDims(e.shape,t),h=u-o,p="";if(0===o)return`
    fn ${s}Index(globalIndex : i32) -> ${v6(r)}{
      return get${i}();
    }

    fn ${s}Coords(coords : ${l}) -> ${v6(r)}{
      return get${i}();
    }
  `;p=u<2&&d.length>=1?"coords = 0;":d.map(e=>`coords.${v8(e+h)} = 0;`).join("\n");let c="";if(u<2&&o>0)c="coords";else if(u>1){let t=v5(o),r=e.shape.map((e,t)=>`coords.${v8(t+h)}`).join(", ");c=`${t}(${r})`}else c="coords";let f=`uniforms.${a.charAt(0).toLowerCase()+a.slice(1)}Shape`,m=`${o}D`;return`
  fn ${s}Index(globalIndex : i32) -> ${v6(r)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${p}
    return ${v6(r)}(${a}[getIndexFromCoords${m}(${c}, ${f})${1===r?"":` / ${r}`}]);
  }

  fn ${s}Coords(coordsIn : ${l}) -> ${v6(r)} {
    var coords = coordsIn;
    ${p}
    return ${v6(r)}(${a}[getIndexFromCoords${m}(${c}, ${f})${1===r?"":` / ${r}`}]);
  }
`}(e,a,i,s)),o}).join("\n");d.push(h),d.push(r.getUserCode());let p=wi(r);return d.push(v9(p,r)),d.join("\n")}(r,{dtype:n.dtype,shape:n.shape},t),s=e.createShaderModule({code:i,label:t.constructor.name}),o=ey.get("WEBGPU_PRINT_SHADER");if(""!==o){let e=(o=o.toLowerCase()).split(",");("all"===o||e.some(e=>t.shaderKey.toLowerCase().includes(e)))&&(console.group(t.shaderKey),console.debug(i),console.groupEnd())}return a?e.createComputePipelineAsync({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"}):e.createComputePipeline({compute:{module:s,entryPoint:"_start"},label:t.constructor.name,layout:"auto"})},v6=(e,t="f32")=>{switch(e){case 1:return`${t}`;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw Error(`${e}-component ${t} is not supported.`)}};function v5(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";if(5===e)return"vec5";if(6===e)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function v8(e){if(0===e)return"x";if(1===e)return"y";if(2===e)return"z";if(3===e)return"w";if(4===e)return"u";if(5===e)return"v";throw Error(`Index ${e} is not yet supported`)}function v7(...e){let t;switch(e.length){case 0:t=`
        fn main()
      `;break;case 1:t=`
        fn main(${e[0]} : i32)
      `;break;default:throw Error("Unreachable")}return t}function v9(e,t){return`
     
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})

      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${e?"main(getGlobalIndex());":"main();"};
      }
    `}let we=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,wt=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function wr(e,t=""){let r;let n=e.length,a=""!==t?`get${t.charAt(0).toUpperCase()+t.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",i=""!==t?`${t.charAt(0).toLowerCase()+t.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${a}(index : i32) -> i32 { return index; }`;let s=r9.computeStrides(e),o=v5(n),u=[];for(let e=0;e<n;e++)u.push(`d${e}`);return 1===s.length?`    fn ${a}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${i}; let d1 = index - d0 * uniforms.${i};
      return vec2<i32>(d0, d1);
    }`:(r="var index2 = index;"+s.map((e,t)=>{let r=`let ${u[t]} = index2 / uniforms.${i}.${v8(t)}`,n=t===s.length-1?`let ${u[t+1]} = index2 - ${u[t]} * uniforms.${i}.${v8(t)}`:`index2 = index2 - ${u[t]} * uniforms.${i}.${v8(t)}`;return`${r}; ${n};`}).join(""),`
    fn ${a}(index : i32) -> ${o} {
      ${r}
      return ${o}(${u.join(",")});
    }
  `)}function wn(e){return 1===e.dispatch[1]&&1===e.dispatch[2]}function wa(e,t=1){if("float32"===e)return v6(t,"f32");if("int32"===e||"bool"===e)return v6(t,"i32");throw Error(`type ${e} is not supported.`)}function wi(e){return!(e.dispatchLayout.hasOwnProperty("y")&&0!==e.dispatchLayout.y.length||e.dispatchLayout.hasOwnProperty("z")&&0!==e.dispatchLayout.z.length)}var ws={};u(ws,"tilesFitEvenlyIntoShape",function(){return wu}),u(ws,"computeDispatch",function(){return wl}),u(ws,"computeWorkgroupInfoForMatMul",function(){return wd}),u(ws,"computeWorkgroupSizeForConv2d",function(){return wh}),u(ws,"computeWorkPerThreadForConv2d",function(){return wp}),u(ws,"flatDispatchLayout",function(){return wc}),u(ws,"GPUBytesPerElement",function(){return wf}),u(ws,"isWebGPUSupported",function(){return wm}),u(ws,"assertNotComplex",function(){return wg}),u(ws,"MatMulProgramType",function(){return T7});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wo=e=>{let t=1;for(let r=0;r<e.length;r++)t*=e[r];return t};function wu(e,t){if(e.length!==t.length)throw Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((t,r)=>t%e[r]==0)}function wl(e,t,r=[1,1,1],n=[1,1,1]){let[a,i,s]=[Math.ceil(wo(e.x.map(e=>t[e]))/(r[0]*n[0])),e.y?Math.ceil(wo(e.y.map(e=>t[e]))/(r[1]*n[1])):1,e.z?Math.ceil(wo(e.z.map(e=>t[e]))/(r[2]*n[2])):1];return[a,i,s]}function wd(e,t,r,n=!1){let a=[8,8,1],i=[4,4,1];return!n&&(e<=8&&(i[1]=1),t<=16&&r<=16&&(a[0]=4)),{workgroupSize:a,elementsPerThread:i}}function wh(e,t,r=!1){if(r)return[8,8,1];let n=wo(e.x.map(e=>t[e])),a=wo(e.y.map(e=>t[e]));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function wp(e,t,r=!1){if(r)return[4,4,1];let n=wo(e.x.map(e=>t[e])),a=wo(e.y.map(e=>t[e]));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function wc(e){return{x:e.map((e,t)=>t)}}function wf(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw Error(`Unknown dtype ${e}`)}function wm(){return!!("undefined"!=typeof globalThis&&globalThis.navigator&&globalThis.navigator.gpu)}function wg(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&r9.assert("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGPU backend.`)})}(TM=T7||(T7={}))[TM.MatMulReduceProgram=0]="MatMulReduceProgram",TM[TM.MatMulSplitKProgram=1]="MatMulSplitKProgram",TM[TM.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",TM[TM.MatMulPackedProgram=3]="MatMulPackedProgram",TM[TM.MatMulMax=4]="MatMulMax";let wy=ey.getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),wx=(e,t)=>{let r=e.limits.maxComputeWorkgroupsPerDimension,n=t.dispatchLayout,a=t.dispatch;if(a.every(e=>e<=r))return a;r9.assert(a[0]>r&&void 0===n.y&&void 0===n.z,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(a[0]));return i>r?(i=Math.ceil(Math.cbrt(a[0])),r9.assert(i<=r,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]};class wb extends x{nextDataId(){return wb.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!wm())throw Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new vZ(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new vJ(this.device),this.textureManager=new v0(this.device),this.tensorMap=new y(this,ai),ey.getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;let r=this.tensorMap.get(e);return t?r.refCount=0:r.refCount--,!(r.refCount>0)&&((null!=r.complexTensorInfos&&(this.disposeData(r.complexTensorInfos.real.dataId),this.disposeData(r.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e))?this.tensorDataPendingDisposal.push(e):(this.releaseResource(e),this.tensorMap.delete(e)),!0)}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(t&&t.resource){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,r){if("complex64"===r&&null!=e)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let n={id:this.nextDataId()};return this.tensorMap.set(n,{dtype:r,shape:t,values:e,refCount:1}),n}move(e,t,r,n,a){if("complex64"===n)throw Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:n,shape:r,values:t,refCount:a})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(e){throw Error(e.message)}Object.keys(this.pipelineCache).map((t,r)=>{this.pipelineCache[t]=e[r]})}async getBufferData(e){if(ey.getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;let t=e.size,r=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),await r.mapAsync(GPUMapMode.READ);let n=r.getMappedRange().slice(0);return r.unmap(),null!=r&&this.bufferManager.releaseBuffer(r),ey.getBool("WEBGPU_USE_PROFILE_TOOL")&&(r9.assert(void 0!==this.dummyContext,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){let r=this.tensorMap.get(e);return r.values=t,r.values}readSync(e){let t=this.tensorMap.get(e),{values:r,complexTensorInfos:n}=t;if(null!=r||"string"===t.dtype)return r;if("complex64"===t.dtype){let t=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId),a=r9.convertBackendValuesAndArrayBuffer(sg.mergeRealAndImagArrays(t,r).buffer,"float32");return this.convertAndCacheOnCPU(e,a),a}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));let a=["opaque","premultiplied"],i=t.resource,s=i.size;r9.assert(s%4==0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");let o=s/4,u=new ArrayBuffer(s),l=a.map(e=>new OffscreenCanvas(256,256)),d=new OffscreenCanvas(256,256);this.endComputePassEncoder(),l.map((e,t)=>{let r=e.getContext("webgpu");return r.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:a[t]}),r.getCurrentTexture()}).map((e,t)=>{let r=(r,n,s)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:i,bytesPerRow:1024,offset:s},{texture:e},{width:r,height:n}),this.submitQueue();let o=d.getContext("2d",{willReadFrequently:!0});o.clearRect(0,0,r,n),o.drawImage(l[t],0,0);let h=o.getImageData(0,0,r,n).data,p=a[t],c=new Uint8ClampedArray(u,s,r*n*4);for(let e=0;e<c.length;e+=4)if("premultiplied"===p)c[e+3]=h[e+3];else{let t=h[e];c[e]=h[e+2],c[e+1]=h[e+1],c[e+2]=t}},n=Math.floor(o/65536),s=256,h=256,p=0;for(let e=0;e<n;e++)r(s,h,p),p+=262144;let c=o%65536;(h=Math.floor(c/256))>0&&(r(s,h,p),p+=1024*h),(s=c%256)>0&&r(s,1,p)});let h=r9.convertBackendValuesAndArrayBuffer(u,t.dtype);return this.convertAndCacheOnCPU(e,h),h}async read(e){let t;if(!this.tensorMap.has(e))throw Error(`Tensor ${e} was not registered!`);let r=this.tensorMap.get(e),{values:n}=r;if(null!=n)return n;if("complex64"===r.dtype){let e=await Promise.all([this.read(r.complexTensorInfos.real.dataId),this.read(r.complexTensorInfos.imag.dataId)]),n=e[0],a=e[1];t=sg.mergeRealAndImagArrays(n,a)}else{let e=await this.getBufferData(r.resource);t=r9.convertBackendValuesAndArrayBuffer(e,r.dtype)}return this.convertAndCacheOnCPU(e,t),t}copyBuffer(e){let t=e.size,r=e.usage,n=this.bufferManager.acquireBuffer(t,r);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),n}createTensorFromGPUData(e,t,r){let n=e.buffer;if("complex64"===r)throw Error("Cannot write to a complex64 dtype. ");let a={id:this.nextDataId()};this.tensorMap.set(a,{dtype:r,shape:t,values:null,refCount:1,external:e.zeroCopy});let i=this.tensorMap.get(a),s=wf(i.dtype)*r9.sizeFromShape(i.shape);if(e.buffer.size<s)throw Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${s})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!=(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return!0!==e.zeroCopy&&(n=this.copyBuffer(n)),i.resource=n,ai.makeTensorFromDataId(a,t,r,this)}readToGPU(e){let{values:t,dtype:r,shape:n,resource:a}=this.tensorMap.get(e);if("complex64"===r)throw Error("Does not support reading buffer for complex64 dtype.");if(null==a){if(null!=t)throw Error("Data is not on GPU but on CPU.");throw Error("There is no data on GPU or CPU.")}let i=a.size,s=a.usage,o=this.bufferManager.acquireBuffer(i,s);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,o,0,i),this.submitQueue();let u=this.makeTensorInfo(n,r),l=ai.makeTensorFromTensorInfo(u);return this.tensorMap.get(u.dataId).resource=o,{tensorRef:l,buffer:o}}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let r=t.map(e=>r9.decodeString(e));return iY(e.shape,e.dtype,r)}catch(e){throw Error("Failed to decode encoded string bytes into utf-8")}return iY(e.shape,e.dtype,t)}async time(e){this.supportTimestampQuery||this.hasTimestampQueryWarned||(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);let t=this.activeTimers,r=[],n=!1;null==this.programTimersStack?(this.programTimersStack=r,n=!0):this.activeTimers.push(r),this.activeTimers=r,e();let a=r9.flatten(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),i=r9.flatten(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,n&&(this.programTimersStack=null);let s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(a);return s.kernelMs=r9.sum(o),s.getExtraProfileInfo=()=>o.map((e,t)=>({name:i[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,s}makeTensorInfo(e,t,r){return"string"===t&&null!=r&&r.length>0&&r9.isString(r[0])&&(r=r.map(e=>r9.encodeString(e))),{dataId:this.write(r,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId).resource;return t instanceof GPUBuffer?{buffer:t}:t instanceof GPUTexture?t.createView():t}uploadToGPU(e){let t;let r=this.tensorMap.get(e);if(null!=r.resource)return;let n=wf(r.dtype)*r9.sizeFromShape(r.shape),a=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(r.values){if("unmapped"===(t=this.bufferManager.acquireBuffer(n,a,!0)).mapState){let e=this.bufferManager.acquireBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=e.getMappedRange();"int32"===r.dtype||"bool"===r.dtype?new Int32Array(a).set(r.values):new Float32Array(a).set(r.values),e.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,t,0,n),this.stagingPendingDisposal.push(e)}else{let e=t.getMappedRange();"int32"===r.dtype||"bool"===r.dtype?new Int32Array(e).set(r.values):new Float32Array(e).set(r.values),t.unmap()}r.values=null}else t=this.bufferManager.acquireBuffer(n,a);r.resource=t}makeUniforms(e){let t=0,r=0,n=[],a=1;e.forEach(e=>{let i;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 1:i=4;break;case 2:i=8;break;case 3:case 4:case 5:case 6:i=16;break;default:r9.assert(!1,()=>`Unsupported ${e.data.length}D shape`)}(5===r||6===r)&&(i=16),i>a&&(a=i),t=Math.ceil(t/i)*i,r=e.data.length,n.push(t),t+=4*e.data.length});let i=new ArrayBuffer(t=Math.ceil(t/a)*a);e.forEach((e,t)=>{let r=n[t];"int32"===e.type?new Int32Array(i,r,e.data.length).set(e.data):"uint32"===e.type?new Uint32Array(i,r,e.data.length).set(e.data):new Float32Array(i,r,e.data.length).set(e.data)});let s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(s,0,i,0,t),this.uniformPendingDisposal.push(s),{offset:0,size:t,buffer:s}}runWebGPUProgram(e,t,r,n,a){if(a||(a=this.makeTensorInfo(e.outputShape,r)),0===r9.sizeFromShape(a.shape))return this.tensorMap.get(a.dataId).values=r9.getTypedArrayFromDType(a.dtype,0),a;this.uploadToGPU(a.dataId),e.dispatch=wx(this.device,e);let i=t.map((t,r)=>{if("complex64"===t.dtype)throw Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[r]}});e.shaderKey=function(e,t,r){let n=e.shaderKey;if(null!=e.pixelsOpType)return n;let a=[],i=[];t.forEach(e=>{a.push(e.shape),i.push(e.dtype)}),a.push(r.shape),i.push(r.dtype);let s=t.map(e=>sg.getBroadcastDims(e.shape,r.shape)),o=t.map(e=>r9.arraysEqual(e.shape,r.shape)).join("_"),u=s.map(e=>e.join("_")).join(";"),l=wn(e)?"flatDispatch":"";return n+("_"+(e.workgroupSize?e.workgroupSize.join(","):"")+a.map(e=>e.length).join(",")+i.join(",")+e.variableNames.join(",")+u+o)+l}(e,i,a);let s=ey.getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=v4(this.device,e,i,a,s)),e.pipeline=this.pipelineCache[e.shaderKey],s||this.recordAndSubmit(e,a,t,n),a}recordAndSubmit(e,t,r,n){if(e.pipeline instanceof Promise)throw Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let a=[],i=[],s="int32";if(null==e.pixelsOpType){a.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]});let e="int32";r.concat(t).map(e=>e.shape).map(t=>{a.push({type:e,data:t});let r=r9.computeStrides(t);a.push({type:e,data:r})})}else{let e=r9.computeStrides(t.shape);a.push({type:s,data:e})}if(e.size){let t=r9.sizeFromShape(e.outputShape);a.push({type:s,data:[e.outputComponent?t/e.outputComponent:t]})}n&&(a=[...a,...n]);let o=[this.tensorToBinding(t),...r.map(e=>this.tensorToBinding(e)),this.makeUniforms(a)];r.forEach(e=>{this.commandQueueOwnedIds.add(e.dataId)}),this.commandQueueOwnedIds.add(t.dataId);let u=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:o.map((e,t)=>({binding:t,resource:e}))}),l=null!=this.activeTimers;this.ensureCommandEncoderReady();let d={};l&&this.supportTimestampQuery?(this.endComputePassEncoder(),null==this.querySet&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,u),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(l||ey.get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===T8.DRAW)&&(this.endComputePassEncoder(),l?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;null==this.queryResolveBuffer&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);let e=this.bufferManager.acquireBuffer(8*this.querySetCount,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,8*this.querySetCount),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);let t=new BigUint64Array(e.getMappedRange()),r=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),r}shouldExecuteOnCPU(e,t=wy){return ey.getBool("WEBGPU_CPU_FORWARD")&&e.every(e=>null==this.tensorMap.get(e.dataId).resource&&r9.sizeFromShape(e.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(null!=this.querySet&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}wb.nextDataId=0,wm()&&a$("webgpu",async()=>{let e={powerPreference:ey.get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),r={},n=[];t.features.has("timestamp-query")&&n.push("timestamp-query"),t.features.has("bgra8unorm-storage")&&n.push(["bgra8unorm-storage"]),r.requiredFeatures=n;let a=t.limits;return r.requiredLimits={maxComputeWorkgroupStorageSize:a.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:a.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:a.maxStorageBufferBindingSize,maxBufferSize:a.maxBufferSize,maxComputeWorkgroupSizeX:a.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:a.maxComputeInvocationsPerWorkgroup},new wb(await t.requestDevice(r),await t.requestAdapterInfo())},3),(TL=T9||(T9={}))[TL.ADD=0]="ADD",TL[TL.ATAN2=1]="ATAN2",TL[TL.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",TL[TL.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",TL[TL.DIV=4]="DIV",TL[TL.ELU_DER=5]="ELU_DER",TL[TL.EQUAL=6]="EQUAL",TL[TL.FLOOR_DIV=7]="FLOOR_DIV",TL[TL.GREATER=8]="GREATER",TL[TL.GREATER_EQUAL=9]="GREATER_EQUAL",TL[TL.LESS=10]="LESS",TL[TL.LESS_EQUAL=11]="LESS_EQUAL",TL[TL.LOGICAL_AND=12]="LOGICAL_AND",TL[TL.LOGICAL_OR=13]="LOGICAL_OR",TL[TL.MAX=14]="MAX",TL[TL.MIN=15]="MIN",TL[TL.MOD=16]="MOD",TL[TL.MUL=17]="MUL",TL[TL.NOT_EQUAL=18]="NOT_EQUAL",TL[TL.POW=19]="POW",TL[TL.PRELU=20]="PRELU",TL[TL.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",TL[TL.SUB=22]="SUB";let wv=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,ww=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,wS=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,wk=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,wC=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,wI=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,wT=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,w$=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,wN=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,wE=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,wR=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,wA=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,w_=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,wO=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,wF=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`;function wD(e,t){let r;do{let n,a,i;switch(e){case T9.ATAN2:r="let resultTemp = atan2(a, b);";break;case T9.MAX:r="let resultTemp = max(a, b);";break;case T9.MIN:r="let resultTemp = min(a, b);";break;case T9.MOD:r=t?wE:wN;break;case T9.NOT_EQUAL:r=t?wA:wR;break;case T9.POW:r=t?wO:w_;break;default:continue}return t?(n="isnanVec4",a="vec4<f32>",i="vec4<bool>"):(n="isnan",a="f32",i="bool"),`
      let aIsNaN = ${n}(a);
      let aPostLegalization = select(a, ${a}(42), aIsNaN);
      let bIsNaN = ${n}(b);
      let bPostLegalization = select(b, ${a}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${r}
        return select(
            resultTemp, ${a}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1)switch(e){case T9.ADD:r="let resultTemp = a + b;";break;case T9.COMPLEX_MULTIPLY_IMAG:r="let resultTemp = areal * bimag + aimag * breal;";break;case T9.COMPLEX_MULTIPLY_REAL:r="let resultTemp = areal * breal - aimag * bimag;";break;case T9.DIV:r="let resultTemp = a / b;";break;case T9.ELU_DER:r="let resultTemp = select(a * (b + 1.0), a, b >= b - b);";break;case T9.EQUAL:r=wv;break;case T9.FLOOR_DIV:r=ww;break;case T9.GREATER:r=wS;break;case T9.GREATER_EQUAL:r=wk;break;case T9.LESS:r=wC;break;case T9.LESS_EQUAL:r=wI;break;case T9.LOGICAL_AND:return t?wT:"return f32(a >= 1.0 && b >= 1.0);";case T9.LOGICAL_OR:return t?w$:"return f32(a >= 1.0 || b >= 1.0);";case T9.MUL:r="let resultTemp = a * b;";break;case T9.PRELU:return t?wF:"if (a < 0.0) { return b * a; }  return a;";case T9.SQUARED_DIFFERENCE:r="let resultTemp = (a - b) * (a - b);";break;case T9.SUB:r="let resultTemp = a - b;"}return`
    ${r}
    return resultTemp;
  `}(TB=$e||($e={}))[TB.ABS=0]="ABS",TB[TB.ACOS=1]="ACOS",TB[TB.ACOSH=2]="ACOSH",TB[TB.ASIN=3]="ASIN",TB[TB.ASINH=4]="ASINH",TB[TB.ATAN=5]="ATAN",TB[TB.ATANH=6]="ATANH",TB[TB.CEIL=7]="CEIL",TB[TB.COS=8]="COS",TB[TB.COSH=9]="COSH",TB[TB.ELU=10]="ELU",TB[TB.ERF=11]="ERF",TB[TB.EXP=12]="EXP",TB[TB.EXPM1=13]="EXPM1",TB[TB.FLOOR=14]="FLOOR",TB[TB.IS_FINITE=15]="IS_FINITE",TB[TB.IS_INF=16]="IS_INF",TB[TB.IS_NAN=17]="IS_NAN",TB[TB.LINEAR=18]="LINEAR",TB[TB.LOG=19]="LOG",TB[TB.LOG1P=20]="LOG1P",TB[TB.LOGICAL_NOT=21]="LOGICAL_NOT",TB[TB.NEG=22]="NEG",TB[TB.RELU=23]="RELU",TB[TB.RELU6=24]="RELU6",TB[TB.LEAKYRELU=25]="LEAKYRELU",TB[TB.RECIPROCAL=26]="RECIPROCAL",TB[TB.ROUND=27]="ROUND",TB[TB.RSQRT=28]="RSQRT",TB[TB.SELU=29]="SELU",TB[TB.SIGMOID=30]="SIGMOID",TB[TB.SIGN=31]="SIGN",TB[TB.SIN=32]="SIN",TB[TB.SINH=33]="SINH",TB[TB.SOFTPLUS=34]="SOFTPLUS",TB[TB.SQRT=35]="SQRT",TB[TB.SQUARE=36]="SQUARE",TB[TB.STEP=37]="STEP",TB[TB.TAN=38]="TAN",TB[TB.TANH=39]="TANH",TB[TB.TO_INT=40]="TO_INT";let wP=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,wM=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,wL=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,wB=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,wz=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,wU=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,wV=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,wW=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${sg.ERF_P};
  let a1 = ${sg.ERF_A1};
  let a2 = ${sg.ERF_A2};
  let a3 = ${sg.ERF_A3};
  let a4 = ${sg.ERF_A4};
  let a5 = ${sg.ERF_A5};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,wG=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,wH=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,wj=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,wK=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,wq=`
  if (a >= 0.0) {
    return ${sg.SELU_SCALE} * a;
  } else {
    return ${sg.SELU_SCALEALPHA} * (exp(a) - 1.0);
  }
`,wX=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,wY=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,wQ=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,wZ=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`;function wJ(e,t){switch(e){case $e.ABS:return"return abs(a);";case $e.ACOS:return wP;case $e.ACOSH:return wM;case $e.ASIN:return wL;case $e.ASINH:return"return asinh(a);";case $e.ATAN:return wB;case $e.ATANH:return wz;case $e.COS:return"return cos(a);";case $e.COSH:return wU;case $e.CEIL:return"return ceil(a);";case $e.ELU:return t?wV:"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case $e.ERF:return wW;case $e.EXP:return"return exp(a);";case $e.EXPM1:return"return exp(a) - 1.0;";case $e.FLOOR:return"return floor(a);";case $e.IS_FINITE:return"return f32(!isnan(a) && !isinf(a));";case $e.IS_INF:return"return f32(isinf(a));";case $e.IS_NAN:return"return f32(isnan(a));";case $e.LINEAR:return"return a;";case $e.LOG:return wG;case $e.LOG1P:return wH;case $e.LOGICAL_NOT:return"return f32(!(a >= 1.0));";case $e.NEG:return"return -a;";case $e.LEAKYRELU:return t?wj:"if (a < 0.0) { return uniforms.alpha * a; } return a;";case $e.RECIPROCAL:return"return 1.0 / a;";case $e.RELU:return t?wK:"return select(a, 0.0, a < 0.0);";case $e.RELU6:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case $e.ROUND:return"return round(a);";case $e.RSQRT:return"return inverseSqrt(a);";case $e.SELU:return wq;case $e.SIGMOID:return"return 1.0 / (1.0 + exp(-1.0 * a));";case $e.SIGN:return"return sign(a);";case $e.SIN:return"return sin(a);";case $e.SINH:return wX;case $e.SOFTPLUS:return wY;case $e.SQRT:return"return sqrt(a);";case $e.SQUARE:return"return a * a;";case $e.STEP:return wQ;case $e.TAN:return"return tan(a);";case $e.TANH:return wZ;case $e.TO_INT:return"return f32(i32((a)));";default:throw Error(`BinaryType ${e} is not implemented!`)}}function w0(e,t=!1,r=!1,n=3){if(null===e)return"";let a="";if("linear"===e)a=wJ($e.LINEAR);else if("relu"===e)a=wJ($e.RELU,r);else if("elu"===e)a=wJ($e.ELU,r);else if("relu6"===e)a=wJ($e.RELU6,r);else if("prelu"===e)a=wD(T9.PRELU,r);else if("sigmoid"===e)a=wJ($e.SIGMOID,r);else if("leakyrelu"===e)a=wJ($e.LEAKYRELU,r);else throw Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let i=v6(r?4:1);return t?`
      fn activation(a : ${i}, coords : vec${n}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${a}
      }`:`
      fn activation(a : ${i}, coords : vec${n}<i32>) -> ${i} {
        ${a}
      }`}function w1(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function w2(e,t,r=!1,n=!1,a=!1,i=1){r9.assert(e&&1===i||!e,()=>`transposeA ${e} is not compatible with component size ${i}`);let s=`
      ${e?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `;return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${v6(i)} {
    var value = ${v6(i)}(0.0);
    ${r&&a?s:`
    ${e?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${s}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${v6(i)} {
    var value = ${v6(i)}(0.0);
    ${t?"value = getB(batch, col, row);":"value = getB(batch, row, col);"}
    return value;
  }
  `}function w3(e,t,r,n,a=!1,i=!1,s=!1,o=1){return`
  ${w2(r,n,a,i,s,o)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${v6(o)}) {
    ${a&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${w1(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}let w4=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${t});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${t});
        `,w6=(e,t,r,n)=>{if(e)return`
      for (var k = 0; k < ${n}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${r}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let e="",a="";for(let r=0;r<t;r++)e+=`let BCached${r} = mm_Bsub[k * ${t} + ${r}][tileCol];`,a+=`acc[i] = fma(BCached${r}, vec4<f32>(ACached[${r}]), acc[i]);`;return`
      for (var k = 0; k < ${n/t}; k++) {
        ${e}
        for (var i = 0; i < ${r}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${a}
        }
      }`}};function w5(e,t,r=!1,n=32,a=!1,i=32,s=!1){let o=t[1]*e[1],u=t[0]*e[0],l=r?o:n,d=r?n:o,h=l/t[0],p=n/t[1],c=e[1],f=e[0];return r9.assert((r&&4===h&&4===e[1]||!r&&(3===h||4===h))&&l%t[0]==0&&n%t[1]==0&&4===e[0],()=>`If transposeA ${r} is true, innerElementSize ${h} and workPerThread[1] ${e[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${l} must be divisible by workgroupSize[0]${t[0]}. tileInner ${n} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${l/h}>, ${d}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/e[0]}>, ${n}>;

  ${v7()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${c};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${c};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${a?"0":"i32(globalId.z)"};
    let batchA = ${a||!s?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${a||!s?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${o};

    let numTiles = ${a?`${Math.ceil(i/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
    var kStart = ${a?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${c}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${p};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${w4(r,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${w6(r,h,c,n)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${c}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}let w8=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,w7=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function w9(e,t,r=!1,n=32,a=!1,i=32,s=!1,o=!1){let u=e[1]*t[1],l=e[0]*t[0],d=r?u:n,h=r?n:u;r9.assert(h%t[1]==0&&d%t[0]==0&&n%t[1]==0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${t[0]}, tileInner ${n} must be divisible by workgroupSize[1]${t[1]}`);let p=h/t[1],c=d/t[0],f=n/t[1],m=e[1],g=e[0],y=s?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${u};
      let globalColStart = i32(workgroupId.x) * ${l};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${t[1]}) {
          for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${t[0]}) {
            ${w8(r)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${t[1]}) {
              for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${t[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${n};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${g}>;
        for (var k = 0; k < ${n}; k++) {
          for (var inner = 0; inner < ${g}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${r?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
            for (var innerCol = 0; innerCol < ${g}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${t[1]};
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${t[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${g};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${g};
  let globalRowStart = i32(workgroupId.y) * ${u};

  let tileRowA = i32(localId.y) * ${p};
  let tileColA = i32(localId.x) * ${c};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
      for (var innerCol = 0; innerCol < ${c}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${w8(r)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${g}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${n};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${g}>;
    for (var k = 0; k < ${n}; k++) {
      for (var inner = 0; inner < ${g}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${w7(r)}
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${g}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${d}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${n}>;

    ${v7()} {
      let batch = ${a?"0":"i32(globalId.z)"};
      let batchA = ${a||!o?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${a||!o?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${a?`${Math.ceil(i/n)}`:`(uniforms.dimInner - 1) / ${n} + 1`};
      var kStart = ${a?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${g}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${g}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${y}
    }
  `}let Se=e=>e?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;class St{constructor(e,t,r=!1,n=!1,a=null,i=null,s=null,o=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let u=r?e[1]:e[2];if(this.isVec4=(u%4==0&&!r||t[1]%4==0&&r)&&t[2]%4==0&&!n,this.outputComponent=this.isVec4?4:1,this.isVectorA=1===t[1]&&!r,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{let e=wd(t[1],u,t[2],r);this.workgroupSize=e.workgroupSize,this.elementsPerThread=e.elementsPerThread}this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);let l=null!=a,d=null!=s;l&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=o,this.transposeA=r,this.transposeB=n,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],u),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${r}_${n}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,r){let n=this.workgroupSize[1]*this.elementsPerThread[1],a=this.workgroupSize[0]*this.elementsPerThread[0];return!this.isVec4&&this.isVectorA?this.tileInner=4*this.workgroupSize[0]:this.tileInner=a,[e%n==0,t%a==0,r%this.tileInner==0]}getUserCode(){return`
      ${w0(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${w3(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?w5(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?function(e,t=!1){r9.assert(1===e[1]&&1===e[2],()=>`A linear work group size is required. But got ${e}.`);let r=4*e[0];return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${v7()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${r} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${Se(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${r/4}; k++) {
          let rowB = t * ${r} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}(this.workgroupSize,this.transposeA):w9(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}class Sr{constructor(e,t=!1,r=!1,n=null,a=null,i=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize);let s=null!=n,o=null!=i;s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=r,this.addBias=s,this.activation=a,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${r}`}getUserCode(){var e;return`
      ${w0(this.activation,this.hasPreluActivationWeights)}
      ${w3(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${e=this.workgroupSize[0],`
    var<workgroup> sumValues : array<f32, ${e}>;
    ${v7()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${e}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${e/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}
    `}}class Sn{constructor(e,t,r,n=!1,a=!1,i=null,s=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=r,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(r[2]/this.workgroupSize[0]),Math.ceil(r[1]/this.workgroupSize[1]),r[0]];let u=null!=i;u&&this.variableNames.push("bias");let l=null!=o;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=a,this.addBias=u,this.activation=s,this.hasPreluActivationWeights=l,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${n}_${a}`}getUserCode(){return`
      ${w0(this.activation,this.hasPreluActivationWeights)}
      ${w3(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t=e[1],r=e[0],n=t>r?t:r;return`
  var<workgroup> mm_Asub : array<array<f32, ${n}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${r}>, ${n}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${v7()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${n};
    globalRowB = globalRowB + ${n};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${n};
      globalRowB = globalRowB + ${n};

      for (var k = 0; k < ${n}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sa{constructor(e,t,r=!1,n=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,r9.assert(1===e[0],()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};let a=(r&&this.outputShape[1]%4==0||!r&&t%4==0)&&this.outputShape[2]%4==0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=a?4:1,!a&&(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=wl(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=n,this.shaderKey=`matMulSplitK_${r}_${n}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){let e=this.outputComponent;return`
      ${w2(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${v6(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${v3("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${4===e?w5(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):w9(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class Si{constructor(e,t=null,r=null,n=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=null!=t,this.hasPreluActivationWeights=null!=n,this.activation=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${r}`}getUserCode(){return`
    ${w0(this.activation,this.hasPreluActivationWeights)}
    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${w1(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ss{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}function So(e){let{backend:t,attrs:r}=e,{shape:n,value:a}=r,{dtype:i}=r;if("string"===(i=i||r9.inferDtype(a))){let e=r9.getArrayFromDType(i,r9.sizeFromShape(n));return e.fill(a),t.makeTensorInfo(n,i,e)}{let e=new Ss(n);return t.runWebGPUProgram(e,[],i,[{type:"float32",data:[a]}])}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Su(e){let{inputs:t,attrs:r}=e,{x:n}=t,{shape:a}=r,i=r9.sizeFromShape(n.shape),s=r9.inferFromImplicitShape(a,i),o=r9.sizeFromShape(s);return r9.assert(i===o,()=>`The new shape (${s}) has ${o} elements and the old shape (${n.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(n.dataId),{dataId:n.dataId,shape:s,dtype:n.dtype}}function Sl({a:e,b:t,transposeA:r,transposeB:n,backend:a,bias:i=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){let l,d;let h=e.shape.length,p=t.shape.length,c=r?e.shape[h-2]:e.shape[h-1],f=n?t.shape[p-1]:t.shape[p-2],m=r?e.shape[h-1]:e.shape[h-2],g=n?t.shape[p-2]:t.shape[p-1],y=e.shape.slice(0,-2),x=t.shape.slice(0,-2),b=r9.sizeFromShape(y),v=r9.sizeFromShape(x),w=su.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([m,g]);r9.assert(c===f,()=>`Error in matMul: inner shapes (${c}) and (${f}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${r} and transposeB=${n} must match.`);let S=r?[b,c,m]:[b,m,c],k=n?[v,g,f]:[v,f,g],C=Su({inputs:{x:e},backend:a,attrs:{shape:S}}),I=Su({inputs:{x:t},backend:a,attrs:{shape:k}}),T=[C,I],$=Math.max(b,v),N=[C,I],E=[{type:"int32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[c]}],R=[$,m,g],A=ey.get("WEBGPU_MATMUL_PROGRAM_TYPE");if(A<0){let e=ey.getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),t=e>0?e:a.thresholdToIncreaseWorkgroups,r=$*Math.ceil(m/32)*Math.ceil(g/32);A=r<=t||m<=8&&r<=2*t?$*m*g<=128?T7.MatMulReduceProgram:1===$&&f>=2e3?T7.MatMulSplitKProgram:T7.MatMulSmallOutputSizeProgram:T7.MatMulPackedProgram}switch(A){case T7.MatMulReduceProgram:l=new Sr(R,r,n,i,u,s);break;case T7.MatMulSplitKProgram:if(d=So({backend:a,attrs:{shape:R,value:0,dtype:e.dtype}}),l=new Sa(R,f,r,n),i||u){let t=new Si((d=a.runWebGPUProgram(l,N,e.dtype,E,d)).shape,i,u,s),r=null,n=[d];i&&n.push(i),s&&n.push(s),"leakyrelu"===u&&(r=[{type:"float32",data:[o]}],t.uniforms+=" alpha : f32,");let h=a.runWebGPUProgram(t,n,d.dtype,r);T.push(d);let p=Su({inputs:{x:h},backend:a,attrs:{shape:w}});for(let e of(T.push(h),T))a.disposeData(e.dataId);return p}break;case T7.MatMulSmallOutputSizeProgram:l=new Sn(S,k,R,r,n,i,u,s);break;case T7.MatMulPackedProgram:l=new St(S,R,r,n,i,u,s,a.adapterInfo.isIntel());break;default:throw Error(`Unsupported MatMulProgramType ${A}.`)}i&&N.push(i),s&&N.push(s),"leakyrelu"===u&&(E.push({type:"float32",data:[o]}),l.uniforms+=" alpha : f32,");let _=Su({inputs:{x:d=a.runWebGPUProgram(l,N,e.dtype,E,d)},backend:a,attrs:{shape:w}});for(let e of(T.push(d),T))a.disposeData(e.dataId);return _}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sd{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=sg.assertAndGetBroadcastShape(t,r),this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){let e=wD(this.op,!1);return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${e}
      }

      ${v7("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sh{constructor(e,t,r){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=sg.assertAndGetBroadcastShape(t,r),this.dispatchLayout=wc(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&r.length>1&&t[0]<128,this.useSharedMemoryWithB=r.length<=1&&t.length>1&&r[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?r[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{let n=t.length>0&&t[t.length-1]%4==0,a=r.length>0&&r[r.length-1]%4==0;n&&a?(this.outputComponent=4,this.variableComponents=[4,4]):n&&(r9.isScalarShape(r)||1===r[r.length-1])||a&&(r9.isScalarShape(t)||1===t[t.length-1])?(this.outputComponent=4,this.variableComponents=n?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;let t=4===this.outputComponent?"vec4<f32>":"f32",r=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${wD(this.op,4===this.outputComponent)}
    };
    `;if("shared"===this.type){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputIndex(index);`;e=`
        ${r}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${v7("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${n}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${r}
       ${v7("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sp(e){let{inputs:t}=e,{x:r}=t;return e.backend.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Sc(e){let{inputs:t,backend:r}=e,{real:n,imag:a}=t,i=r.makeTensorInfo(n.shape,"complex64"),s=r.tensorMap.get(i.dataId),o=Sp({inputs:{x:n},backend:r}),u=Sp({inputs:{x:a},backend:r});return s.complexTensorInfos={real:o,imag:u},i}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sf{constructor(e,t,r=""){this.variableNames=["A"],this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,""!==r&&(this.uniforms=r),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${wJ(this.op,!1)}
      }
      ${v7("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}function Sm({opType:e,cpuKernelImpl:t,dtype:r}){return({inputs:n,backend:a})=>{let{x:i}=n,s=r||i.dtype;if(a.shouldExecuteOnCPU([i])&&null!=t){let e=t(a.tensorMap.get(i.dataId).values,s);return a.makeTensorInfo(i.shape,s,e)}let o=new Sf(i.shape,e);return a.runWebGPUProgram(o,[i],s)}}function Sg({opType:e,cpuKernelImpl:t,supportsComplex:r=!1,dtype:n}){return({inputs:a,backend:i})=>{let{a:s,b:o}=a;if(r&&"complex64"===s.dtype){let t,r;let n=i.tensorMap.get(s.dataId),a=i.tensorMap.get(o.dataId);if(e!==T9.MUL)[t,r]=[[n.complexTensorInfos.real,a.complexTensorInfos.real],[n.complexTensorInfos.imag,a.complexTensorInfos.imag]].map(t=>{let[r,n]=t,a={dataId:r.dataId,dtype:r.dtype,shape:s.shape},u={dataId:n.dataId,dtype:n.dtype,shape:o.shape},l=new Sh(e,s.shape,o.shape);return i.runWebGPUProgram(l,[a,u],n6(r.dtype,n.dtype))});else{let e=new Sd(T9.COMPLEX_MULTIPLY_REAL,s.shape,o.shape),u=new Sd(T9.COMPLEX_MULTIPLY_IMAG,s.shape,o.shape),l=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:s.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o.shape}];t=i.runWebGPUProgram(e,l,"float32"),r=i.runWebGPUProgram(u,l,"float32")}let u=Sc({inputs:{real:t,imag:r},backend:i});return i.disposeData(t.dataId),i.disposeData(r.dataId),u}let u=n||n6(s.dtype,o.dtype);if(("string"===s.dtype||"string"===o.dtype||i.shouldExecuteOnCPU([s,o]))&&null!=t){let e=i.tensorMap.get(s.dataId).values,r=i.tensorMap.get(o.dataId).values,n="string"===s.dtype?sg.fromUint8ToStringArray(e):e,a="string"===s.dtype?sg.fromUint8ToStringArray(r):r,[l,d]=t(s.shape,o.shape,n,a,u);return i.makeTensorInfo(d,u,l)}let l=new Sh(e,s.shape,o.shape);return i.runWebGPUProgram(l,[s,o],u)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let{addImpl:Sy,castImpl:Sx,ceilImpl:Sb,concatImpl:Sv,equalImpl:Sw,expImpl:SS,expm1Impl:Sk,floorImpl:SC,floorDivImpl:SI,gatherNdImpl:ST,gatherV2Impl:S$,greaterEqualImpl:SN,greaterImpl:SE,lessEqualImpl:SR,lessImpl:SA,logImpl:S_,maxImpl:SO,maximumImpl:SF,minimumImpl:SD,multiplyImpl:SP,negImpl:SM,notEqualImpl:SL,prodImpl:SB,rangeImpl:Sz,rsqrtImpl:SU,scatterImpl:SV,simpleAbsImpl:SW,sliceImpl:SG,stridedSliceImpl:SH,stringNGramsImpl:Sj,subImpl:SK,tileImpl:Sq,topKImpl:SX,transposeImpl:SY,uniqueImpl:SQ}=c2,SZ=Sm({opType:$e.ABS,cpuKernelImpl:SW}),SJ=Sm({opType:$e.ACOS}),S0=Sm({opType:$e.ACOSH}),S1=Sg({opType:T9.ADD,cpuKernelImpl:Sy,supportsComplex:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S2{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(t=>{e.push(`let v${t} = get${t}ByOutputCoords(coords);`)});let t=this.variableNames.map(e=>`v${e}`).join(" + ");return`
      ${v7("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join("\n        ")}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S3{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.dispatchLayout={x:[0],y:[1]},this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){r9.assert(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);let e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${v7()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S4{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[t[n]];this.outputShape=r,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=v5(this.outputShape.length),t=S6(this.newDim);return`
      ${v7("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}}function S6(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let r=Array(t);for(let t=0;t<e.length;t++)r[e[t]]=`coords.${v8(t)}`;return r.join()}function S5(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{perm:i}=n,s=Array(a.shape.length);for(let e=0;e<s.length;e++)s[e]=a.shape[i[e]];if(r.shouldExecuteOnCPU([a])){let e=SY(r.tensorMap.get(a.dataId).values,a.shape,a.dtype,i,s);return r.makeTensorInfo(s,a.dtype,e)}if(2===a.shape.length&&r9.arraysEqual(i,[1,0])){let e=new S3(a.shape,i);return r.runWebGPUProgram(e,[a],a.dtype)}let o=new S4(a.shape,i);return r.runWebGPUProgram(o,[a],a.dtype)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S8{constructor(e,t,r){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=sg.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,e.inSize>=32768&&r>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0",r=this.workgroupSize[0];"min"===this.reduceType||"max"===this.reduceType?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType?(e=" bestValue = bestValue * candidate; ",t="1.0"):"all"===this.reduceType?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):"any"===this.reduceType&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");let n="mean"===this.reduceType?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);",a=`
         var<workgroup> xBestValues : array<f32, ${r}>;
       `;return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${a}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${v7("index")} {
         let outputIndex = index / ${r};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${r}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${r}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${r}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}}let S7={mean:"float32",all:"bool",any:"bool"};function S9(e,t,r,n,a){let i;let s=e.shape.length,o=[],u=r9.parseAxisParam(t,e.shape),l=u,d=sg.getAxesPermutation(l,s),h=e;null!=d&&(h=S5({inputs:{x:e},attrs:{perm:d},backend:a}),l=sg.getInnerMostAxes(l.length,s),o.push(h)),sg.assertAxesAreInnerMostDims(n,l,s);let[p,c]=sg.computeOutAndReduceShapes(h.shape,l),f=p;if(r&&(f=sg.expandShapeToKeepDim(p,u)),("max"===n||"prod"===n)&&a.shouldExecuteOnCPU([h])){let t=a.tensorMap.get(h.dataId).values;switch(n){case"max":let r=SO(t,r9.sizeFromShape(c),f,e.dtype);i=a.makeTensorInfo(f,e.dtype,r);break;case"prod":let{outVals:s,outShape:o,outDtype:u}=SB(h.shape,h.dtype,t,l);i=a.makeTensorInfo(o,u,s);break;default:throw Error(`${n} CPU implementation is not yet supported.`)}}else{let t=r9.sizeFromShape(c),r=r9.sizeFromShape(h.shape)/t,s=S7[n]||n5(e.dtype),u=new S8({windowSize:t,inSize:t,batchSize:r,outSize:1},n,a.device.limits.maxComputeWorkgroupSizeX),l=a.runWebGPUProgram(u,[h],s,[{type:"int32",data:[t]}]);o.push(l),i=Su({inputs:{x:l},attrs:{shape:f},backend:a})}return o.forEach(e=>a.disposeData(e.dataId)),i}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ke{constructor(e,t,r){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0,this.op="min"===r?"<":">";let[n,a]=sg.computeOutAndReduceShapes(e,[t]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=wc(this.outputShape),32>r9.sizeFromShape(a)?(this.type="plain",this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=wl(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){let e=this.workgroupSize[0],t=()=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape.${v8(this.inputShape.length-1)}`,r=()=>{let e="";if(1===this.outputShape.length)1!==this.inputShape.length&&(e+="outputCoords,");else for(let t=0;t<this.outputShape.length;t++)e+=`outputCoords.${v8(t)},`;return e};if("shared"!==this.type)return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${r()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${r()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `;{let n=`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `;return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${n}

      ${v7("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${r()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kt=Sm({opType:$e.ASIN}),kr=Sm({opType:$e.ASINH}),kn=Sm({opType:$e.ATAN}),ka=Sg({opType:T9.ATAN2}),ki=Sm({opType:$e.ATANH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ks{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ko{constructor(e,t,r=!1,n=!1,a=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&r)throw Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=r,this.flattenPositions=n,this.includeBatchIndex=a,this.shaderKey=`pool2D_${t}_${r}_${n}_${a}`}getUserCode(){let e;if("avg"===this.poolType)e="resultValue = resultValue + value; count = count + 1.0;";else if(this.computePositions){let t=this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC";e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${t};
      }`}else e="resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}class ku{constructor(e,t,r=!1,n=!1,a=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,"avg"===t&&r)throw Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=r,this.flattenPositions=n,this.includeBatchIndex=a,this.shaderKey=`pool3D_${t}_${r}_${n}_${a}`}getUserCode(){let e;if("avg"===this.poolType)e="resultValue += value; count += 1.0;";else if(this.computePositions){let t=this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC";e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${t};
      }`}else e="resultValue = max(value, resultValue);";let t="resultValue";return"avg"===this.poolType&&(t="resultValue / max(count, 1.0)"),`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kl(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reductionIndices:i,keepDims:s}=n;return S9(a,i,s,"max",r)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kd(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{keepDims:i,axis:s}=n;return S9(a,s,i,"mean",r)}function kh(e,t,r,n){let a;if(1===t.filterWidth&&1===t.filterHeight&&r9.arraysEqual(t.inShape,t.outShape))return Sp({inputs:{x:e},backend:n});if(t.filterWidth===t.inWidth&&t.filterHeight===t.inHeight&&1===t.batchSize&&"VALID"===t.padInfo.type){let a;let i=e.shape.length,s=Su({inputs:{x:e},backend:n,attrs:{shape:[e.shape[i-3]*e.shape[i-2],e.shape[i-1]]}});"avg"===r?a=kd({inputs:{x:s},backend:n,attrs:{axis:0,keepDims:!1}}):(r9.assert("max"===r,()=>`Invalid pool type ${r}`),a=kl({inputs:{x:s},backend:n,attrs:{reductionIndices:0,keepDims:!1}}));let o=Su({inputs:{x:a},backend:n,attrs:{shape:t.outShape}});return n.disposeData(s.dataId),n.disposeData(a.dataId),o}let i=[{type:"int32",data:[t.strideHeight,t.strideWidth]}];return 1===t.filterHeight&&1===t.filterWidth?a=new ks(t):("avg"===r?a=new ko(t,"avg"):(r9.assert("max"===r,()=>`Invalid pool type ${r}`),a=new ko(t,"max")),i.push({type:"int32",data:[t.padInfo.top,t.padInfo.left]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]},{type:"int32",data:[t.inHeight,t.inWidth]},{type:"int32",data:[t.effectiveFilterHeight,t.effectiveFilterWidth]})),n.runWebGPUProgram(a,[e],e.dtype,i)}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kp{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class kc{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kf{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${v5(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e;let t=v5(this.rank),r=function(e){if(1===e)return"sourceLoc";if(e<=6)return km.slice(0,e).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);return e=1===this.start.length?this.outputShape.map((e,t)=>"sourceLoc = uniforms.start + coords;"):this.outputShape.map((e,t)=>`sourceLoc.${km[t]} = uniforms.start.${v8(t)} + coords.${km[t]};`),`
      ${v7("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${t};
          let coords = getCoordsFromIndex(index);
          ${e.join("\n")}
          setOutputAtIndex(index, getSource(${r}));
        }
      }
    `}}let km=["x","y","z","w","u","v"];function kg(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{begin:i,size:s}=n,[o,u]=on.parseSliceParams(a,i,s);if(on.assertParamsValid(a,o,u),r.shouldExecuteOnCPU([a])||"string"===a.dtype){let e=SG(r.tensorMap.get(a.dataId).values,o,u,a.shape,a.dtype);return r.makeTensorInfo(u,a.dtype,e)}if(0===r9.sizeFromShape(u))return r.makeTensorInfo(u,a.dtype,[]);let l=new kf(o,u),d=[{type:"int32",data:o}];return r.runWebGPUProgram(l,[a],a.dtype,d)}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ky=`
  fn bincount_write(index: i32, value: f32) {
    ${v3("&result[index]","value","float32")}
  }
`,kx=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class kb{constructor(e,t,r=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=r,r&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?kx:ky}
  ${v7("index")} {
    ${1===this.rank?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kv{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${v7("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kw=Sg({opType:T9.NOT_EQUAL,dtype:"bool",cpuKernelImpl:SL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(e){let{inputs:t,backend:r}=e,{input:n}=t;return Sp({inputs:{x:r.tensorMap.get(n.dataId).complexTensorInfos.real},backend:r})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kk=Sm({opType:$e.CEIL,cpuKernelImpl:Sb});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kC{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${v7("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kI{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${v7("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kT{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}function k$(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kN{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=sg.computeOutShape(e,1),this.variableNames=e.map((e,t)=>`T${t}`),this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let e=0;e<this.offsetLength;e++)this.uniforms+=`offset${e} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let t=1;t<this.offsetLength;t++)e.push(`else if (yC < uniforms.offset${[t]}){ setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${t-1})); }`);let t=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${v7("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join("\n        ")}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(e){let{inputs:t,backend:r}=e,{input:n}=t;return Sp({inputs:{x:r.tensorMap.get(n.dataId).complexTensorInfos.imag},backend:r})}function kR(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n,i=r9.parseAxisParam(a,t[0].shape)[0],s=t.map(e=>e.shape);sg.assertParamsConsistent(s,i);let o=sg.computeOutShape(t.map(e=>e.shape),i);if(0===r9.sizeFromShape(o))return r.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(e=>r9.sizeFromShape(e.shape)>0);return 1===u.length?Sp({inputs:{x:u[0]},backend:r}):function e(t,r,n){let a=t[0].dtype;if("complex64"===a){let a=t.map(e=>kS({inputs:{input:e},backend:n})),i=t.map(e=>kE({inputs:{input:e},backend:n})),s=e(a,r,n),o=e(i,r,n),u=Sc({inputs:{real:s,imag:o},backend:n});return a.forEach(e=>n.disposeData(e.dataId)),i.forEach(e=>n.disposeData(e.dataId)),n.disposeData(s.dataId),n.disposeData(o.dataId),u}let i=n.shouldExecuteOnCPU(t);if("string"===a&&(i=!0),i){let e=t.map(e=>{let t=r9.sizeFromShape(e.shape.slice(r));return Su({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),i=Sv(e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),sg.computeOutShape(e.map(e=>e.shape),1),a,1===e[0].shape[0]),s=sg.computeOutShape(t.map(e=>e.shape),r),o=n.makeTensorInfo(s,a,i);return e.forEach(e=>n.disposeData(e.dataId)),o}let s=n.device.limits.maxStorageBuffersPerShaderStage-1;if(t.length>s){let a=[];for(let i=0;i<t.length;i+=s){let o=t.slice(i,i+s);a.push(e(o,r,n))}let i=e(a,r,n);for(let e of a)n.disposeData(e.dataId);return i}let{tensors2D:o,outShape:u}=function(e,t,r){let n=sg.computeOutShape(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>Su({inputs:{x:e},backend:r,attrs:{shape:[r9.sizeFromShape(e.shape.slice(0,t)),r9.sizeFromShape(e.shape.slice(t))]}})),outShape:n}}(t,r,n),l=o.map(e=>e.shape),d=new kN(l),h=[],p=Array(l.length-1);if(p.length>0){p[0]=l[0][1],h.push({type:"int32",data:[p[0]]});for(let e=1;e<p.length;e++)p[e]=p[e-1]+l[e][1],h.push({type:"int32",data:[p[e]]})}let c=n.runWebGPUProgram(d,o,o[0].dtype,h);o.forEach(e=>n.disposeData(e.dataId));let f=Su({inputs:{x:c},backend:n,attrs:{shape:u}});return n.disposeData(c.dataId),f}(u,i,r)}class kA{constructor(e,t,r,n,a=!1,i=null,s=!1,o=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=((e.inChannels%4==0||e.inChannels%3==0)&&this.isChannelsLast||e.outWidth%4==0&&!this.isChannelsLast)&&e.outChannels%4==0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=wh(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=wp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!=0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),a&&(this.variableNames.push("bias"),this.variableComponents.push(4)),s&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],a&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=o,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=s,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter==0,this.fitBOuter=r%this.tileBOuter==0,this.fitInner=n%this.tileInner==0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){let e=this.isVec4?w5(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):w9(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t,r,n,a=!1,i=null,s=!1,o=4,u=4,l=4){let d=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,h=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,p=e?"row":"col",c=e?"col":"row",f=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${p} / outWidth;
      let outCol = ${p} % outWidth;

      let WRow = ${c} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${c} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${c} % inChannels;
      var resData = ${v6(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${e?"uniforms.xShape[1]":"uniforms.xShape[2]"} && xCol >= 0 && xCol < ${e?"uniforms.xShape[2]":"uniforms.xShape[3]"}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${(e=>{switch(e){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw Error(`innerElementSize ${e} is not supported.`)}})(o)}
      }
      return resData;`,m=e?t&&n?`
      ${f}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${f}
      }
      return ${v6(o)}(0.0);`:n&&r?`
      ${f}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${f}
      }
      return ${v6(o)}(0.0);`,g=`${(e=>{switch(e){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw Error(`innerElementSize ${e} is not supported.`)}})(u)}`,y=v6(l),x=e?v6(o):v6(u),b=e?v6(u):v6(o);return`
      ${w0(i,s,4===l,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${x} {
        ${e?m:g}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${b} {
        ${e?g:m}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${y}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${h}
        ${w1(a,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k_{constructor(e,t=!1,r=null,n=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=r,this.hasPreluActivationWeights=n,t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${w0(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${w1(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${v7("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kO{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,r=this.isChannelsLast?"coords[1]":"coords[2]",n=this.isChannelsLast?"coords[2]":"coords[1]",a=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${v7("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${r};
        let col = ${n};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${a};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}function kF(e,t){let r=e.length;return r>=3?t?[...e.slice(0,-3),e[r-3]*e[r-2],e[r-1]]:[...e.slice(0,-3),e[r-3],e[r-2]*e[r-1]]:!t&&1===r&&e[0]>1?[e[0],1]:null}function kD({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let u;let l=null!=a,d=null!=i,h="channelsLast"===r.dataFormat,p=h&&r.filterHeight===r.inHeight&&r.filterWidth===r.inWidth&&"VALID"===r.padInfo.type,c=ey.getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!c&&(p||1===r.filterHeight&&1===r.filterWidth&&1===r.dilationHeight&&1===r.dilationWidth&&1===r.strideHeight&&1===r.strideWidth&&("SAME"===r.padInfo.type||"VALID"===r.padInfo.type)))return function({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let u,l;let d="channelsLast"===r.dataFormat,h=d&&r.filterHeight===r.inHeight&&r.filterWidth===r.inWidth&&"VALID"===r.padInfo.type,p=[];if(h){let a=r.inHeight*r.inWidth*r.inChannels;u=Su({inputs:{x:e},backend:n,attrs:{shape:[1,r.batchSize,a]}}),l=Su({inputs:{x:t},backend:n,attrs:{shape:[1,a,r.outChannels]}})}else u=Su({inputs:{x:e},backend:n,attrs:{shape:d?[r.batchSize,r.inHeight*r.inWidth,r.inChannels]:[r.batchSize,r.inChannels,r.inHeight*r.inWidth]}}),l=Su({inputs:{x:t},backend:n,attrs:{shape:[1,r.inChannels,r.outChannels]}});if(p.push(u),p.push(l),null!=i){let e=kF(i.shape,d);null!=e&&(i=Su({inputs:{x:i},backend:n,attrs:{shape:e}}),p.push(i))}if(null!=a){let e=kF(a.shape,d);null!=e&&(a=Su({inputs:{x:a},backend:n,attrs:{shape:e}}),p.push(a))}let c=Sl({a:d?u:l,b:d?l:u,transposeA:!d,transposeB:!1,backend:n,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),f=Su({inputs:{x:c},backend:n,attrs:{shape:r.outShape}});for(let e of(p.push(c),p))n.disposeData(e.dataId);return f}({x:e,filter:t,convInfo:r,backend:n,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s});let f=ey.getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),m=f>-1?f:n.thresholdToIncreaseWorkgroups,g=r.batchSize*Math.ceil(r.outHeight*r.outWidth/32)*Math.ceil(r.outChannels/32);if(ey.getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||g<=m)return function({x:e,filter:t,convInfo:r,backend:n,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:s=0,activation:o=null}){let{filterWidth:u,filterHeight:l,inChannels:d,strideWidth:h,strideHeight:p,padInfo:c,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:x}=r,b="channelsLast"===x,v=u*l*d,w=m*f,S=new kO(b?[r.batchSize,w,v]:[r.batchSize,v,w],b),k=[{type:"int32",data:[c.top,c.left]},{type:"int32",data:[p,h]},{type:"int32",data:[y,g]},{type:"int32",data:[f]},{type:"int32",data:[d*u]},{type:"int32",data:[d]}],C=n.runWebGPUProgram(S,[e],e.dtype,k),I=[];I.push(C);let T=Su({inputs:{x:t},backend:n,attrs:{shape:[1,v,-1]}});if(I.push(T),null!=i){let e=kF(i.shape,b);null!=e&&(i=Su({inputs:{x:i},backend:n,attrs:{shape:e}}),I.push(i))}if(null!=a){let e=kF(a.shape,b);null!=e&&(a=Su({inputs:{x:a},backend:n,attrs:{shape:e}}),I.push(a))}let $=Sl({a:b?C:T,b:b?T:C,transposeA:!b,transposeB:!1,backend:n,bias:a,activation:o,preluActivationWeights:i,leakyreluAlpha:s}),N=Su({inputs:{x:$},backend:n,attrs:{shape:r.outShape}});for(let e of(I.push($),I))n.disposeData(e.dataId);return N}({x:e,filter:t,convInfo:r,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:s,activation:o});let y=[r.padInfo.top,r.padInfo.left],x=[{type:"int32",data:[r.filterHeight,r.filterWidth]},{type:"int32",data:[...y]},{type:"int32",data:[r.strideHeight,r.strideWidth]},{type:"int32",data:[r.dilationHeight,r.dilationWidth]}];if(c)u=new k_(r,l,o,d);else{let e=h?r.outHeight*r.outWidth:r.outChannels,t=h?r.outChannels:r.outHeight*r.outWidth,a=r.filterHeight*r.filterWidth*r.inChannels;x.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[a]}),u=new kA(r,e,t,a,l,o,d,n.adapterInfo.isIntel())}let b=[],v=[e,t];l&&(h||1!==a.shape.length||b.push(a=Su({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}})),v.push(a)),d&&(h||1!==i.shape.length||b.push(i=Su({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}})),v.push(i)),"leakyrelu"===o&&(x.push({type:"float32",data:[s]}),u.uniforms+=" alpha : f32,");let w=n.runWebGPUProgram(u,v,e.dtype,x);for(let e of b)n.disposeData(e.dataId);return w}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kP{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast="channelsLast"===e.dataFormat,this.isVec4=this.isChannelsLast&&e.outChannels%4==0&&e.inChannels%4==0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,r=this.isChannelsLast?3:1,n=`
    ${v7()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${n}
    `:`
    ${v7("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${r}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class kM{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${v7("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class kL{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${v7("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class kB{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${v7("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class kz{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,r9.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4==0&&e.outChannels%4==0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=wh(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=wp(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){let e=this.isVec4?w5(this.elementsPerThread,this.workgroupSize):w9(this.elementsPerThread,this.workgroupSize);return`
    ${/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e=4){let t=`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${v6(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${v6(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`,r=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${t}
      }
      return ${v6(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${v6(e)} {
    ${r}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${v6(e)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${(e=>{switch(e){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw Error(`innerElementSize ${e} is not supported.`)}})(e)}
    }
    return ${v6(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${v6(e)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kU{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kV=Sm({opType:$e.COS}),kW=Sm({opType:$e.COSH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kG{constructor(e,t,r,n){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;let[a]=t;this.outputShape=[a,r[0],r[1],e],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId="bilinear"===n?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[r,n,a]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[i,s,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${r});
        let width_ratio = f32(${i});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${n};
        let width_scale = ${s};
        let in_y = ${a};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}(Tz=$t||($t={})).Prod="*",Tz.Sum="+";class kH{constructor(e,t,r,n){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=r,this.reverse=n,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op===$t.Prod?"1.0":"0.0",r=this.exclusive?t:`getX(${kj(e,"coords",this.op)})`,n=this.outputShape[this.outputShape.length-1],a="",i="";return this.exclusive?(a=this.reverse?`end != ${n-1}`:"end != 0",i=this.reverse?"end + 1":"end - 1"):(a=this.reverse?`end + pow2 < ${n}`:"end >= pow2",i=this.reverse?"end + pow2":"end - pow2"),`
      ${v7("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${kK(e,"coords",this.op)};
         var val = ${r};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${a}) {
           let idx = ${i};
           ${kK(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${kj(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function kj(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}function kK(e,t,r){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative ${r} for rank ${e} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(e,t,r,n,a,i){let s=t.shape.length,o=sg.getAxesPermutation([n],s),u=t;null!=o&&(u=S5({inputs:{x:t},backend:r,attrs:{perm:o}}));let l=sg.getInnerMostAxes(1,s)[0];if(l!==s-1)throw Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let d=u.shape[l],h=Sp({inputs:{x:u},backend:r});for(let t=0;t<=Math.ceil(Math.log2(d))-1;t++){let n=new kH(e,u.shape,!1,i),a=h,s=[{type:"float32",data:[t]}];h=r.runWebGPUProgram(n,[h],h.dtype,s),r.disposeData(a.dataId)}if(a){let t=new kH(e,u.shape,a,i),n=h;h=r.runWebGPUProgram(t,[h],h.dtype,[{type:"float32",data:[0]}]),r.disposeData(n.dataId)}if(null!=o){let e=S5({inputs:{x:h},backend:r,attrs:{perm:sg.getUndoAxesPermutation(o)}});return r.disposeData(h.dataId),r.disposeData(u.dataId),e}return h}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kX{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kY{constructor(e,t,r,n=!1,a=null,i=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),n&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.addBias=n,this.activation=a,this.hasPreluActivation=i,this.filterHeight=t,this.filterWidth=r,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],r=this.workgroupSize[1]+this.filterHeight-1,n=this.workgroupSize[0]+this.filterWidth-1;return`
      ${w0(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${n}>, ${r}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${v7()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${n}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${w1(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kQ{constructor(e,t=!1,r=null,n=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;let a=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=wc(a),this.dispatch=wl(this.dispatchLayout,a,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),r9.assert("channelsLast"===e.dataFormat,()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=r,this.hasPreluActivation=n,this.shaderKey=`depthwiseVec4_${r}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){let e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,r=this.convInfo.strideWidth;return`
      ${w0(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${v7("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${r}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${r} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${w1(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kZ{constructor(e,t=!1,r=null,n=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,t&&this.variableNames.push("bias"),n&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=r,this.hasPreluActivation=n,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${w0(this.activation,this.hasPreluActivation,!1,4)}

      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${w1(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kJ{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class k0{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k1{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k2{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${v7("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k3{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(e.outShape),this.dispatch=wl(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==t&&"int32"!==t)throw Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${v7("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${v3("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class k4{constructor(e,t,r){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=wc(e.outShape),this.dispatch=wl(this.dispatchLayout,e.outShape,this.workgroupSize),"float32"!==r&&"int32"!==r)throw Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${r} type.`);this.type=r,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${v7("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${v3("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k6{constructor(e,t,r){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=T8.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=r,this.shaderKey=`draw_${t}_${r}`}getUserCode(){let e;let t="float32"===this.type?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${v7("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let k5=Sg({opType:T9.MUL,cpuKernelImpl:SP,supportsComplex:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,keepDims:s}=n;return S9(a,i,s,"sum",r)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let k7=Sm({opType:$e.ELU}),k9=Sg({opType:T9.EQUAL,dtype:"bool",cpuKernelImpl:Sw}),Ce=Sm({opType:$e.ERF}),Ct=Sm({opType:$e.EXP,cpuKernelImpl:SS,dtype:"float32"});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cr(e){let{inputs:t,attrs:r,backend:n}=e,{dim:a}=r,{input:i}=t,s=i.shape.length,o=i.shape.slice(),u=a;return a<0&&(r9.assert(-(s+1)<=a,()=>`Axis must be in the interval [${-(s+1)}, ${s}]`),u=s+a+1),o.splice(u,0,1),Su({inputs:{x:i},backend:n,attrs:{shape:o}})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cn=Sm({opType:$e.EXPM1,cpuKernelImpl:Sk});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ca{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){let e="real"===this.component?"return real * expR - imag * expI;":"return real * expI + imag * expR;";return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${e}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}function Ci(e,t,r){let n=r.tensorMap.get(e.dataId),a=r9.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],s=[],o=Su({inputs:{x:e},backend:r,attrs:{shape:[a/i,i]}});s.push(o);let u=o.shape,l=new Ca("real",u),d=new Ca("imag",u),h=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:u},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:u}],p=[{type:"float32",data:[t?2*Math.PI:-2*Math.PI]},{type:"float32",data:[t?u[1]:1]}],c=r.runWebGPUProgram(l,h,"float32",p);s.push(c);let f=r.runWebGPUProgram(d,h,"float32",p);s.push(f);let m=Sc({inputs:{real:c,imag:f},backend:r});s.push(m);let g=Su({inputs:{x:m},backend:r,attrs:{shape:e.shape}});return s.forEach(e=>r.disposeData(e.dataId)),g}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cs{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Co=Sm({opType:$e.FLOOR,cpuKernelImpl:SC}),Cu=Sg({opType:T9.FLOOR_DIV,cpuKernelImpl:SI,dtype:"int32"});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cl{constructor(e,t,r=!1){this.pixelsOpType=T8.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=r,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)",t=this.importVideo?"texture_external":"texture_2d<f32>";return`
      @binding(1) @group(0) var src: ${t};
      ${v7("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}let Cd=ey.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ch{constructor(e,t,r,n,a){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],sg.assertAndGetBroadcastShape(e,t),sg.assertAndGetBroadcastShape(e,r),this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),null!=n&&(sg.assertAndGetBroadcastShape(e,n),this.variableNames.push("offset")),null!=a&&(sg.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale")),this.offsetShape=n,this.scaleShape=a,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetByOutputIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleByOutputIndex(index)"),`
      ${v7("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cp{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${v5(e)},`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cc{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){let e=function(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let n=0;n<e.length;n++)2===n?r.push("indexZ"):r.push(`${t[n]}`);return r.join()}(this.aShape);return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function Cf(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,indices:i}=t,{axis:s,batchDims:o}=n,u=r9.parseAxisParam(s,a.shape)[0],l=sg.segment_util.collectGatherOpShapeInfo(a,i,u,o),d=r9.sizeFromShape(i.shape),h=[],p=Su({inputs:{x:a},backend:r,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),c=Su({inputs:{x:i},backend:r,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(c);let f=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(r.shouldExecuteOnCPU([a,i])){let e=r.tensorMap.get(c.dataId).values,t=iY(c.shape,c.dtype,e),n=r.tensorMap.get(p.dataId).values,a=S$(iY(p.shape,p.dtype,n),t,f);return h.forEach(e=>r.disposeData(e.dataId)),r.makeTensorInfo(l.outputShape,a.dtype,a.values)}let m=new Cc(p.shape,f),g=r.runWebGPUProgram(m,[p,c],p.dtype);h.push(g);let y=Su({inputs:{x:g},backend:r,attrs:{shape:l.outputShape}});return h.forEach(e=>r.disposeData(e.dataId)),y}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cm=Sg({opType:T9.GREATER,cpuKernelImpl:SE,dtype:"bool"}),Cg=Sg({opType:T9.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:SN}),Cy=Sm({opType:$e.IS_FINITE,dtype:"bool"}),Cx=Sm({opType:$e.IS_INF,dtype:"bool"}),Cb=Sm({opType:$e.IS_NAN,dtype:"bool"}),Cv=Sg({opType:T9.LESS,dtype:"bool",cpuKernelImpl:SA}),Cw=Sg({opType:T9.LESS_EQUAL,dtype:"bool",cpuKernelImpl:SR});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CS{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ck=Sm({opType:$e.LOG,cpuKernelImpl:S_}),CC=Sm({opType:$e.LOG1P}),CI=Sg({opType:T9.LOGICAL_AND,dtype:"bool"}),CT=Sm({opType:$e.LOGICAL_NOT}),C$=Sg({opType:T9.LOGICAL_OR}),CN=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class CE{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${CN}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class CR{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,r9.assert(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=wl(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${v7()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${CN}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CA{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let C_=Sg({opType:T9.MAX,cpuKernelImpl:SF});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CO{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class CF{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CD=Sg({opType:T9.MIN,cpuKernelImpl:SD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CP{constructor(e,t,r){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]),this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.offset="reflect"===r?0:1,this.shaderKey=`mirrorPad_${r}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((e,t)=>`uniforms.pad${t}[0]`).join(","),r=this.xShape.map((t,r)=>`uniforms.pad${r}[0] + uniforms.xShape${e>1?`[${r}]`:""}`).join(","),n=1===e?"start":"start[i]",a=1===e?"end":"end[i]",i=1===e?"outC":"outC[i]",s=v5(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let start = ${s}(${t});
          let end = ${s}(${r});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${i} < ${n}) {
              ${i} = ${n} * 2 - ${i} - ${this.offset};
            } else if(${i} >= ${a}) {
              ${i} = (${a} - 1) * 2 - ${i} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CM=Sg({opType:T9.MOD});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CL{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${v7("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CB{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${v7("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}function Cz(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{dim:i}=n,s=Su({inputs:{x:a},backend:r,attrs:{shape:[r9.sizeFromShape(a.shape)/a.shape[i],a.shape[i]]}}),o=new CB(s.shape),u=r.runWebGPUProgram(o,[s],a.dtype),l=Su({inputs:{x:u},backend:r,attrs:{shape:a.shape}});return r.disposeData(s.dataId),r.disposeData(u.dataId),l}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CU{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${v7("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(e){let{inputs:t,backend:r}=e,{x:n}=t;if("complex64"!==n.dtype)return So({attrs:{shape:n.shape,dtype:n.dtype,value:"string"===n.dtype?"":0},backend:r});{let e=kS({inputs:{input:n},backend:r}),t=CV({inputs:{x:e},backend:r}),a=kE({inputs:{input:n},backend:r}),i=CV({inputs:{x:a},backend:r}),s=Sc({inputs:{real:t,imag:i},backend:r});return r.disposeData(e.dataId),r.disposeData(t.dataId),r.disposeData(a.dataId),r.disposeData(i.dataId),s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CW(e,t=!1){let r=e.length,n=v5(r),a=e.map((e,t)=>`uniforms.pad${t}[0]`).join(","),i=e.map((e,t)=>`uniforms.pad${t}[0] + uniforms.xShape${r>1?`[${t}]`:""}`).join(","),s=r>1?`${n}(${a})`:`${a}`,o=r>1?`${n}(${i})`:`${i}`,u=r>1?"any(paddedCoords < start)":"paddedCoords < start",l=r>1?"any(paddedCoords >= end)":"paddedCoords >= end",d=r>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r):"coords";return`
        let start = ${s};
        let end = ${o};
        if (${u} || ${l}) {
          setOutputAtIndex(index, ${t?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${d}));
        }
  `}class CG{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((t,r)=>t[0]+e[r]+t[1]),this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${CW(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let CH=Sg({opType:T9.POW}),Cj=Sg({opType:T9.DIV}),CK=Sm({opType:$e.RECIPROCAL}),Cq=Sm({opType:$e.RELU}),CX=Sm({opType:$e.RELU6});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CY{constructor(e,t,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,r,e[3]],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CQ{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CZ{constructor(e,t,r,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,r,e[3]],this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=n,this.shaderKey=`resizeNearest_${n}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CJ{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C0{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){let e=`
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    `;return`
      ${e}
      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C1{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,"number"==typeof t?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${v7("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let C2=Sm({opType:$e.ROUND}),C3=Sm({opType:$e.RSQRT,cpuKernelImpl:SU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C4{constructor(e,t,r,n,a,i,s,o=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=i,this.type=s,this.sumDupeIndices=o,this.dispatchLayout=wc(e),this.dispatch=wl(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${r}_${n}_${this.sliceDimGreaterThanOne}_${s}_${o}_${a.length}`;let u=v5(a.length);this.uniforms=`sliceDim : i32, strides: ${u}, updatesSize: i32,`,this.updatesRank=n,this.indicesRank=r}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");let t=`getIndices(${e})`,r=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",n="",a="";1===this.dispatchLayout.x.length?(n="flattenedIndex",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):2===this.dispatchLayout.x.length&&(n="vec2<i32>(flattenedIndex, coords[1])",a=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=Array.from({length:this.updatesRank},(e,t)=>`coords[${t}]`),s=`getUpdates(${i.join(", ")})`;return`
    ${a}
      ${v7("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${r};
          }
          let updateValue =
              ${wa(this.type)}(${s});
          let flatIndex = getOutputIndexFromCoords(${n});

          ${this.sumDupeIndices?v3("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C6{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){let e="left"===this.side?"<":"<=";return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${e} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${v7("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C5{constructor(e,t,r){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=r,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[],a=[];for(let e=0;e<this.outputShape.length;e++)a.push(`${r[e]}`),e<this.cRank&&n.push(`${r[e]}`);e=n.join(),t=a.join()}return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let C8=Sm({opType:$e.SELU}),C7=Sm({opType:$e.SIGMOID}),C9=Sm({opType:$e.SIGN}),Ie=Sm({opType:$e.SIN}),It=Sm({opType:$e.SINH}),Ir=Sm({opType:$e.SOFTPLUS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class In{constructor(e,t,r,n,a,i){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;let s=Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];this.outputShape=s,this.newDim=a,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${v5(n.length)}, paddedXShapeStrides : ${v5(i)}, `,r.map((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${a}`}getUserCode(){let e=v5(this.outputShape.length),t=S6(this.newDim);return`
      ${wr(this.paddedXShape,"PaddedX")}
      ${v7("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${CW(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ia{constructor(e,t,r){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=r,this.dispatchLayout=wc([t]),this.dispatch=wl(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${v3("&result[outIndex]","value",this.type)}
      }
    }
  `}}class Ii{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=wc(t),this.dispatch=wl(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${v3("&result[segmentId]","1","int32")}
      }
    }
  `}}class Is{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=wc(e),this.dispatch=wl(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${"float32"===this.type?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}function Io(e,t,r,n=!1,a){let i;let s=r9.sizeFromShape(e.shape)/e.shape[0],o=e.dtype,u=r9.sizeFromShape(t.shape),l=a.readSync(r.dataId),d=u>0?l[u-1]+1:0,h=e.shape.slice();h[0]=d;let p=u*s,c=So({backend:a,attrs:{shape:h,value:0,dtype:o}});i=new Ia(h,p,o);let f=[{type:"int32",data:[s]},{type:"int32",data:[p]}],m=a.runWebGPUProgram(i,[e,t,r],o,f,c);if(n)return m;let g=So({backend:a,attrs:{shape:[d],value:0,dtype:"int32"}});i=new Ii(d,r.shape);let y=a.runWebGPUProgram(i,[r],"int32",null,g),x=So({backend:a,attrs:{shape:h,value:0,dtype:o}});i=new Is(h,o),f=[{type:"int32",data:[s]}];let b=a.runWebGPUProgram(i,[m,y],o,f,x);return a.disposeData(m.dataId),a.disposeData(y.dataId),b}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iu{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;let r=Array(e.length);for(let n=0;n<r.length;n++)r[n]=e[n]*t[n];this.outputShape=r,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;let r=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let a=0;a<e;a++)n.push(`(${r[a]} % ${t}aShape[${a}])`);return n.join()}(this.rank,"uniforms.");return`
      ${v7("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function Il(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{reps:i}=n;if(r.shouldExecuteOnCPU([a])||"string"===a.dtype||a.shape.length>=5){let e=r.readSync(a.dataId),t="string"===a.dtype?e.map(e=>r9.decodeString(e)):e,n=Sq(iY(a.shape,a.dtype,t),i);return r.makeTensorInfo(n.shape,n.dtype,n.values)}let s=new Iu(a.shape,i);return r.runWebGPUProgram(s,[a],a.dtype)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Id=Sm({opType:$e.SQRT}),Ih=Sg({opType:T9.SQUARED_DIFFERENCE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ip{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);let t=v5(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(1===e)t="coords * uniforms.strides + uniforms.begin";else{let e=0;t=this.outputShape.map((t,r)=>(e++,1===this.outputShape.length?`coords * uniforms.strides[${r}] + uniforms.begin[${r}]`:`coords[${e-1}] * uniforms.strides[${r}] + uniforms.begin[${r}]`)).join(",")}return`
       ${v7("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ic=Sg({opType:T9.SUB,cpuKernelImpl:SK,supportsComplex:!0}),If=Sm({opType:$e.TAN}),Im=Sm({opType:$e.TANH});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ig{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${v7("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class Iy{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${v7("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}function Ix(e,t){null!==t&&e.disposeData(t.dataId)}function Ib(e){let t=1;for(;t<e;)t*=2;return t}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iv{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=wc(this.outputShape),this.dispatch=wl(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${v7("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iw{constructor(e,t,r){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=wc(e),this.dispatch=wl(this.dispatchLayout,e,this.workgroupSize),"float32"!==r&&"int32"!==r)throw Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${r} type.`);this.type=r,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${v7("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${v3("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}for(let e of[{kernelName:rZ,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:i,bias:s,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:d,leakyreluAlpha:h}=n;return Sl({a:a,b:i,transposeA:u,transposeB:l,backend:r,bias:s,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}},{kernelName:"Abs",backendName:"webgpu",kernelFunc:SZ},{kernelName:e_,backendName:"webgpu",kernelFunc:SJ},{kernelName:eO,backendName:"webgpu",kernelFunc:S0},{kernelName:"Add",backendName:"webgpu",kernelFunc:S1},{kernelName:eF,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e;if(1===t.length)return Sp({inputs:{x:t[0]},backend:r});let n=t.map(e=>e.dtype).reduce((e,t)=>n6(e,t)),a=new S2(t.map(e=>e.shape));return r.runWebGPUProgram(a,t,n)}},{kernelName:"All",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{keepDims:i,axis:s}=n;return S9(a,s,i,"all",r)}},{kernelName:"Any",backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{keepDims:i,axis:s}=n;return S9(a,s,i,"any",r)}},{kernelName:eD,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i}=n,s=r9.parseAxisParam(i,a.shape),o=sg.getAxesPermutation(s,a.shape.length),u=a,l=[];null!=o&&(l.push(u=S5({inputs:{x:a},backend:r,attrs:{perm:o}})),s=sg.getInnerMostAxes(s.length,u.shape.length)),sg.assertAxesAreInnerMostDims("argMax",[s[0]],u.shape.length);let d=new ke(u.shape,s[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=r.runWebGPUProgram(d,[u],"int32",h);return l.forEach(e=>r.disposeData(e.dataId)),p}},{kernelName:eP,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i}=n,s=r9.parseAxisParam(i,a.shape),o=sg.getAxesPermutation(s,a.shape.length),u=a,l=[];null!=o&&(l.push(u=S5({inputs:{x:a},backend:r,attrs:{perm:o}})),s=sg.getInnerMostAxes(s.length,u.shape.length)),sg.assertAxesAreInnerMostDims("argMin",[s[0]],u.shape.length);let d=new ke(u.shape,s[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=r.runWebGPUProgram(d,[u],"int32",h);return l.forEach(e=>r.disposeData(e.dataId)),p}},{kernelName:eM,backendName:"webgpu",kernelFunc:kt},{kernelName:eL,backendName:"webgpu",kernelFunc:kr},{kernelName:eB,backendName:"webgpu",kernelFunc:kn},{kernelName:eU,backendName:"webgpu",kernelFunc:ka},{kernelName:ez,backendName:"webgpu",kernelFunc:ki},{kernelName:eV,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n,l=sg.computePool2DInfo(a.shape,i,s,1,o,u);return kh(a,l,"avg",r)}},{kernelName:eG,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:l}=n,d=sg.computePool3DInfo(a.shape,i,s,[1,1,1],o,l,u),h=new ku(d,"avg"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return r.runWebGPUProgram(h,[a],a.dtype,p)}},{kernelName:eH,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=n,d=sg.computePool3DInfo(i.shape,s,o,1,u,l),h=new kc(d),p=1/(d.filterDepth*d.filterHeight*d.filterWidth),c=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[p]}];return r.runWebGPUProgram(h,[a],i.dtype,c)}},{kernelName:eW,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i}=t;wg([a,i],"avgPoolGrad");let{filterSize:s,strides:o,pad:u}=n,l=sg.computePool2DInfo(i.shape,s,o,1,u),d=new kp(l),h=1/(l.filterHeight*l.filterWidth),p=[{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.effectiveFilterHeight-1-l.padInfo.top,l.effectiveFilterWidth-1-l.padInfo.left]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]},{type:"int32",data:[l.effectiveFilterHeight,l.effectiveFilterWidth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"float32",data:[h]}];return r.runWebGPUProgram(d,[a],i.dtype,p)}},{kernelName:ej,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{a:a,b:i}=t,{transposeA:s,transposeB:o}=n;return Sl({a:a,b:i,transposeA:s,transposeB:o,backend:r})}},{kernelName:eK,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:i,crops:s}=n;r9.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=i.reduce((e,t)=>e*t),u=sg.getReshaped(a.shape,i,o),l=sg.getPermuted(u.length,i.length),d=sg.getReshapedPermuted(a.shape,i,o),h=sg.getSliceBeginCoords(s,i.length),p=sg.getSliceSize(d,s,i.length),c=[],f=Su({inputs:{x:a},backend:r,attrs:{shape:u}}),m=S5({inputs:{x:f},backend:r,attrs:{perm:l}}),g=Su({inputs:{x:m},backend:r,attrs:{shape:d}}),y=kg({inputs:{x:g},backend:r,attrs:{begin:h,size:p}});return c.push(f),c.push(m),c.push(g),c.forEach(e=>r.disposeData(e.dataId)),y}},{kernelName:eq,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:i}=t,{size:s}=n,o=r9.sizeFromShape(a.shape),u=r9.sizeFromShape(i.shape)>0,l=i.dtype,d=So({backend:r,attrs:{shape:[s],value:0,dtype:l}}),h=new kb([o],u),p=[{type:"int32",data:[s]}],c=u?[a,i]:[a];return r.runWebGPUProgram(h,c,l,p,d)}},{kernelName:eY,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{s0:n,s1:a}=t;if(r.shouldExecuteOnCPU([n,a])){let e=r.tensorMap.get(n.dataId),t=r.tensorMap.get(a.dataId),i=e.values,s=t.values,o=sg.assertAndGetBroadcastShape(Array.from(i),Array.from(s));return r.makeTensorInfo([o.length],"int32",Int32Array.from(o))}let i=r9.sizeFromShape(n.shape),s=r9.sizeFromShape(a.shape),o=new kv(Math.max(i,s)),u=[{type:"int32",data:[i]},{type:"int32",data:[s]}];return r.runWebGPUProgram(o,[n,a],"int32",u)}},{kernelName:eQ,backendName:"webgpu",kernelFunc:function e(t){let{inputs:r,backend:n,attrs:a}=t,{x:i}=r,{dtype:s}=a;if("complex64"===s){if("complex64"===i.dtype)return Sp({inputs:{x:i},backend:n});let t=l8(i.shape),r=e({inputs:{x:i},backend:n,attrs:{dtype:"float32"}}),a=Sc({inputs:{real:r,imag:t},backend:n});return t.dispose(),n.disposeData(r.dataId),a}if("complex64"===i.dtype){let t=kS({inputs:{input:i},backend:n}),r=e({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeData(t.dataId),r}if(!r9.hasEncodingLoss(i.dtype,s)){let e=Sp({inputs:{x:i},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([i])){let[e,t,r]=Sx(n.tensorMap.get(i.dataId).values,i.shape,i.dtype,s);return n.makeTensorInfo(e,t,r)}if("int32"===s)return(/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e,t){let r=new Sf(e.shape,$e.TO_INT),n=t.runWebGPUProgram(r,[e],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}(i,n));if("bool"===s){let e=n.makeTensorInfo([],"bool",r9.getTypedArrayFromDType("bool",1)),t=kw({inputs:{a:i,b:e},backend:n});return n.disposeData(e.dataId),t}throw Error(`Error in Cast: failed to cast ${i.dtype} to ${s}`)}},{kernelName:eZ,backendName:"webgpu",kernelFunc:kk},{kernelName:eJ,backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{clipValueMin:s,clipValueMax:o}=a;return t=r9.sizeFromShape(i.shape)%4==0?new kC(i.shape):new kI(i.shape),n.runWebGPUProgram(t,[i],i.dtype,[{type:"float32",data:[s]},{type:"float32",data:[o]}])}},{kernelName:e0,backendName:"webgpu",kernelFunc:Sc},{kernelName:e1,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=r.tensorMap.get(n.dataId),i=new kT(n.shape),s=[k$(n,a.complexTensorInfos.real),k$(n,a.complexTensorInfos.imag)];return r.runWebGPUProgram(i,s,s[0].dtype)}},{kernelName:e2,backendName:"webgpu",kernelFunc:kR},{kernelName:e3,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,attrs:r,backend:n}=e,{x:a,filter:i}=t,{strides:s,pad:o,dataFormat:u,dilations:l,dimRoundingMode:d}=r,h=sg.convertConv2DDataFormat(u),p=sg.computeConv2DInfo(a.shape,i.shape,s,l,o,d,!1,h);return kD({x:a,filter:i,convInfo:p,backend:n})}},{kernelName:e4,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:i}=t,{strides:s,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:d}=n,h=sg.convertConv2DDataFormat(u),p=sg.computeConv2DInfo(a.shape,d,s,1,o,l,!1,h),c=new kM(p),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]}];return r.runWebGPUProgram(c,[a,i],a.dtype,f)}},{kernelName:e6,backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{dy:i,filter:s}=r,{inputShape:o,strides:u,pad:l,dataFormat:d,dimRoundingMode:h}=a,p=sg.convertConv2DDataFormat(d),c=sg.computeConv2DInfo(o,s.shape,u,1,l,h,!1,p),f=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize,c.outHeight,c.outWidth,c.outChannels]}];if(ey.getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||"channelsLast"!==c.dataFormat)t=new kP(c);else{t=new kz(c);let e=c.inHeight*c.inWidth,r=c.inChannels,n=c.filterHeight*c.filterWidth*c.outChannels;f.push({type:"uint32",data:[e]},{type:"uint32",data:[r]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(t,[i,s],"float32",f)}},{kernelName:e5,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=n,l=sg.computeConv3DInfo(a.shape,i.shape,s,u,o),d=[l.padInfo.front,l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationDepth,l.dilationHeight,l.dilationWidth]}],p=new kU(l),c=n6(a.dtype,i.dtype);return r.runWebGPUProgram(p,[a,i],c,h)}},{kernelName:e8,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:i}=t,{strides:s,pad:o,filterShape:u}=n,l=sg.computeConv3DInfo(a.shape,u,s,1,o),d=new kL(l),h=[{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.batchSize]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.inDepth]},{type:"int32",data:[l.inHeight]},{type:"int32",data:[l.inWidth]}];return r.runWebGPUProgram(d,[a,i],i.dtype,h)}},{kernelName:e7,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:i}=t,{strides:s,pad:o,inputShape:u}=n,l=sg.computeConv3DInfo(u,i.shape,s,1,o),d=new kB(l),h=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[l.filterDepth-1-l.padInfo.front,l.filterHeight-1-l.padInfo.top,l.filterWidth-1-l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.outChannels]}];return r.runWebGPUProgram(d,[a,i],a.dtype,h)}},{kernelName:"Cos",backendName:"webgpu",kernelFunc:kV},{kernelName:e9,backendName:"webgpu",kernelFunc:kW},{kernelName:tr,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{image:a,boxes:i,boxInd:s}=t,{cropSize:o,method:u,extrapolationValue:l}=n,d=new kG(a.shape[3],i.shape,o,u);return r.runWebGPUProgram(d,[a,i,s],"float32",[{type:"float32",data:[l]}])}},{kernelName:te,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=n;return kq($t.Prod,a,r,i,s,o)}},{kernelName:tt,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,exclusive:s,reverse:o}=n;return kq($t.Sum,a,r,i,s,o)}},{kernelName:tn,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,weights:i}=t,{size:s,binaryOutput:o}=n,u=1===a.shape.length,l=r9.sizeFromShape(i.shape)>0,d=i.dtype,h=u?[a.shape[0]]:[a.shape[0],a.shape[1]],p=So({backend:r,attrs:{shape:u?[s]:[a.shape[0],s],value:0,dtype:d}}),c=new kb(h,l,o),f=[{type:"int32",data:[s]}],m=l?[a,i]:[a];return r.runWebGPUProgram(c,m,d,f,p)}},{kernelName:ta,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockSize:i,dataFormat:s}=n,o=a.shape[0],u="NHWC"===s?a.shape[1]:a.shape[2],l="NHWC"===s?a.shape[2]:a.shape[3],d="NHWC"===s?a.shape[3]:a.shape[1],h=u*i,p=l*i,c=d/(i*i),f=new kX("NHWC"===s?[o,h,p,c]:[o,c,h,p],s);return r.runWebGPUProgram(f,[a],a.dtype,[{type:"int32",data:[i]}])}},{kernelName:ts,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,dy:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,filterShape:d}=n,h=sg.computeConv2DInfo(a.shape,d,s,o,u,l,!0),p=new kJ(h),c=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return r.runWebGPUProgram(p,[a,i],"float32",c)}},{kernelName:to,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,filter:i}=t,{strides:s,dilations:o,pad:u,dimRoundingMode:l,inputShape:d}=n,h=sg.computeConv2DInfo(d,i.shape,s,o,u,l,!0),p=new k0(h),c=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return r.runWebGPUProgram(p,[a,i],a.dtype,c)}},{kernelName:ti,backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s}=r,{strides:o,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}=a,p=sg.convertConv2DDataFormat(l),c=d;null==c&&(c=[1,1]);let f=sg.computeConv2DInfo(i.shape,s.shape,o,c,u,h,!0,p),m=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],g="channelsLast"===f.dataFormat;return!g&&f.inHeight>16&&f.inWidth>16&&1===f.strideHeight&&1===f.strideWidth&&1===f.dilationWidth&&1===f.dilationHeight&&f.inChannels===f.outChannels?t=new kY(f.outShape,f.filterHeight,f.filterWidth):g&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&1===f.dilationHeight&&1===f.dilationWidth&&f.inChannels%4==0?(t=new kQ(f),m.push({type:"int32",data:[t.virtualWidth]})):(t=new kZ(f),m.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),n.runWebGPUProgram(t,[i,s],i.dtype,m)}},{kernelName:tu,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{x:n}=t,a=[...n.shape,...n.shape],i=r9.sizeFromShape(n.shape),s=Su({inputs:{x:n},backend:r,attrs:{shape:[i]}}),o=new k1(i),u=r.runWebGPUProgram(o,[s],s.dtype),l=Su({inputs:{x:u},backend:r,attrs:{shape:a}});return r.disposeData(s.dataId),r.disposeData(u.dataId),l}},{kernelName:tl,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:i}=t,{strides:s,pad:o,dilations:u}=n,l=sg.computeDilation2DInfo(a.shape,i.shape,s,o,"NHWC",u),d=[l.padInfo.top,l.padInfo.left],h=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[...d]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]}],p=new k2(l);return r.runWebGPUProgram(p,[a,i],a.dtype,h)}},{kernelName:"Dilation2DBackpropFilter",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:i,dy:s}=t,{strides:o,pad:u,dilations:l}=n,d=sg.computeDilation2DInfo(a.shape,i.shape,o,u,"NHWC",l),h=i.dtype,p=new k4(d,i.shape,h),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[r9.sizeFromShape(d.outShape)]}],f=So({backend:r,attrs:{shape:i.shape,value:0,dtype:h}});return r.runWebGPUProgram(p,[a,i,s],h,c,f)}},{kernelName:"Dilation2DBackpropInput",backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:i,dy:s}=t,{strides:o,pad:u,dilations:l}=n,d=sg.computeDilation2DInfo(a.shape,i.shape,o,u,"NHWC",l),h=a.dtype,p=new k3(d,h),c=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[r9.sizeFromShape(d.outShape)]}],f=So({backend:r,attrs:{shape:d.inShape,value:0,dtype:h}});return r.runWebGPUProgram(p,[a,i,s],h,c,f)}},{kernelName:td,backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{image:i}=r,{canvas:s,options:o}=a,[u,l]=i.shape.slice(0,2),{imageOptions:d}=o||{},h=(null==d?void 0:d.alpha)||1,p=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",c=[u,l],f=new k6(c,i.dtype,p);s.width=l,s.height=u;let m="webgpu",g=s.getContext(m);g||(g=(t=new OffscreenCanvas(l,u)).getContext(m));let y=3===i.shape.length?i.shape[2]:1;g.configure({device:n.device,format:p,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});let x="int32",b=n.makeTensorInfo(c,x),v=n.tensorMap.get(b.dataId);if(v.resource=g.getCurrentTexture(),v.external=!0,n.runWebGPUProgram(f,[i],x,[{type:"uint32",data:[y]},{type:"float32",data:[h]}],b),t){let e=s.getContext("2d");if(!e)throw Error("Please make sure this canvas has only been used for 2d or webgpu context!");e.drawImage(t,0,0)}return n.disposeData(b.dataId),i}},{kernelName:tp,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{equation:a}=n,{allDims:i,summedDims:s,idDims:o}=sg.decodeEinsumEquation(a,t.length);sg.checkEinsumDimSizes(i.length,o,t);let{path:u,steps:l}=sg.getEinsumComputePath(s,o),d=l.length,h=null,p=i.length,c=[];for(let e=0;e<d;++e){for(let n of l[e]){let e;let{permutationIndices:a,expandDims:i}=sg.getEinsumPermutation(p,o[n]);sg.isIdentityPermutation(a)?e=t[n]:(e=S5({inputs:{x:t[n]},backend:r,attrs:{perm:a}}),c.push(e));let s=e.shape.slice();for(let e=0;e<i.length;++e)s.splice(i[e],0,1);r9.arraysEqual(e.shape,s)||(e=Su({inputs:{x:e},backend:r,attrs:{shape:s}}),c.push(e)),null===h?h=e:(h=k5({inputs:{a:e,b:h},backend:r}),c.push(h))}e<d-1&&(u[e]>=0&&(h=k8({inputs:{x:h},backend:r,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),c.push(h)),p--)}for(let e of c)e!==h&&r.disposeData(e.dataId);return h}},{kernelName:"Elu",backendName:"webgpu",kernelFunc:k7},{kernelName:tc,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:r}=e,{dy:n,y:a}=t,i=new Sh(T9.ELU_DER,n.shape,a.shape);return r.runWebGPUProgram(i,[n,a],n.dtype)}},{kernelName:tf,backendName:"webgpu",kernelFunc:k9},{kernelName:"Erf",backendName:"webgpu",kernelFunc:Ce},{kernelName:"Exp",backendName:"webgpu",kernelFunc:Ct},{kernelName:tm,backendName:"webgpu",kernelFunc:Cr},{kernelName:tg,backendName:"webgpu",kernelFunc:Cn},{kernelName:"FFT",backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{input:n}=t;return Ci(n,!1,r)}},{kernelName:ty,backendName:"webgpu",kernelFunc:So},{kernelName:tx,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:r}=e,n=new Cs(r.shape);return t.runWebGPUProgram(n,[r],r.dtype)}},{kernelName:rY,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{pixels:a}=t,{numChannels:i}=n;if(null==a)throw Error("pixels passed to tf.browser.fromPixels() can not be null");let s="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,l="undefined"!=typeof HTMLCanvasElement&&a instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&a instanceof OffscreenCanvas,d="undefined"!=typeof ImageBitmap&&a instanceof ImageBitmap,[h,p]=s?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[p,h,i],f=ey.getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&s,m=s||u;if(d||l||m){let e;if(f)e=r.device.importExternalTexture({source:a});else{if(m){let e=ey.getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==o||e!==Cd)&&(Cd=e,o=document.createElement("canvas").getContext("2d",{willReadFrequently:Cd})),o.canvas.width=h,o.canvas.height=p,o.drawImage(a,0,0,h,p),a=o.canvas}let t=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,n=r.textureManager.acquireTexture(c[1],c[0],"rgba8unorm",t);r.queue.copyExternalImageToTexture({source:a},{texture:n},[c[1],c[0]]),e=n}let t=r9.sizeFromShape(c),n=r9.computeStrides(c),s=new Cl(c,i,f),u=[{type:"uint32",data:[t]},{type:"uint32",data:[i]},{type:"uint32",data:[...n]}],l=r.makeTensorInfo([p,h],"int32");r.tensorMap.get(l.dataId).resource=e;let d=r.runWebGPUProgram(s,[l],"int32",u);return r.disposeData(l.dataId),d}let g=a.data,y=g;if(null!=i&&4!==i){y=new Uint8Array(a.width*a.height*i);let e=g.length,t=0;for(let r=0;r<e;r++)r%4<i&&(y[t++]=g[r])}let x=r.makeTensorInfo(c,"int32",new Int32Array(y));return r.uploadToGPU(x.dataId),x}},{kernelName:tb,backendName:"webgpu",kernelFunc:Co},{kernelName:tv,backendName:"webgpu",kernelFunc:Cu},{kernelName:tw,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n,scale:a,offset:i,mean:s,variance:o}=e,{varianceEpsilon:u}=t,l=[n,s,o],d=null;null!=i&&(d=i.shape,l.push(i));let h=null;null!=a&&(h=a.shape,l.push(a));let p=new Ch(n.shape,s.shape,o.shape,d,h);return r.runWebGPUProgram(p,l,n.dtype,[{type:"float32",data:[u]}])}},{kernelName:rJ,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,filter:i,bias:s,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=n,m=sg.convertConv2DDataFormat(d),g=sg.computeConv2DInfo(a.shape,i.shape,u,h,l,p,!1,m);return kD({x:a,filter:i,convInfo:g,backend:r,bias:s,preluActivationWeights:o,leakyreluAlpha:f,activation:c})}},{kernelName:r0,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i,filter:s,bias:o,preluActivationWeights:u}=r,{strides:l,pad:d,dilations:h,dimRoundingMode:p,activation:c,leakyreluAlpha:f}=a,m=h;null==m&&(m=[1,1]),r9.assert(sg.eitherStridesOrDilationsAreOne(l,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`);let g=sg.computeConv2DInfo(i.shape,s.shape,l,m,d,p,!0),y=[i,s],x=null!=o,b=null!=u;x&&y.push(o),b&&y.push(u);let v=[{type:"int32",data:[g.padInfo.top,g.padInfo.left]},{type:"int32",data:[g.inHeight,g.inWidth]}];return g.outHeight>4&&g.outWidth>4&&g.strideWidth<=2&&g.inChannels===g.outChannels&&1===g.dilationHeight&&1===g.dilationWidth&&g.inChannels%4==0?(t=new kQ(g,x,c,b),v.push({type:"int32",data:[t.virtualWidth]})):(t=new kZ(g,x,c,b),v.push({type:"int32",data:[g.filterHeight]},{type:"int32",data:[g.filterWidth]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]})),"leakyrelu"===c&&(v.push({type:"float32",data:[f]}),t.uniforms+=" alpha : f32,"),n.runWebGPUProgram(t,y,"float32",v)}},{kernelName:tk,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{params:n,indices:a}=t,i=a.shape,s=i[i.length-1],o=r9.sizeFromShape(n.shape),[u,l,d,h]=sg.prepareAndValidate(n,a),p=Su({inputs:{x:a},backend:r,attrs:{shape:[l,s]}}),c=Su({inputs:{x:n},backend:r,attrs:{shape:[r9.sizeFromShape(n.shape)/d,d]}});if(r.shouldExecuteOnCPU([n,a])||"string"===n.dtype){let e=ST(r.readSync(a.dataId),r.bufferSync(n),n.dtype,l,s,d,h,n.shape,o);return r.makeTensorInfo(u,n.dtype,e.values)}let f=new Cp(s,[l,d]),m=[{type:"int32",data:[s]},{type:"int32",data:h}],g=r.runWebGPUProgram(f,[c,p],c.dtype,m),y=Su({inputs:{x:g},backend:r,attrs:{shape:u}});return r.disposeData(p.dataId),r.disposeData(c.dataId),r.disposeData(g.dataId),y}},{kernelName:tS,backendName:"webgpu",kernelFunc:Cf},{kernelName:tC,backendName:"webgpu",kernelFunc:Cm},{kernelName:tI,backendName:"webgpu",kernelFunc:Cg},{kernelName:tT,backendName:"webgpu",kernelFunc:Sp},{kernelName:t$,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{input:n}=t;return Ci(n,!0,r)}},{kernelName:tN,backendName:"webgpu",kernelFunc:kE},{kernelName:tE,backendName:"webgpu",kernelFunc:Cy},{kernelName:tR,backendName:"webgpu",kernelFunc:Cx},{kernelName:tA,backendName:"webgpu",kernelFunc:Cb},{kernelName:t_,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{alpha:i}=n,s=new Sf(a.shape,$e.LEAKYRELU,"alpha : f32,");return r.runWebGPUProgram(s,[a],"float32",[{type:"float32",data:[i]}])}},{kernelName:tO,backendName:"webgpu",kernelFunc:Cv},{kernelName:tF,backendName:"webgpu",kernelFunc:Cw},{kernelName:tD,backendName:"webgpu",kernelFunc:function(e){let{backend:t,attrs:r}=e,{start:n,stop:a,num:i}=r,s=(a-n)/(i-1),o=new CS(i);return t.runWebGPUProgram(o,[],"float32",[{type:"float32",data:[n]},{type:"float32",data:[s]}])}},{kernelName:tP,backendName:"webgpu",kernelFunc:CC},{kernelName:"Log",backendName:"webgpu",kernelFunc:Ck},{kernelName:tM,backendName:"webgpu",kernelFunc:CI},{kernelName:tL,backendName:"webgpu",kernelFunc:CT},{kernelName:tB,backendName:"webgpu",kernelFunc:C$},{kernelName:"LRN",backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{depthRadius:s,bias:o,alpha:u,beta:l}=a;t=s>16?new CE(i.shape):new CR(i.shape,s);let d=[{type:"int32",data:[s]},{type:"float32",data:[o]},{type:"float32",data:[u]},{type:"float32",data:[l]}];return n.runWebGPUProgram(t,[i],i.dtype,d)}},{kernelName:tz,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,y:i,dy:s}=t,{depthRadius:o,bias:u,alpha:l,beta:d}=n,h=new CA(a.shape);return r.runWebGPUProgram(h,[a,i,s],a.dtype,[{type:"int32",data:[o]},{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[d]}])}},{kernelName:"Max",backendName:"webgpu",kernelFunc:kl},{kernelName:tU,backendName:"webgpu",kernelFunc:C_},{kernelName:tV,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dimRoundingMode:u}=n,l=sg.computePool2DInfo(a.shape,i,s,1,o,u);return kh(a,l,"max",r)}},{kernelName:tW,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i,output:s}=t;wg([i,s],"maxPoolGrad");let{filterSize:o,strides:u,pad:l,dimRoundingMode:d}=n,h=sg.computePool2DInfo(i.shape,o,u,1,l,d),p=new ko(h,"max",!0),c=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]}],f=r.runWebGPUProgram(p,[i],"int32",c),m=new CO(h);c=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]},{type:"int32",data:[h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]}];let g=r.runWebGPUProgram(m,[a,f],i.dtype,c);return r.disposeData(f.dataId),g}},{kernelName:tG,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{filterSize:i,strides:s,pad:o,dataFormat:u,dimRoundingMode:l}=n,d=sg.computePool3DInfo(a.shape,i,s,[1,1,1],o,l,u),h=new ku(d,"max"),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return r.runWebGPUProgram(h,[a],a.dtype,p)}},{kernelName:tH,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{dy:a,input:i}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=n,d=sg.computePool3DInfo(i.shape,s,o,[1,1,1],u,l),h=new ku(d,"max",!0),p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}],c=r.runWebGPUProgram(h,[i],"int32",p),f=new CF(d);p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];let m=r.runWebGPUProgram(f,[a,c],i.dtype,p);return r.disposeData(c.dataId),m}},{kernelName:tj,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{filterSize:a,strides:i,pad:s,includeBatchInIndex:o}=n,{x:u}=t;r9.assert(4===u.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${u.shape.length}.`);let l=[1,1];r9.assert(sg.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let d=sg.computePool2DInfo(u.shape,a,i,l,s),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}],p=new ko(d,"max",!1),c=r.runWebGPUProgram(p,[u],u.dtype,h);return p=new ko(d,"max",!0,!0,o),[c,r.runWebGPUProgram(p,[u],"int32",h)]}},{kernelName:tK,backendName:"webgpu",kernelFunc:kd},{kernelName:"Min",backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,keepDims:s}=n;return S9(a,i,s,"min",r)}},{kernelName:tq,backendName:"webgpu",kernelFunc:CD},{kernelName:tX,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{x:n}=e,{paddings:a,mode:i}=t,s=a.map(e=>({type:"int32",data:[e[0],e[1]]})),o=new CP(n.shape,a,i);return r.runWebGPUProgram(o,[n],n.dtype,s)}},{kernelName:"Mod",backendName:"webgpu",kernelFunc:CM},{kernelName:tY,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{logits:a}=t,{numSamples:i,seed:s,normalized:o}=n,u=o?a:Cz({inputs:{logits:a},backend:r,attrs:{dim:a.shape.length-1}}),l=u.shape[0],d=u.shape[1],h=new CL(l,i),p=r.runWebGPUProgram(h,[u],"int32",[{type:"float32",data:[s]},{type:"int32",data:[d]}]);return o||r.disposeData(u.dataId),p}},{kernelName:tQ,backendName:"webgpu",kernelFunc:k5},{kernelName:"Neg",backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{x:n}=t;if(r.shouldExecuteOnCPU([n])){let[e,t]=SM(r.tensorMap.get(n.dataId).values,n.shape,n.dtype);return r.makeTensorInfo(t,n.dtype,e)}let a=new Sf(n.shape,$e.NEG);return r.runWebGPUProgram(a,[n],n.dtype)}},{kernelName:tJ,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u}=n,l=r.readSync(a.dataId),d=r.readSync(i.dataId),{selectedIndices:h}=p4.nonMaxSuppressionV3Impl(l,d,s,o,u);return r.makeTensorInfo([h.length],"int32",new Int32Array(h))}},{kernelName:t1,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:r,attrs:n}=e,{boxes:a,scores:i}=t,{maxOutputSize:s,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=n,d=r.readSync(a.dataId),h=r.readSync(i.dataId),{selectedIndices:p,selectedScores:c}=p4.nonMaxSuppressionV5Impl(d,h,s,o,u,l);return[r.makeTensorInfo([p.length],"int32",new Int32Array(p)),r.makeTensorInfo([c.length],"float32",new Float32Array(c))]}},{kernelName:tZ,backendName:"webgpu",kernelFunc:kw},{kernelName:t3,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a}=t,{dtype:i,depth:s,onValue:o,offValue:u}=n,l=r9.sizeFromShape(a.shape),d=new CU(l,s),h=Su({inputs:{x:a},backend:r,attrs:{shape:[l]}}),p=r.runWebGPUProgram(d,[h],i,[{type:"float32",data:[o]},{type:"float32",data:[u]}]);r.disposeData(h.dataId);let c=Su({inputs:{x:p},backend:r,attrs:{shape:[...a.shape,s]}});return r.disposeData(p.dataId),c}},{kernelName:t2,backendName:"webgpu",kernelFunc:function e(t){let{inputs:r,backend:n}=t,{x:a}=r;if("string"===a.dtype)throw Error("onesLike is not supported under string dtype");if("complex64"!==a.dtype)return So({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n});{let t=kS({inputs:{input:a},backend:n}),r=e({inputs:{x:t},backend:n}),i=kE({inputs:{input:a},backend:n}),s=CV({inputs:{x:i},backend:n}),o=Sc({inputs:{real:r,imag:s},backend:n});return n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(i.dataId),n.disposeData(s.dataId),o}}},{kernelName:t4,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{axis:a}=n;if(1===t.length)return Cr({inputs:{input:t[0]},backend:r,attrs:{dim:a}});let i=t[0].shape,s=t[0].dtype;t.forEach(e=>{r9.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r9.assert(s===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=kR({inputs:t.map(e=>{let t=Cr({inputs:{input:e},backend:r,attrs:{dim:a}});return o.push(t),t}),backend:r,attrs:{axis:a}});return o.forEach(e=>r.disposeData(e.dataId)),u}},{kernelName:t6,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{paddings:i,constantValue:s}=n;if(i.every(e=>r9.arraysEqual(e,[0,0])))return Sp({inputs:{x:a},backend:r});if(0===r9.sizeFromShape(a.shape))return So({backend:r,attrs:{shape:i.map((e,t)=>e[0]+a.shape[t]+e[1]),value:s,dtype:a.dtype}});let o=[{type:"float32",data:[s]}];i.map(e=>o.push({type:"int32",data:[e[0],e[1]]}));let u=new CG(a.shape,i);return r.runWebGPUProgram(u,[a],a.dtype,o)}},{kernelName:"Pow",backendName:"webgpu",kernelFunc:CH},{kernelName:t5,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{x:n,alpha:a}=t,i=new Sh(T9.PRELU,n.shape,a.shape);return r.runWebGPUProgram(i,[n,a],"float32")}},{kernelName:t8,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{axis:i,keepDims:s}=n;return S9(a,i,s,"prod",r)}},{kernelName:rt,backendName:"webgpu",kernelFunc:e=>{let{backend:t,attrs:r}=e,{start:n,stop:a,step:i,dtype:s}=r,o=Sz(n,a,i,s);return t.makeTensorInfo([o.length],s,o)}},{kernelName:rr,backendName:"webgpu",kernelFunc:kS},{kernelName:th,backendName:"webgpu",kernelFunc:Cj},{kernelName:rn,backendName:"webgpu",kernelFunc:CK},{kernelName:ra,backendName:"webgpu",kernelFunc:Cq},{kernelName:rd,backendName:"webgpu",kernelFunc:CX},{kernelName:ri,backendName:"webgpu",kernelFunc:Su},{kernelName:ru,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:i,size:s,halfPixelCenters:o}=n,[u,l]=s,d=i&&u>1?1:0,h=i&&l>1?1:0,p=new CY(a.shape,u,l);return r.runWebGPUProgram(p,[a],"float32",[{type:"float32",data:[d,h]},{type:"float32",data:[o?.5:0]}])}},{kernelName:rl,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:i}=t,{alignCorners:s}=n,[,o,u]=a.shape,[,l,d]=i.shape,h=[s&&l>1?o-1:o,s&&d>1?u-1:u],p=[s&&l>1?l-1:l,s&&d>1?d-1:d],c=h[0]/p[0],f=h[1]/p[1],m=1/c,g=1/f,y=2*Math.ceil(m)+2,x=2*Math.ceil(g)+2,b=new CQ(a.shape,s);return r.runWebGPUProgram(b,[i],i.dtype,[{type:"int32",data:h},{type:"int32",data:p},{type:"float32",data:[c]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}])}},{kernelName:rs,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:s,size:o}=n,[u,l]=o,d=i&&u>1?1:0,h=i&&l>1?1:0,p=new CZ(a.shape,u,l,s);return r.runWebGPUProgram(p,[a],a.dtype,[{type:"float32",data:[d,h]},{type:"float32",data:[i?.5:0]}])}},{kernelName:ro,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{images:a,dy:i}=t,{alignCorners:s}=n,[,o,u]=a.shape,[,l,d]=i.shape,h=[s&&l>1?o-1:o,s&&d>1?u-1:u],p=[s&&l>1?l-1:l,s&&d>1?d-1:d],c=h[0]/p[0],f=h[1]/p[1],m=1/c,g=1/f,y=2*Math.ceil(m)+2,x=2*Math.ceil(g)+2,b=new CJ(a.shape,s);return r.runWebGPUProgram(b,[i],i.dtype,[{type:"int32",data:h},{type:"int32",data:p},{type:"float32",data:[m]},{type:"float32",data:[g]},{type:"int32",data:[y]},{type:"int32",data:[x]}])}},{kernelName:rh,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{dims:i}=n,s=a.shape.length;if(0===s)return Sp({inputs:{x:a},backend:r});let o=a.shape,u=[1,1,1,1];o.forEach((e,t)=>{u[t+4-s]=e});let l=r9.parseAxisParam(i,a.shape),d=[0,0,0,0];l.forEach(e=>{d[e+4-s]=1});let h=Su({inputs:{x:a},backend:r,attrs:{shape:u}}),p=new C0(u),c=r.runWebGPUProgram(p,[h],h.dtype,[{type:"int32",data:d}]);r.disposeData(h.dataId);let f=Su({inputs:{x:c},backend:r,attrs:{shape:o}});return r.disposeData(c.dataId),f}},{kernelName:rQ,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:r})=>{let{image:n}=e,{radians:a,fillValue:i,center:s}=t,o=new C1(n.shape,i),[u,l]=sg.getImageCenter(s,n.shape[1],n.shape[2]),d=[{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[Math.sin(a)]},{type:"float32",data:[Math.cos(a)]}];return"number"==typeof i?d.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):d.push({type:"float32",data:i}),r.runWebGPUProgram(o,[n],n.dtype,d)}},{kernelName:rp,backendName:"webgpu",kernelFunc:C2},{kernelName:rc,backendName:"webgpu",kernelFunc:C3},{kernelName:rf,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{indices:a,updates:i}=t,{shape:s}=n,{sliceRank:o,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=sg.calculateShapes(i,a,s),p=[h/l,l];if(0===h)return r.makeTensorInfo(s,a.dtype);let c=Su({inputs:{x:a},backend:r,attrs:{shape:[u,o]}}),f=Su({inputs:{x:i},backend:r,attrs:{shape:[u,l]}}),m=f.dtype,g=So({backend:r,attrs:{shape:p,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[r9.sizeFromShape(f.shape)]}],x=new C4(f.shape,o,c.shape.length,f.shape.length,d,p,m),b=r.runWebGPUProgram(x,[f,c],m,y,g),v=Su({inputs:{x:b},backend:r,attrs:{shape:s}});return r.disposeData(c.dataId),r.disposeData(f.dataId),r.disposeData(b.dataId),v}},{kernelName:rg,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sortedSequence:a,values:i}=t,{side:s}=n,o=new C6([i.shape[0],i.shape[1]],s),u=[{type:"int32",data:[a.shape[1]]}];return r.runWebGPUProgram(o,[a,i],"int32",u)}},{kernelName:ry,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{condition:n,t:a,e:i}=t,s=new C5(n.shape.length,a.shape,a.shape.length);return r.runWebGPUProgram(s,[n,a,i],n6(a.dtype,i.dtype))}},{kernelName:rx,backendName:"webgpu",kernelFunc:C8},{kernelName:rS,backendName:"webgpu",kernelFunc:C7},{kernelName:rw,backendName:"webgpu",kernelFunc:C9},{kernelName:"Sin",backendName:"webgpu",kernelFunc:Ie},{kernelName:rv,backendName:"webgpu",kernelFunc:It},{kernelName:rb,backendName:"webgpu",kernelFunc:kg},{kernelName:rX,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function({inputs:e,attrs:t,backend:r}){let{x:n}=e,a=new Sf(n.shape,$e.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[t.alpha]}];return r.runWebGPUProgram(a,[n],n.dtype,i)}},{kernelName:rP,backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{x:i}=r,{begin:s,end:o,strides:u,beginMask:l,endMask:d,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:c}=a,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:x,begin:b,end:v,strides:w}=on.sliceInfo(i.shape,s,o,u,l,d,h,p,c);if(g)t=Su({inputs:{x:i},backend:n,attrs:{shape:m}});else if(y||x){r9.assert(i.shape.length>=1,()=>`Input must have rank at least 1, got: ${i.shape.length}`);let e=on.computeOutShape(b,v,w),r=kg({inputs:{x:i},backend:n,attrs:{begin:b,size:e}});t=Su({inputs:{x:r},backend:n,attrs:{shape:m}}),n.disposeData(r.dataId)}else if(n.shouldExecuteOnCPU([i])){let e=n.readSync(i.dataId),r=SH(f,iY(i.shape,i.dtype,e),w,b);t=n.makeTensorInfo(m,i.dtype,r.values)}else{let e=new Ip(f),r=[{type:"int32",data:b},{type:"int32",data:w}],a=n.runWebGPUProgram(e,[i],i.dtype,r);t=Su({inputs:{x:a},backend:n,attrs:{shape:m}}),n.disposeData(a.dataId)}return t}},{kernelName:rM,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{separator:a,nGramWidths:i,leftPad:s,rightPad:o,padWidth:u,preserveShortSequences:l}=n,{data:d,dataSplits:h}=t,[p,c]=Sj(r.readSync(d.dataId),r.readSync(h.dataId),a,i,s,o,u,l);return[r.makeTensorInfo([p.length],"string",p),r.makeTensorInfo(h.shape,"int32",c)]}},{kernelName:r$,backendName:"webgpu",kernelFunc:Cz},{kernelName:rk,backendName:"webgpu",kernelFunc:Ir},{kernelName:rI,backendName:"webgpu",kernelFunc:e=>{let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{blockShape:i,paddings:s}=n;r9.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=i.reduce((e,t)=>e*t),u=[[0,0]];u.push(...s);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);let l=u.map((e,t)=>e[0]+a.shape[t]+e[1]),d=sg.getReshaped(l,i,o,!1),h=sg.getPermuted(d.length,i.length,!1),p=sg.getReshapedPermuted(l,i,o,!1),c=r9.computeStrides(l),f=new In(a.shape,l,u,d,h,c.length),m=[{type:"int32",data:d},{type:"int32",data:c}];u.map(e=>m.push({type:"int32",data:[e[0],e[1]]}));let g=r.runWebGPUProgram(f,[a],a.dtype,m),y=Su({inputs:{x:g},backend:r,attrs:{shape:p}});return r.disposeData(g.dataId),y}},{kernelName:rR,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:i}=t;return Io(n,a,i,!1,r)}},{kernelName:rA,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r}=e,{data:n,indices:a,segmentIds:i}=t;return Io(n,a,i,!0,r)}},{kernelName:r_,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{sparseIndices:a,sparseValues:i,defaultValue:s}=t,{outputShape:o}=n,{sliceRank:u,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=sg.calculateShapes(i,a,o);if("string"===i.dtype){let e=SV(r.bufferSync(a),r.bufferSync(i),o,p,d,l,u,h,r9.decodeString(r.readSync(s.dataId)[0]),!1);return r.makeTensorInfo(o,e.dtype,e.values)}let c=[p/d,d],f=Su({inputs:{x:a},backend:r,attrs:{shape:[l,u]}}),m=i.shape.length?Su({inputs:{x:i},backend:r,attrs:{shape:[l,d]}}):Sp({inputs:{x:i},backend:r}),g=m.dtype,y=r.makeTensorInfo([],g,r9.makeZerosTypedArray(1,g)),x=Su({inputs:{x:s},backend:r,attrs:{shape:Array(c.length).fill(1)}}),b=Il({inputs:{x:x},backend:r,attrs:{reps:c}}),v=[{type:"int32",data:[u]},{type:"int32",data:h},{type:"int32",data:[r9.sizeFromShape([l,d])]}];switch(l){case 0:break;case 1:{let e=new C4([l,d],u,f.shape.length,m.shape.length,h,c,g,!1);r.runWebGPUProgram(e,[m,f],g,v,b)}break;default:{let e=new C4([l,d],u,f.shape.length,y.shape.length,h,c,g,!1);r.runWebGPUProgram(e,[y,f],g,v,b)}{let e=new C4([l,d],u,f.shape.length,m.shape.length,h,c,g);r.runWebGPUProgram(e,[m,f],g,v,b)}}let w=Su({inputs:{x:b},backend:r,attrs:{shape:o}});return r.disposeData(f.dataId),r.disposeData(m.dataId),r.disposeData(x.dataId),r.disposeData(y.dataId),r.disposeData(b.dataId),w}},{kernelName:rT,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{numOrSizeSplits:i,axis:s}=n,o=r9.parseAxisParam(s,a.shape)[0],u=sg.prepareSplitSize(a,i,o),l=Array(a.shape.length).fill(0),d=a.shape.slice();return u.map(e=>{let t=[...d];t[o]=e;let n=kg({inputs:{x:a},backend:r,attrs:{begin:l,size:t}});return l[o]+=e,n})}},{kernelName:rC,backendName:"webgpu",kernelFunc:Id},{kernelName:rF,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:r}=e,n=new Sf(r.shape,$e.SQUARE);return t.runWebGPUProgram(n,[r],r.dtype)}},{kernelName:rO,backendName:"webgpu",kernelFunc:Ih},{kernelName:"Sub",backendName:"webgpu",kernelFunc:Ic},{kernelName:"Sum",backendName:"webgpu",kernelFunc:k8},{kernelName:"Tan",backendName:"webgpu",kernelFunc:If},{kernelName:rz,backendName:"webgpu",kernelFunc:Im},{kernelName:rm,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{tensor:a,indices:i,updates:s}=t,{}=n,{sliceRank:o,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=sg.calculateShapes(s,i,a.shape),p=[h/l,l];if(0===h)return r.makeTensorInfo(a.shape,i.dtype);let c=[],f=Su({inputs:{x:i},backend:r,attrs:{shape:[u,o]}});c.push(f);let m=Su({inputs:{x:s},backend:r,attrs:{shape:[u,l]}});c.push(m);let g=Su({inputs:{x:a},backend:r,attrs:{shape:p}});c.push(g);let y=Il({inputs:{x:g},backend:r,attrs:{reps:Array(p.length).fill(1)}}),x=new C4([u,l],o,f.shape.length,m.shape.length,d,p,a.dtype,!1),b=[{type:"int32",data:[o]},{type:"int32",data:d},{type:"int32",data:[r9.sizeFromShape([u,l])]}],v=r.runWebGPUProgram(x,[m,f],g.dtype,b,y);c.push(v);let w=Su({inputs:{x:v},backend:r,attrs:{shape:a.shape}});return c.forEach(e=>r.disposeData(e.dataId)),w}},{kernelName:rU,backendName:"webgpu",kernelFunc:Il},{kernelName:rV,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a}=t,{k:i,sorted:s}=n,o=a.shape,u=o[o.length-1];if(r.shouldExecuteOnCPU([a])){let[e,t]=SX(r.readSync(a.dataId),o,a.dtype,i,s);return[r.makeTensorInfo(e.shape,e.dtype,e.values),r.makeTensorInfo(t.shape,t.dtype,t.values)]}if(0===i)return o[o.length-1]=0,[r.makeTensorInfo(o,a.dtype,[]),r.makeTensorInfo(o,"int32",[])];if(1===u)return[a,So({attrs:{shape:o,dtype:"int32",value:0},backend:r})];let l=r9.sizeFromShape(o)/u,d=Su({inputs:{x:a},attrs:{shape:[l,u]},backend:r}),h=Ib(i),p=Ib(u),c=null,f=()=>null===c?[d,d]:[d,c],m=(e,t,n)=>{let a=f(),i=new Ig(n),s=[{type:"int32",data:[u]},{type:"int32",data:[null===c?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=c;c=r.runWebGPUProgram(i,a,"int32",s),Ix(r,o)};for(let e=1;e<h;e*=2){let t=2*e;for(let r=e;r>=1;r/=2)m(t,r,[l,p])}for(let e=p;e>h;e/=2){let t=f(),n=new Iy([l,e/2]),a=[{type:"int32",data:[u]},{type:"int32",data:[null===c?1:0]},{type:"int32",data:[h]}],i=c;c=r.runWebGPUProgram(n,t,"int32",a),Ix(r,i);let s=h/2,o=2*s;for(let e=s;e>=1;e/=2)m(o,e,c.shape)}let g=c;c=kg({inputs:{x:c},backend:r,attrs:{begin:0,size:[l,i]}}),Ix(r,g);let y=Cf({inputs:{x:d,indices:c},backend:r,attrs:{axis:1,batchDims:1}});Ix(r,d);let x=o.slice(0,-1);x.push(i),g=c,c=Su({inputs:{x:c},attrs:{shape:x},backend:r}),Ix(r,g);let b=y;return y=Su({inputs:{x:y},attrs:{shape:x},backend:r}),Ix(r,b),[y,c]}},{kernelName:rW,backendName:"webgpu",kernelFunc:function(e){let t;let{inputs:r,backend:n,attrs:a}=e,{image:i,transforms:s}=r,{interpolation:o,fillMode:u,fillValue:l,outputShape:d}=a,[h,p,c,f]=i.shape,[m,g]=null!=d?d:[p,c],y=new Iv([h,m,g,f]);switch(u){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}let x=[{type:"int32",data:["nearest"===o?1:2]},{type:"int32",data:[t]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[i,s],"float32",x)}},{kernelName:rG,backendName:"webgpu",kernelFunc:S5},{kernelName:rj,backendName:"webgpu",kernelFunc:/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function(e){let{inputs:t,backend:r,attrs:n}=e,{value:a}=t,{axis:i}=n;i<0&&(i+=a.shape.length);let s=a.shape.length,o=a.shape[i],u=Array(s-1),l=0;for(let e=0;e<s;e++)e!==i&&(u[l++]=a.shape[e]);let d=[],h=Array(s).fill(0),p=a.shape.slice();p[i]=1;let c=Array(o);for(let e=0;e<c.length;e++){h[i]=e;let t=kg({inputs:{x:a},backend:r,attrs:{begin:h,size:p}}),n=Su({inputs:{x:t},backend:r,attrs:{shape:u}});c[e]=n,d.push(t)}return d.forEach(e=>r.disposeData(e.dataId)),c}},{kernelName:rK,backendName:"webgpu",kernelFunc:function(e){let{inputs:t,backend:r,attrs:n}=e,{x:a,segmentIds:i}=t,{numSegments:s}=n,o=a.shape.length,u=[],l=0,d=sg.getAxesPermutation([l],o),h=a;null!=d&&(u.push(h=S5({inputs:{x:a},backend:r,attrs:{perm:d}})),l=sg.getInnerMostAxes(1,o)[0]);let p=sg.segment_util.computeOutShape(h.shape,l,s),c=r9.sizeFromShape([h.shape[l]]),f=Su({inputs:{x:h},backend:r,attrs:{shape:[-1,c]}});u.push(f);let m=a.dtype,g=[f.shape[0],s],y=So({backend:r,attrs:{shape:g,value:0,dtype:m}}),x=new Iw(f.shape,g,m),b=[{type:"int32",data:[s]},{type:"int32",data:[r9.sizeFromShape(f.shape)]}],v=r.runWebGPUProgram(x,[f,i],m,b,y),w=Su({inputs:{x:v},backend:r,attrs:{shape:p}});u.push(v);let S=w;return null!=d&&(u.push(w),S=S5({inputs:{x:S},backend:r,attrs:{perm:sg.getUndoAxesPermutation(d)}})),u.forEach(e=>r.disposeData(e.dataId)),S}},{kernelName:rq,backendName:"webgpu",kernelFunc:CV}])r7(e);var IS=function(e,t){return(IS=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(e,t)};function Ik(e,t){if("function"!=typeof t&&null!==t)throw TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}IS(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var IC=function(){return(IC=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var a in t=arguments[r])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function II(e,t,r,n){return new(r||(r=Promise))(function(a,i){function s(e){try{u(n.next(e))}catch(e){i(e)}}function o(e){try{u(n.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?a(e.value):((t=e.value)instanceof r?t:new r(function(e){e(t)})).then(s,o)}u((n=n.apply(e,t||[])).next())})}function IT(e,t){var r,n,a,i,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return i={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function o(i){return function(o){return function(i){if(r)throw TypeError("Generator is already executing.");for(;s;)try{if(r=1,n&&(a=2&i[0]?n.return:i[0]?n.throw||((a=n.return)&&a.call(n),0):n.next)&&!(a=a.call(n,i[1])).done)return a;switch(n=0,a&&(i=[2&i[0],a.value]),i[0]){case 0:case 1:a=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!a||i[1]>a[0]&&i[1]<a[3])){s.label=i[1];break}if(6===i[0]&&s.label<a[1]){s.label=a[1],a=i;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(i);break}a[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=a=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,o])}}}function I$(e,t,r){if(r||2==arguments.length)for(var n,a=0,i=t.length;a<i;a++)!n&&a in t||(n||(n=Array.prototype.slice.call(t,0,a)),n[a]=t[a]);return e.concat(n||Array.prototype.slice.call(t))}var IN=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],IE=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"],IR={left:[1,2,3,7,9,11,13,15,17,19,21,23,25,27,29,31],right:[4,5,6,8,10,12,14,16,18,20,22,24,26,28,30,32],middle:[0]},IA={left:[1,3,5,7,9,11,13,15],right:[2,4,6,8,10,12,14,16],middle:[0]},I_=[[0,1],[0,2],[1,3],[2,4],[5,6],[5,7],[5,11],[6,8],[6,12],[7,9],[8,10],[11,12],[11,13],[12,14],[13,15],[14,16]],IO=[[0,1],[0,4],[1,2],[2,3],[3,7],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[11,23],[12,14],[14,16],[12,24],[13,15],[15,17],[16,18],[16,20],[15,17],[15,19],[15,21],[16,22],[17,19],[18,20],[23,25],[23,24],[24,26],[25,27],[26,28],[27,29],[28,30],[27,31],[28,32],[29,31],[30,32]];function IF(e){return e instanceof SVGAnimatedLength?e.baseVal.value:e}function ID(e){return II(this,void 0,void 0,function(){var t,r;return IT(this,function(n){switch(n.label){case 0:return t=document.createElement("canvas"),e instanceof n1?[4,uv.toPixels(e,t)]:[3,2];case 1:return n.sent(),[3,3];case 2:t.width=IF(e.width),t.height=IF(e.height),r=t.getContext("2d"),e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0),n.label=3;case 3:return[2,t]}})})}function IP(e){return II(this,void 0,void 0,function(){var t,r,n,a,i,s;return IT(this,function(o){switch(o.label){case 0:return e instanceof n1?(r=(t=e.shape.slice(0,2))[0],n=t[1],a=ImageData.bind,[4,uv.toPixels(e)]):[3,2];case 1:return[2,new(a.apply(ImageData,[void 0,o.sent(),n,r]))];case 2:return s=(i=document.createElement("canvas")).getContext("2d"),i.width=IF(e.width),i.height=IF(e.height),s.drawImage(e,0,0),[2,s.getImageData(0,0,i.width,i.height)]}})})}function IM(e){if(e<0||e>=256)throw Error("Mask value must be in range [0, 255] but got ".concat(e));if(!Number.isInteger(e))throw Error("Mask value must be an integer but got ".concat(e))}var IL={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},IB=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return II(this,void 0,void 0,function(){return IT(this,function(e){return[2,this.mask]})})},e.prototype.toImageData=function(){return II(this,void 0,void 0,function(){return IT(this,function(e){return[2,IP(this.mask)]})})},e.prototype.toTensor=function(){return II(this,void 0,void 0,function(){return IT(this,function(e){return[2,function(e){return II(this,void 0,void 0,function(){var t,r;return IT(this,function(n){switch(n.label){case 0:return e instanceof SVGImageElement||e instanceof OffscreenCanvas?[4,ID(e)]:[3,2];case 1:return r=n.sent(),[3,3];case 2:r=e,n.label=3;case 3:return t=r,[2,uv.fromPixels(t,4)]}})})}(this.mask)]})})},e.prototype.getUnderlyingType=function(){return"canvasimagesource"},e}();function Iz(e){return IM(e),"person"}var IU=function(){function e(e){var t,r=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new bl.Pose({locateFile:function(t,r){if(e.solutionPath){var n=e.solutionPath.replace(/\/+$/,"");return"".concat(n,"/").concat(t)}return"".concat(r,"/").concat(t)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults(function(e){if(r.height=e.image.height,r.width=e.image.width,null==e.poseLandmarks)r.poses=[];else{var t=r.translateOutput(e.poseLandmarks,e.poseWorldLandmarks);e.segmentationMask&&(t.segmentation={maskValueToLabel:Iz,mask:new IB(e.segmentationMask)}),r.poses=[t]}})}return e.prototype.translateOutput=function(e,t){var r=this,n={keypoints:e.map(function(e,t){return{x:e.x*r.width,y:e.y*r.height,z:e.z,score:e.visibility,name:IE[t]}})};return null!=t&&(n.keypoints3D=t.map(function(e,t){return{x:e.x,y:e.y,z:e.z,score:e.visibility,name:IE[t]}})),n},e.prototype.estimatePoses=function(e,t,r){return II(this,void 0,void 0,function(){var n,a;return IT(this,function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof n1?(a=ImageData.bind,[4,uv.toPixels(e)]):[3,2];case 1:return n=new(a.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:n=e,i.label=3;case 3:return e=n,[4,this.poseSolution.send({image:e},r)];case 4:return i.sent(),[2,this.poses]}})})},e.prototype.dispose=function(){this.poseSolution.close()},e.prototype.reset=function(){this.poseSolution.reset()},e.prototype.initialize=function(){return this.poseSolution.initialize()},e}();function IV(e){return e instanceof n1?{height:e.shape[0],width:e.shape[1]}:{height:e.height,width:e.width}}function IW(e){return e-2*Math.PI*Math.floor((e+Math.PI)/(2*Math.PI))}function IG(e){return e instanceof n1?e:uv.fromPixels(e)}function IH(e,t,r){return Ij(r,"inputResolution"),[1/r.width*e[0][0]*t.width,1/r.height*e[0][1]*t.width,e[0][3]*t.width,1/r.width*e[1][0]*t.height,1/r.height*e[1][1]*t.height,e[1][3]*t.height,0,0]}function Ij(e,t){r9.assert(0!==e.width,function(){return"".concat(t," width cannot be 0.")}),r9.assert(0!==e.height,function(){return"".concat(t," height cannot be 0.")})}function IK(e,t,r){var n,a,i,s,o,u,l,d=r.rotationVectorStartKeypointIndex,h=r.rotationVectorEndKeypointIndex,p=e.locationData,c=p.relativeKeypoints[d].x*t.width,f=p.relativeKeypoints[d].y*t.height,m=p.relativeKeypoints[h].x*t.width,g=p.relativeKeypoints[h].y*t.height,y=2*Math.sqrt((m-c)*(m-c)+(g-f)*(g-f)),x=(a=e.locationData,i=r.rotationVectorStartKeypointIndex,s=r.rotationVectorEndKeypointIndex,n=r.rotationVectorTargetAngle?r.rotationVectorTargetAngle:Math.PI*r.rotationVectorTargetAngleDegree/180,o=a.relativeKeypoints[i].x*t.width,u=a.relativeKeypoints[i].y*t.height,l=a.relativeKeypoints[s].x*t.width,IW(n-Math.atan2(-(a.relativeKeypoints[s].y*t.height-u),l-o)));return{xCenter:c/t.width,yCenter:f/t.height,width:y/t.width,height:y/t.height,rotation:x}}function Iq(e){if(16!==e.length)throw Error("Array length must be 16 but got ".concat(e.length));return[[e[0],e[1],e[2],e[3]],[e[4],e[5],e[6],e[7]],[e[8],e[9],e[10],e[11]],[e[12],e[13],e[14],e[15]]]}function IX(e,t,r,n,a,i,s){return e[t][a]*(e[r][i]*e[n][s]-e[r][s]*e[n][i])}function IY(e,t,r){var n=(t+1)%4,a=(t+2)%4,i=(t+3)%4,s=(r+1)%4,o=(r+2)%4,u=(r+3)%4;return IX(e,n,a,i,s,o,u)+IX(e,a,i,n,s,o,u)+IX(e,i,n,a,s,o,u)}function IQ(e,t,r){void 0===r&&(r={ignoreRotation:!1});for(var n=[],a=0;a<e.length;a++){var i=e[a],s=i.x-.5,o=i.y-.5,u=r.ignoreRotation?0:t.rotation,l=Math.cos(u)*s-Math.sin(u)*o,d=Math.sin(u)*s+Math.cos(u)*o;l=l*t.width+t.xCenter,d=d*t.height+t.yCenter;var h=i.z*t.width,p=IC({},i);p.x=l,p.y=d,p.z=h,n.push(p)}return n}function IZ(e,t){var r,n,a,i=(r=0,n=t[0],{scale:a=(t[1]-n)/255,offset:n-0*a});return ak(function(){return i0(i3(e,i.scale),i.offset)})}function IJ(e,t,r){var n,a,i,s,o,u,l,d,h,p,c,f=t.outputTensorSize,m=t.keepAspectRatio,g=t.borderMode,y=t.outputTensorFloatRange,x=IV(e),b=r?{xCenter:r.xCenter*x.width,yCenter:r.yCenter*x.height,width:r.width*x.width,height:r.height*x.height,rotation:r.rotation}:{xCenter:.5*x.width,yCenter:.5*x.height,width:x.width,height:x.height,rotation:0},v=function(e,t,r){if(void 0===r&&(r=!1),!r)return{top:0,left:0,right:0,bottom:0};var n=t.height,a=t.width;Ij(t,"targetSize"),Ij(e,"roi");var i,s,o=n/a,u=e.height/e.width,l=0,d=0;return o>u?(i=e.width,s=e.width*o,d=(1-u/o)/2):(i=e.height/o,s=e.height,l=(1-o/u)/2),e.width=i,e.height=s,{top:d,left:l,right:l,bottom:d}}(b,f,m),w=(n=x.width,a=x.height,i=b.width,s=b.height,o=Math.cos(b.rotation),u=Math.sin(b.rotation),l=b.xCenter,d=b.yCenter,h=1/n,p=1/a,(c=Array(16))[0]=i*o*1*h,c[1]=-s*u*h,c[2]=0,c[3]=(-.5*i*o*1+.5*s*u+l)*h,c[4]=i*u*1*p,c[5]=s*o*p,c[6]=0,c[7]=(-.5*s*o-.5*i*u*1+d)*p,c[8]=0,c[9]=0,c[10]=i*h,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,Iq(c));return{imageTensor:ak(function(){var t=IG(e),r=ho(IH(w,x,f),[1,8]),n=p_.transform(u_(iQ(t,"float32")),r,"bilinear","zero"===g?"constant":"nearest",0,[f.height,f.width]);return null!=y?IZ(n,y):n}),padding:v,transformationMatrix:w}}function I0(e,t,r,n){return 1===n?.5*(e+t):e+(t-e)*r/(n-1)}function I1(e){return null!=e&&null!=e.currentTime}function I2(e){for(var t={locationData:{relativeKeypoints:[]}},r=Number.MAX_SAFE_INTEGER,n=Number.MIN_SAFE_INTEGER,a=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,s=0;s<e.length;++s){var o=e[s];r=Math.min(r,o.x),n=Math.max(n,o.x),a=Math.min(a,o.y),i=Math.max(i,o.y),t.locationData.relativeKeypoints.push({x:o.x,y:o.y})}return t.locationData.relativeBoundingBox={xMin:r,yMin:a,xMax:n,yMax:i,width:n-r,height:i-a},t}function I3(e,t){return e.map(function(e){var r=IC(IC({},e),{x:e.x*t.width,y:e.y*t.height});return null!=e.z&&(r.z=e.z*t.width),r})}function I4(e,t){var r=t.left,n=t.top,a=t.left+t.right,i=t.top+t.bottom;return e.map(function(e){return IC(IC({},e),{x:(e.x-r)/(1-a),y:(e.y-n)/(1-i),z:e.z/(1-a)})})}function I6(e,t,r,n){return II(this,void 0,void 0,function(){var a,i,s,o,u,l,d;return IT(this,function(h){switch(h.label){case 0:return r=r||t.flipHorizontally||!1,n=n||t.flipVertically||!1,a=e.size/t.numLandmarks,[4,e.data()];case 1:for(i=h.sent(),s=[],o=0;o<t.numLandmarks;++o){var p,c;u=o*a,(d={x:0,y:0}).x=r?t.inputImageWidth-i[u]:i[u],a>1&&(d.y=n?t.inputImageHeight-i[u+1]:i[u+1]),a>2&&(d.z=i[u+2]),a>3&&(d.score=(p=t.visibilityActivation,c=i[u+3],"none"===p?c:1/(1+Math.exp(-c)))),s.push(d)}for(l=0;l<s.length;++l)(d=s[l]).x=d.x/t.inputImageWidth,d.y=d.y/t.inputImageHeight,d.z=d.z/t.inputImageWidth/(t.normalizeZ||1);return[2,s]}})})}function I5(e,t,r){var n,a=e.width,i=e.height,s=e.rotation;if(null==r.rotation&&null==r.rotationDegree||(n=s,null!=r.rotation?n+=r.rotation:null!=r.rotationDegree&&(n+=Math.PI*r.rotationDegree/180),s=IW(n)),0===s)e.xCenter=e.xCenter+a*r.shiftX,e.yCenter=e.yCenter+i*r.shiftY;else{var o=(t.width*a*r.shiftX*Math.cos(s)-t.height*i*r.shiftY*Math.sin(s))/t.width,u=(t.width*a*r.shiftX*Math.sin(s)+t.height*i*r.shiftY*Math.cos(s))/t.height;e.xCenter=e.xCenter+o,e.yCenter=e.yCenter+u}if(r.squareLong){var l=Math.max(a*t.width,i*t.height);a=l/t.width,i=l/t.height}else if(r.squareShort){var d=Math.min(a*t.width,i*t.height);a=d/t.width,i=d/t.height}return e.width=a*r.scaleX,e.height=i*r.scaleY,e}var I8=function(){function e(e){this.alpha=e,this.initialized=!1}return e.prototype.apply=function(e,t){var r;return this.initialized?r=null==t?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(r=e,this.initialized=!0),this.rawValue=e,this.storedValue=r,r},e.prototype.applyWithAlpha=function(e,t,r){return this.alpha=t,this.apply(e,r)},e.prototype.hasLastRawValue=function(){return this.initialized},e.prototype.lastRawValue=function(){return this.rawValue},e.prototype.reset=function(){this.initialized=!1},e}(),I7=function(){function e(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new I8(this.getAlpha(this.minCutOff)),this.dx=new I8(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return e.prototype.apply=function(e,t,r){if(null==e)return e;var n=Math.trunc(t);if(this.lastTimestamp>=n)return e;0!==this.lastTimestamp&&0!==n&&(this.frequency=1/(1e-6*(n-this.lastTimestamp))),this.lastTimestamp=n;var a=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*r*this.frequency:0,i=this.dx.applyWithAlpha(a,this.getAlpha(this.derivateCutOff)),s=this.minCutOff+this.beta*Math.abs(i),o=null!=this.thresholdCutOff?this.thresholdCutOff+this.thresholdBeta*Math.abs(i):null;return this.x.applyWithAlpha(e,this.getAlpha(s),o)},e.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},e}(),I9=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,r){var n=this;if(null==e)return this.reset(),null;this.initializeFiltersIfEmpty(e);var a=1;if(!this.config.disableValueScaling){if(r<this.config.minAllowedObjectScale)return I$([],e,!0);a=1/r}return e.map(function(e,r){var i=IC(IC({},e),{x:n.xFilters[r].apply(e.x,t,a),y:n.yFilters[r].apply(e.y,t,a)});return null!=e.z&&(i.z=n.zFilters[r].apply(e.z,t,a)),i})},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map(function(e){return new I7(t.config)}),this.yFilters=e.map(function(e){return new I7(t.config)}),this.zFilters=e.map(function(e){return new I7(t.config)}))},e}(),Te=function(){function e(e){this.config=e,this.window=[],this.lowPassFilter=new I8(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return e.prototype.apply=function(e,t,r){if(null==e)return e;var n,a=Math.trunc(t);if(this.lastTimestamp>=a)return e;if(-1===this.lastTimestamp)n=1;else{for(var i=e*r-this.lastValue*this.lastValueScale,s=a-this.lastTimestamp,o=i,u=s,l=(1+this.window.length)*(1e6/30),d=0,h=this.window;d<h.length;d++){var p=h[d];if(u+p.duration>l)break;o+=p.distance,u+=p.duration}var c=o/(1e-6*u);n=1-1/(1+this.config.velocityScale*Math.abs(c)),this.window.unshift({distance:i,duration:s}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=r,this.lastTimestamp=a,this.lowPassFilter.applyWithAlpha(e,n)},e}(),Tt=function(){function e(e){this.config=e}return e.prototype.apply=function(e,t,r){var n=this;if(null==e)return this.reset(),null;var a=1;if(!this.config.disableValueScaling){if(r<this.config.minAllowedObjectScale)return I$([],e,!0);a=1/r}return this.initializeFiltersIfEmpty(e),e.map(function(e,r){var i=IC(IC({},e),{x:n.xFilters[r].apply(e.x,t,a),y:n.yFilters[r].apply(e.y,t,a)});return null!=e.z&&(i.z=n.zFilters[r].apply(e.z,t,a)),i})},e.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},e.prototype.initializeFiltersIfEmpty=function(e){var t=this;null!=this.xFilters&&this.xFilters.length===e.length||(this.xFilters=e.map(function(e){return new Te(t.config)}),this.yFilters=e.map(function(e){return new Te(t.config)}),this.zFilters=e.map(function(e){return new Te(t.config)}))},e}(),Tr=function(){function e(e){if(null!=e.velocityFilter)this.keypointsFilter=new Tt(e.velocityFilter);else{if(null==e.oneEuroFilter)throw Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new I9(e.oneEuroFilter)}}return e.prototype.apply=function(e,t,r,n,a){if(void 0===n&&(n=!1),null==e)return this.keypointsFilter.reset(),null;var i=null!=a?(a.width*r.width+a.height*r.height)/2:1,s=n?I3(e,r):e,o=this.keypointsFilter.apply(s,t,i);return n?o.map(function(e){var t=IC(IC({},e),{x:e.x/r.width,y:e.y/r.height});return null!=e.z&&(e.z=e.z/r.width),t}):o},e}(),Tn=function(){function e(e){this.alpha=e.alpha}return e.prototype.apply=function(e){var t=this;if(null==e)return this.visibilityFilters=null,null;null!=this.visibilityFilters&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map(function(e){return new I8(t.alpha)}));for(var r=[],n=0;n<e.length;++n){var a=e[n],i=IC({},a);i.score=this.visibilityFilters[n].apply(a.score),r.push(i)}return r},e}(),Ta={reduceBoxesInLowestlayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Ti={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},Ts={maxPoses:1,flipHorizontal:!1},To={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},Tu={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25,squareLong:!0},Tl={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},Td={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},Th={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Tp={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},Tc={kernelSize:7,minConfidenceToRefine:.5},Tf={alpha:.1},Tm={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},Tg={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},Ty={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},Tx={activation:"none"},Tb={combineWithPreviousRatio:.7},Tv=function(){function e(e){this.mask=e}return e.prototype.toCanvasImageSource=function(){return II(this,void 0,void 0,function(){return IT(this,function(e){return[2,ID(this.mask)]})})},e.prototype.toImageData=function(){return II(this,void 0,void 0,function(){return IT(this,function(e){return[2,IP(this.mask)]})})},e.prototype.toTensor=function(){return II(this,void 0,void 0,function(){return IT(this,function(e){return[2,this.mask]})})},e.prototype.getUnderlyingType=function(){return"tensor"},e}();function Tw(e){return IM(e),"person"}var TS,Tk,TC,TI,TT,T$,TN,TE,TR,TA,T_,TO,TF,TD,TP,TM,TL,TB,Tz,TU,TV,TW,TG,TH,Tj,TK,Tq,TX,TY,TQ,TZ,TJ,T0,T1,T2,T3,T4,T6,T5,T8,T7,T9,$e,$t,$r,$n,$a=function(){function e(e,t,r,n,a,i){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=r,this.enableSegmentation=n,this.smoothSegmentation=a,this.modelType=i,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=function(e){null==e.reduceBoxesInLowestLayer&&(e.reduceBoxesInLowestLayer=!1),null==e.interpolatedScaleAspectRatio&&(e.interpolatedScaleAspectRatio=1),null==e.fixedAnchorSize&&(e.fixedAnchorSize=!1);for(var t=[],r=0;r<e.numLayers;){for(var n=[],a=[],i=[],s=[],o=r;o<e.strides.length&&e.strides[o]===e.strides[r];){var u=I0(e.minScale,e.maxScale,o,e.strides.length);if(0===o&&e.reduceBoxesInLowestLayer)i.push(1),i.push(2),i.push(.5),s.push(.1),s.push(u),s.push(u);else{for(var l=0;l<e.aspectRatios.length;++l)i.push(e.aspectRatios[l]),s.push(u);if(e.interpolatedScaleAspectRatio>0){var d=o===e.strides.length-1?1:I0(e.minScale,e.maxScale,o+1,e.strides.length);s.push(Math.sqrt(u*d)),i.push(e.interpolatedScaleAspectRatio)}}o++}for(var h=0;h<i.length;++h){var p=Math.sqrt(i[h]);n.push(s[h]/p),a.push(s[h]*p)}var c=0,f=0;if(e.featureMapHeight.length>0)c=e.featureMapHeight[r],f=e.featureMapWidth[r];else{var m=e.strides[r];c=Math.ceil(e.inputSizeHeight/m),f=Math.ceil(e.inputSizeWidth/m)}for(var g=0;g<c;++g)for(var y=0;y<f;++y)for(var x=0;x<n.length;++x){var b={xCenter:(y+e.anchorOffsetX)/f,yCenter:(g+e.anchorOffsetY)/c,width:0,height:0};e.fixedAnchorSize?(b.width=1,b.height=1):(b.width=a[x],b.height=n[x]),t.push(b)}r=o}return t}(Ta);var s=hs(this.anchors.map(function(e){return e.width})),o=hs(this.anchors.map(function(e){return e.height})),u=hs(this.anchors.map(function(e){return e.xCenter})),l=hs(this.anchors.map(function(e){return e.yCenter}));this.anchorTensor={x:u,y:l,w:s,h:o},this.prevFilteredSegmentationMask=this.enableSegmentation?ho([],[0,0]):null}return e.prototype.estimatePoses=function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s,o,u,l,d,h,p,c,f,m,g,y,x,b,v,w,S,k,C,I;return IT(this,function(T){switch(T.label){case 0:return n=function(e){var t;if(null==(t=null==e?Ts:IC({},e)).maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1)throw Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return t}(t),null==e?(this.reset(),[2,[]]):(this.maxPoses=n.maxPoses,this.timestamp=null!=r?1e3*r:I1(e)?1e6*e.currentTime:null,a=IV(e),i=ak(function(){return iQ(IG(e),"float32")}),null!=(s=this.regionOfInterest)?[3,2]:[4,this.detectPose(i)]);case 1:if(0===(o=T.sent()).length)return this.reset(),i.dispose(),[2,[]];u=o[0],s=this.poseDetectionToRoi(u,a),T.label=2;case 2:return[4,this.poseLandmarksByRoi(s,i)];case 3:return l=T.sent(),i.dispose(),null==l?(this.reset(),[2,[]]):(d=l.landmarks,h=l.auxiliaryLandmarks,p=l.poseScore,c=l.worldLandmarks,f=l.segmentationMask,g=(m=this.poseLandmarkFiltering(d,h,c,a)).actualLandmarksFiltered,y=m.auxiliaryLandmarksFiltered,x=m.actualWorldLandmarksFiltered,b=this.poseLandmarksToRoi(y,a),this.regionOfInterest=b,v=this.smoothSegmentation&&null!=f?this.poseSegmentationFiltering(f):f,null!=(w=null!=g?I3(g,a):null)&&w.forEach(function(e,t){e.name=IE[t]}),null!=(S=x)&&S.forEach(function(e,t){e.name=IE[t]}),k={score:p,keypoints:w,keypoints3D:S},null!==v&&(C=ak(function(){return dt(dh(u_(v,2),[[0,0],[0,0],[0,1]]),[[0,0],[0,0],[0,2]],"symmetric")}),this.smoothSegmentation||aC(v),I={maskValueToLabel:Tw,mask:new Tv(C)},k.segmentation=I),[2,[k]])}})})},e.prototype.poseSegmentationFiltering=function(e){var t,r,n,a=this.prevFilteredSegmentationMask;return 0===a.size?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask="webgl"===aT()?(t=Tb.combineWithPreviousRatio.toFixed(2),r={variableNames:["prevMask","newMask"],outputShape:a.shape,userCode:"\n  void main() {\n      ivec2 coords = getOutputCoords();\n      int height = coords[0];\n      int width = coords[1];\n\n      float prevMaskValue = getPrevMask(height, width);\n      float newMaskValue = getNewMask(height, width);\n\n      /*\n      * Assume p := newMaskValue\n      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)\n      * uncertainty alpha(p) =\n      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the\n      * uncertainty]\n      *\n      * The following polynomial approximates uncertainty alpha as a\n      * function of (p + 0.5):\n      */\n      const float c1 = 5.68842;\n      const float c2 = -0.748699;\n      const float c3 = -57.8051;\n      const float c4 = 291.309;\n      const float c5 = -624.717;\n      float t = newMaskValue - 0.5;\n      float x = t * t;\n\n      float uncertainty =\n        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));\n\n      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *\n                             (uncertainty * ".concat(t,");\n\n      setOutput(outputValue);\n    }\n")},n=aN(),ak(function(){var t=n.compileAndRun(r,[a,e]);return ai.makeTensorFromDataId(t.dataId,t.shape,t.dtype)})):ak(function(){var t=i6(ss(e,.5)),r=ss(1,de(1,i3(t,i0(5.68842,i3(t,i0(-.748699,i3(t,i0(-57.8051,i3(t,i0(291.309,i3(t,-624.717)))))))))));return i0(e,i3(ss(a,e),i3(r,Tb.combineWithPreviousRatio)))}),aC(e)),aC(a),this.prevFilteredSegmentationMask},e.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),aC([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},e.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(aC(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=ho([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},e.prototype.detectPose=function(e){return II(this,void 0,void 0,function(){var t,r,n,a,i,s,o,u,l;return IT(this,function(d){switch(d.label){case 0:var h;return r=(t=IJ(e,Tl)).imageTensor,n=t.padding,h=a=this.detectorModel.predict(r),s=(i=ak(function(){var e=ak(function(){return[uq(h,[0,0,0],[1,-1,1]),uq(h,[0,0,1],[1,-1,-1])]}),t=e[0];return{boxes:hr(e[1]),logits:hr(t)}})).boxes,[4,function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s;return IT(this,function(o){switch(o.label){case 0:var u;return n=e[0],u=e[1],a=ak(function(){r.reverseOutputOrder?(n=hr(uq(u,[0,r.boxCoordOffset+0],[-1,1])),e=hr(uq(u,[0,r.boxCoordOffset+1],[-1,1])),i=hr(uq(u,[0,r.boxCoordOffset+2],[-1,1])),a=hr(uq(u,[0,r.boxCoordOffset+3],[-1,1]))):(e=hr(uq(u,[0,r.boxCoordOffset+0],[-1,1])),n=hr(uq(u,[0,r.boxCoordOffset+1],[-1,1])),a=hr(uq(u,[0,r.boxCoordOffset+2],[-1,1])),i=hr(uq(u,[0,r.boxCoordOffset+3],[-1,1]))),n=i0(i3(i2(n,r.xScale),t.w),t.x),e=i0(i3(i2(e,r.yScale),t.h),t.y),r.applyExponentialOnBoxSize?(a=i3(uA(i2(a,r.hScale)),t.h),i=i3(uA(i2(i,r.wScale)),t.w)):(a=i3(i2(a,r.hScale),t.h),i=i3(i2(i,r.wScale),t.h));var e,n,a,i,s=ss(e,i2(a,2)),o=ss(n,i2(i,2)),l=i0(e,i2(a,2)),d=i0(n,i2(i,2)),h=uR([sQ(s,[r.numBoxes,1]),sQ(o,[r.numBoxes,1]),sQ(l,[r.numBoxes,1]),sQ(d,[r.numBoxes,1])],1);if(r.numKeypoints)for(var p=0;p<r.numKeypoints;++p){var c=r.keypointCoordOffset+p*r.numValuesPerKeypoint,f=void 0,m=void 0;r.reverseOutputOrder?(f=hr(uq(u,[0,c],[-1,1])),m=hr(uq(u,[0,c+1],[-1,1]))):(m=hr(uq(u,[0,c],[-1,1])),f=hr(uq(u,[0,c+1],[-1,1])));var g=i0(i3(i2(f,r.xScale),t.w),t.x),y=i0(i3(i2(m,r.yScale),t.h),t.y);h=uR([h,sQ(g,[r.numBoxes,1]),sQ(y,[r.numBoxes,1])],1)}return h}),i=ak(function(){var e=n;return r.sigmoidScore?(null!=r.scoreClippingThresh&&(e=uE(n,-r.scoreClippingThresh,r.scoreClippingThresh)),e=sZ(e)):e}),[4,function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s,o,u,l,d,h,p,c,f;return IT(this,function(m){switch(m.label){case 0:return n=[],[4,e.data()];case 1:return a=m.sent(),[4,t.data()];case 2:for(i=m.sent(),s=0;s<r.numBoxes;++s){var g,y,x,b,v,w;if(!(null!=r.minScoreThresh&&i[s]<r.minScoreThresh||(l=(g=a[(o=s*r.numCoords)+0],y=a[o+1],x=a[o+2],b=a[o+3],v=i[s],w=r.flipVertically,u={score:[v],ind:s,locationData:{relativeBoundingBox:{xMin:y,yMin:w?1-x:g,xMax:b,yMax:w?1-g:x,width:b-y,height:x-g}}}).locationData.relativeBoundingBox).width<0||l.height<0)){if(r.numKeypoints>0)for((d=u.locationData).relativeKeypoints=[],h=r.numKeypoints*r.numValuesPerKeypoint,p=0;p<h;p+=r.numValuesPerKeypoint)f={x:a[(c=o+r.keypointCoordOffset+p)+0],y:r.flipVertically?1-a[c+1]:a[c+1]},d.relativeKeypoints.push(f);n.push(u)}}return[2,n]}})})}(a,i,r)];case 1:return s=o.sent(),aC([a,i]),[2,s]}})})}([o=i.logits,s],this.anchorTensor,To)];case 1:return 0===(u=d.sent()).length?(aC([r,a,o,s]),[2,u]):[4,function(e,t,r,n){return II(this,void 0,void 0,function(){var r,n,a,i,s;return IT(this,function(o){switch(o.label){case 0:return e.sort(function(e,t){return Math.max.apply(Math,t.score)-Math.max.apply(Math,e.score)}),r=ho(e.map(function(e){return[e.locationData.relativeBoundingBox.yMin,e.locationData.relativeBoundingBox.xMin,e.locationData.relativeBoundingBox.yMax,e.locationData.relativeBoundingBox.xMax]})),n=hs(e.map(function(e){return e.score[0]})),[4,p_.nonMaxSuppressionAsync(r,n,t,.3)];case 1:return[4,(a=o.sent()).array()];case 2:return i=o.sent(),s=e.filter(function(e,t){return i.indexOf(t)>-1}),aC([r,n,a]),[2,s]}})})}(u,this.maxPoses,0)];case 2:return l=function(e,t){void 0===e&&(e=[]);for(var r=t.left,n=t.top,a=t.left+t.right,i=t.top+t.bottom,s=0;s<e.length;s++){var o=e[s],u=o.locationData.relativeBoundingBox,l=(u.xMin-r)/(1-a),d=(u.yMin-n)/(1-i),h=u.width/(1-a),p=u.height/(1-i);u.xMin=l,u.yMin=d,u.width=h,u.height=p,u.xMax=l+h,u.yMax=d+p;var c=o.locationData.relativeKeypoints;c&&c.forEach(function(e){var t=(e.x-r)/(1-a),s=(e.y-n)/(1-i);e.x=t,e.y=s})}return e}(d.sent(),n),aC([r,a,o,s]),[2,l]}})})},e.prototype.poseDetectionToRoi=function(e,t){return I5(IK(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,Tu)},e.prototype.poseLandmarksByRoi=function(e,t){return II(this,void 0,void 0,function(){var r,n,a,i,s,o,u,l,d,h,p,c,f,m;return IT(this,function(g){switch(g.label){case 0:if(r=IV(t),a=(n=IJ(t,Td,e)).imageTensor,i=n.padding,s=n.transformationMatrix,"lite"!==this.modelType&&"full"!==this.modelType&&"heavy"!==this.modelType)throw Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return o=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&o.push("activation_segmentation"),u=this.landmarkModel.execute(a,o),[4,this.tensorsToPoseLandmarksAndSegmentation(u)];case 1:return null==(l=g.sent())?(aC(u),aC(a),[2,null]):(d=l.landmarks,h=l.auxiliaryLandmarks,p=l.poseScore,c=l.worldLandmarks,f=l.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(r,e,i,s,d,h,c,f)]);case 2:return m=g.sent(),aC(u),aC(a),[2,IC({poseScore:p},m)]}})})},e.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,r,n,a,i,s,o){return II(this,void 0,void 0,function(){var u,l,d,h,p,c;return IT(this,function(f){return u=I4(a,r),l=I4(i,r),d=IQ(u,t),h=IQ(l,t),p=function(e,t){for(var r=[],n=0;n<e.length;n++){var a=e[n],i=a.x,s=a.y,o=t.rotation,u=Math.cos(o)*i-Math.sin(o)*s,l=Math.sin(o)*i+Math.cos(o)*s,d=IC({},a);d.x=u,d.y=l,r.push(d)}return r}(s,t),c=null,this.enableSegmentation&&(c=ak(function(){var t=o.shape,r=t[0],a=t[1],i=ho(IH(function(e){var t=Iq(Array(16).fill(0));t[0][0]=IY(e,0,0),t[1][0]=-IY(e,0,1),t[2][0]=IY(e,0,2),t[3][0]=-IY(e,0,3),t[0][2]=IY(e,2,0),t[1][2]=-IY(e,2,1),t[2][2]=IY(e,2,2),t[3][2]=-IY(e,2,3),t[0][1]=-IY(e,1,0),t[1][1]=IY(e,1,1),t[2][1]=-IY(e,1,2),t[3][1]=IY(e,1,3),t[0][3]=-IY(e,3,0),t[1][3]=IY(e,3,1),t[2][3]=-IY(e,3,2),t[3][3]=IY(e,3,3);for(var r=e[0][0]*t[0][0]+e[1][0]*t[0][1]+e[2][0]*t[0][2]+e[3][0]*t[0][3],n=0;n<t.length;n++)for(var a=0;a<t.length;a++)t[n][a]/=r;return t}(n),{width:a,height:r},e),[1,8]),s=[1,r,a,1];return hr(p_.transform(sQ(o,s),i,"bilinear","constant",0,[e.height,e.width]),[0,3])}),aC(o)),[2,{landmarks:d,auxiliaryLandmarks:h,worldLandmarks:p,segmentationMask:c}]})})},e.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return II(this,void 0,void 0,function(){var t,r,n,a,i,s,o,u,l,d,h,p;return IT(this,function(c){switch(c.label){case 0:return t=e[0],r=e[1],n=e[2],a=e[3],i=this.enableSegmentation?e[4]:null,[4,r.data()];case 1:return(s=c.sent()[0])<.5?[2,null]:[4,I6(t,Th)];case 2:return[4,function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s,o,u,l,d,h,p,c,f,m,g,y,x,b,v,w,S,k,C,I,T;return IT(this,function($){switch($.label){case 0:if(i=(a=(n=hr(t,[0])).shape)[0],s=a[1],o=a[2],e.length!==o)throw Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(e.length,", heatmap length: ").concat(o));return u=[],[4,n.buffer()];case 1:for(l=$.sent(),d=0;d<e.length;d++)if(h=e[d],p=IC({},h),u.push(p),c=Math.trunc(p.x*s),f=Math.trunc(p.y*i),!(c<0||c>=s||f<0||c>=i)){for(g=Math.max(0,c-(m=Math.trunc((r.kernelSize-1)/2))),y=Math.min(s,c+m+1),x=Math.max(0,f-m),b=Math.min(i,f+m+1),v=0,w=0,S=0,k=0,C=x;C<b;++C)for(I=g;I<y;++I)T=l.get(C,I,d),v+=T,k=Math.max(k,T),w+=I*T,S+=C*T;k>=r.minConfidenceToRefine&&v>0&&(p.x=w/s/v,p.y=S/i/v)}return n.dispose(),[2,u]}})})}(c.sent(),n,Tc)];case 3:return u=(o=c.sent()).slice(0,33),l=o.slice(33,35),[4,I6(a,Tp)];case 4:var f;return d=c.sent().slice(0,33),h=function(e,t,r){void 0===r&&(r=!0);for(var n=[],a=0;a<e.length;a++){var i=IC({},t[a]);r&&(i.score=e[a].score),n.push(i)}return n}(u,d,!0),p=this.enableSegmentation?(f=i,ak(function(){var e=hr(f,[0]),t=e.shape[2];if(1===t){var r=e;switch(Tx.activation){case"none":break;case"sigmoid":r=sZ(r);break;case"softmax":throw Error("Softmax activation requires two channels.");default:throw Error("Activation not supported (".concat(Tx.activation,")"))}return hr(r,[2])}throw Error("Unsupported number of tensor channels ".concat(t))})):null,[2,{landmarks:u,auxiliaryLandmarks:l,poseScore:s,worldLandmarks:h,segmentationMask:p}]}})})},e.prototype.poseLandmarksToRoi=function(e,t){return I5(IK(I2(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,Tu)},e.prototype.poseLandmarkFiltering=function(e,t,r,n){var a,i,s;if(null!=this.timestamp&&this.enableSmoothing){var o=IK(I2(t),n,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});null==this.visibilitySmoothingFilterActual&&(this.visibilitySmoothingFilterActual=new Tn(Tf)),a=this.visibilitySmoothingFilterActual.apply(e),null==this.visibilitySmoothingFilterAuxiliary&&(this.visibilitySmoothingFilterAuxiliary=new Tn(Tf)),i=this.visibilitySmoothingFilterAuxiliary.apply(t),s=this.visibilitySmoothingFilterActual.apply(r),null==this.landmarksSmoothingFilterActual&&(this.landmarksSmoothingFilterActual=new Tr(Tm)),a=this.landmarksSmoothingFilterActual.apply(a,this.timestamp,n,!0,o),null==this.landmarksSmoothingFilterAuxiliary&&(this.landmarksSmoothingFilterAuxiliary=new Tr(Tg)),i=this.landmarksSmoothingFilterAuxiliary.apply(i,this.timestamp,n,!0,o),null==this.worldLandmarksSmoothingFilterActual&&(this.worldLandmarksSmoothingFilterActual=new Tr(Ty)),s=this.worldLandmarksSmoothingFilterActual.apply(r,this.timestamp)}else a=e,i=t,s=r;return{actualLandmarksFiltered:a,auxiliaryLandmarksFiltered:i,actualWorldLandmarksFiltered:s}},e}(),$i=function(){function e(e){!function(e){if(e.maxTracks<1)throw Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(e.maxTracks));if(e.maxAge<=0)throw Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(e.maxAge));if(void 0!==e.keypointTrackerParams){if(e.keypointTrackerParams.keypointConfidenceThreshold<0||e.keypointTrackerParams.keypointConfidenceThreshold>1)throw Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(e.keypointTrackerParams.keypointConfidenceThreshold));if(e.keypointTrackerParams.minNumberOfKeypoints<1)throw Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(e.keypointTrackerParams.minNumberOfKeypoints));for(var t=0,r=e.keypointTrackerParams.keypointFalloff;t<r.length;t++){var n=r[t];if(n<=0)throw Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(n))}}}(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return e.prototype.apply=function(e,t){this.filterOldTracks(t);var r=this.computeSimilarity(e);return this.assignTracks(e,r,t),this.updateTracks(t),e},e.prototype.getTracks=function(){return this.tracks.slice()},e.prototype.getTrackIDs=function(){return new Set(this.tracks.map(function(e){return e.id}))},e.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter(function(r){return e-r.lastTimestamp<=t.maxAge})},e.prototype.assignTracks=function(e,t,r){for(var n=Array.from(Array(t[0].length).keys()),a=[],i=0,s=Array.from(Array(e.length).keys());i<s.length;i++){var o=s[i];if(0!==n.length){for(var u=-1,l=-1,d=0;d<n.length;d++){var h=n[d],p=t[o][h];p>=this.minSimilarity&&p>l&&(u=h,l=p)}if(u>=0){var c=this.tracks[u];c=Object.assign(c,this.createTrack(e[o],r,c.id)),e[o].id=c.id;var f=n.indexOf(u);n.splice(f,1)}else a.push(o)}else a.push(o)}for(var m=0;m<a.length;m++){o=a[m];var g=this.createTrack(e[o],r);this.tracks.push(g),e[o].id=g.id}},e.prototype.updateTracks=function(e){this.tracks.sort(function(e,t){return t.lastTimestamp-e.lastTimestamp}),this.tracks=this.tracks.slice(0,this.maxTracks)},e.prototype.createTrack=function(e,t,r){var n={id:r||this.nextTrackID(),lastTimestamp:t,keypoints:I$([],e.keypoints,!0).map(function(e){return IC({},e)})};return void 0!==e.box&&(n.box=IC({},e.box)),n},e.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},e.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter(function(t){return!e.includes(t.id)})},e.prototype.reset=function(){this.tracks=[]},e}(),$s=function(e){function t(t){return e.call(this,t)||this}return Ik(t,e),t.prototype.computeSimilarity=function(e){var t=this;return 0===e.length||0===this.tracks.length?[[]]:e.map(function(e){return t.tracks.map(function(r){return t.iou(e,r)})})},t.prototype.iou=function(e,t){var r=Math.max(e.box.xMin,t.box.xMin),n=Math.max(e.box.yMin,t.box.yMin),a=Math.min(e.box.xMax,t.box.xMax),i=Math.min(e.box.yMax,t.box.yMax);if(r>=a||n>=i)return 0;var s=(a-r)*(i-n);return s/(e.box.width*e.box.height+t.box.width*t.box.height-s)},t}($i),$o=function(e){function t(t){var r=e.call(this,t)||this;return r.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,r.keypointFalloff=t.keypointTrackerParams.keypointFalloff,r.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,r}return Ik(t,e),t.prototype.computeSimilarity=function(e){if(0===e.length||0===this.tracks.length)return[[]];for(var t=[],r=0;r<e.length;r++){for(var n=e[r],a=[],i=0,s=this.tracks;i<s.length;i++){var o=s[i];a.push(this.oks(n,o))}t.push(a)}return t},t.prototype.oks=function(e,t){for(var r=this.area(t.keypoints)+1e-6,n=0,a=0,i=0;i<e.keypoints.length;++i){var s=e.keypoints[i],o=t.keypoints[i];s.score<this.keypointThreshold||o.score<this.keypointThreshold||(a+=1,n+=Math.exp(-1*(Math.pow(s.x-o.x,2)+Math.pow(s.y-o.y,2))/(2*r*Math.pow(2*this.keypointFalloff[i],2))))}return a<this.minNumKeyoints?0:n/a},t.prototype.area=function(e){var t=this,r=e.filter(function(e){return e.score>t.keypointThreshold}),n=Math.min.apply(Math,I$([1],r.map(function(e){return e.x}),!1)),a=Math.max.apply(Math,I$([0],r.map(function(e){return e.x}),!1)),i=Math.min.apply(Math,I$([1],r.map(function(e){return e.y}),!1));return(a-n)*(Math.max.apply(Math,I$([0],r.map(function(e){return e.y}),!1))-i)},t}($i);function $u(e){switch(e){case $n.BlazePose:return IE.reduce(function(e,t,r){return e[t]=r,e},{});case $n.PoseNet:case $n.MoveNet:return IN.reduce(function(e,t,r){return e[t]=r,e},{});default:throw Error("Model ".concat(e," is not supported."))}}(l=$r||($r={})).Keypoint="keypoint",l.BoundingBox="boundingBox",(d=$n||($n={})).MoveNet="MoveNet",d.BlazePose="BlazePose",d.PoseNet="PoseNet",Object.freeze({__proto__:null,getKeypointIndexBySide:function(e){switch(e){case $n.BlazePose:return IR;case $n.PoseNet:case $n.MoveNet:return IA;default:throw Error("Model ".concat(e," is not supported."))}},getAdjacentPairs:function(e){switch(e){case $n.BlazePose:return IO;case $n.PoseNet:case $n.MoveNet:return I_;default:throw Error("Model ".concat(e," is not supported."))}},getKeypointIndexByName:$u});var $l=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],$d={modelType:"SinglePose.Lightning",enableSmoothing:!0},$h={},$p={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},$c={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},$f={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function $m(e,t){var r,n,a,i;return e?t.width>t.height?(r=1,n=t.height/t.width,a=0,i=(t.width/2-t.height/2)/t.width):(r=t.width/t.height,n=1,a=(t.height/2-t.width/2)/t.height,i=0):t.width>t.height?(r=t.width/t.height,n=1,a=(t.height/2-t.width/2)/t.height,i=0):(r=1,n=t.height/t.width,a=0,i=(t.width/2-t.height/2)/t.width),{yMin:a,xMin:i,yMax:a+r,xMax:i+n,height:r,width:n}}function $g(e,t){var r={maxTracks:e.maxTracks,maxAge:e.maxAge,minSimilarity:e.minSimilarity};return null!=t.maxTracks&&(r.maxTracks=t.maxTracks),null!=t.maxAge&&(r.maxAge=t.maxAge),null!=t.minSimilarity&&(r.minSimilarity=t.minSimilarity),r}var $y=function(){function e(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=$u($n.MoveNet),"SinglePose.Lightning"===t.modelType?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):"SinglePose.Thunder"===t.modelType&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel="MultiPose.Lightning"===t.modelType,this.multiPoseModel||(this.keypointFilter=new I9($p),this.cropRegionFilterYMin=new I8(.9),this.cropRegionFilterXMin=new I8(.9),this.cropRegionFilterYMax=new I8(.9),this.cropRegionFilterXMax=new I8(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===$r.Keypoint?this.tracker=new $o(t.trackerConfig):t.trackerType===$r.BoundingBox&&(this.tracker=new $s(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return e.prototype.runSinglePersonPoseModel=function(e){return II(this,void 0,void 0,function(){var t,r,n,a,i;return IT(this,function(s){switch(s.label){case 0:if(4!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||1!==t.shape[1]||17!==t.shape[2]||3!==t.shape[3])throw t.dispose(),Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===aT()?[3,1]:(r=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:r=s.sent(),s.label=3;case 3:for(t.dispose(),n={keypoints:[],score:0},a=0,i=0;i<17;++i)n.keypoints[i]={y:r[3*i],x:r[3*i+1],score:r[3*i+2]},n.keypoints[i].score>.2&&(++a,n.score+=n.keypoints[i].score);return a>0&&(n.score/=a),[2,n]}})})},e.prototype.runMultiPersonPoseModel=function(e){return II(this,void 0,void 0,function(){var t,r,n,a,i,s,o,u;return IT(this,function(l){switch(l.label){case 0:if(3!==(t=this.moveNetModel.execute(e)).shape.length||1!==t.shape[0]||56!==t.shape[2])throw t.dispose(),Error("Unexpected output shape from model: [".concat(t.shape,"]"));return"webgpu"===aT()?[3,1]:(r=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:r=l.sent(),l.label=3;case 3:for(t.dispose(),n=[],a=r.length/56,i=0;i<a;++i)for(n[i]={keypoints:[]},s=56*i+51,n[i].box={yMin:r[s],xMin:r[s+1],yMax:r[s+2],xMax:r[s+3],width:r[s+3]-r[s+1],height:r[s+2]-r[s]},o=56*i+55,n[i].score=r[o],n[i].keypoints=[],u=0;u<17;++u)n[i].keypoints[u]={y:r[56*i+3*u],x:r[56*i+3*u+1],score:r[56*i+3*u+2]};return[2,n]}})})},e.prototype.estimatePoses=function(e,t,r){return void 0===t&&(t=$h),II(this,void 0,void 0,function(){var n,a,i,s,o,u;return IT(this,function(l){switch(l.label){case 0:var d;return t=null==(d=t)?$h:IC({},d),null==e?(this.reset(),[2,[]]):(null==r?I1(e)&&(r=1e6*e.currentTime):r*=1e3,a=IV(n=IG(e)),i=u_(n,0),e instanceof n1||n.dispose(),s=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(i,a,r)]);case 1:return s=l.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(i,a,r)];case 3:s=l.sent(),l.label=4;case 4:for(o=0;o<s.length;++o)for(u=0;u<s[o].keypoints.length;++u)s[o].keypoints[u].name=IN[u],s[o].keypoints[u].y*=a.height,s[o].keypoints[u].x*=a.width;return[2,s]}})})},e.prototype.estimateSinglePose=function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s,o=this;return IT(this,function(u){switch(u.label){case 0:return this.cropRegion||(this.cropRegion=$m(null==this.cropRegion,t)),n=ak(function(){var t=ho([[o.cropRegion.yMin,o.cropRegion.xMin,o.cropRegion.yMax,o.cropRegion.xMax]]),r=l8([1],"int32"),n=[o.modelInputResolution.height,o.modelInputResolution.width];return iQ(p_.cropAndResize(e,t,r,n,"bilinear",0),"int32")}),e.dispose(),[4,this.runSinglePersonPoseModel(n)];case 1:if(a=u.sent(),n.dispose(),a.score<this.minPoseScore)return this.reset(),[2,[]];for(i=0;i<a.keypoints.length;++i)a.keypoints[i].y=this.cropRegion.yMin+a.keypoints[i].y*this.cropRegion.height,a.keypoints[i].x=this.cropRegion.xMin+a.keypoints[i].x*this.cropRegion.width;return null!=r&&this.enableSmoothing&&(a.keypoints=this.keypointFilter.apply(a.keypoints,r,1)),s=function(e,t,r,n){for(var a={},i=0;i<IN.length;i++){var s=IN[i];a[s]=[t[r[s]].y*n.height,t[r[s]].x*n.width]}if((t[r.left_hip].score>.2||t[r.right_hip].score>.2)&&(t[r.left_shoulder].score>.2||t[r.right_shoulder].score>.2)){var o=(a.left_hip[0]+a.right_hip[0])/2,u=(a.left_hip[1]+a.right_hip[1])/2,l=function(e,t,r,n,a){for(var i=["left_shoulder","right_shoulder","left_hip","right_hip"],s=0,o=0,u=0;u<i.length;u++)(c=Math.abs(n-r[i[u]][0]))>s&&(s=c),(f=Math.abs(a-r[i[u]][1]))>o&&(o=f);for(var l=0,d=0,h=0,p=Object.keys(r);h<p.length;h++){var c,f,m=p[h];!(e[t[m]].score<.2)&&((c=Math.abs(n-r[m][0]))>l&&(l=c),(f=Math.abs(a-r[m][1]))>d&&(d=f))}return[s,o,l,d]}(t,r,a,o,u),d=l[0],h=Math.max(1.9*l[1],1.9*d,1.2*l[2],1.2*l[3]),p=[o-(h=Math.min(h,Math.max(u,n.width-u,o,n.height-o))),u-h];if(h>Math.max(n.width,n.height)/2)return $m(null==e,n);var c=2*h;return{yMin:p[0]/n.height,xMin:p[1]/n.width,yMax:(p[0]+c)/n.height,xMax:(p[1]+c)/n.width,height:(p[0]+c)/n.height-p[0]/n.height,width:(p[1]+c)/n.width-p[1]/n.width}}return $m(null==e,n)}(this.cropRegion,a.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(s),[2,[a]]}})})},e.prototype.estimateMultiplePoses=function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s,o,u,l,d,h,p,c,f=this;return IT(this,function(m){switch(m.label){case 0:return t.width>t.height?(a=this.multiPoseMaxDimension,i=Math.round(this.multiPoseMaxDimension*t.height/t.width),n=p_.resizeBilinear(e,[i,a]),o=a,s=dh(n,[[0,0],[0,(u=32*Math.ceil(i/32))-i],[0,0],[0,0]])):(a=Math.round(this.multiPoseMaxDimension*t.width/t.height),i=this.multiPoseMaxDimension,n=p_.resizeBilinear(e,[i,a]),o=32*Math.ceil(a/32),u=i,s=dh(n,[[0,0],[0,0],[0,o-a],[0,0]])),n.dispose(),e.dispose(),l=iQ(s,"int32"),s.dispose(),[4,this.runMultiPersonPoseModel(l)];case 1:for(d=m.sent(),l.dispose(),d=d.filter(function(e){return e.score>=f.minPoseScore}),p=0;p<d.length;++p)for(h=0;h<d[p].keypoints.length;++h)d[p].keypoints[h].y*=u/i,d[p].keypoints[h].x*=o/a;if(this.enableTracking&&(this.tracker.apply(d,r),this.enableSmoothing)){for(p=0;p<d.length;++p)this.keypointFilterMap.has(d[p].id)||this.keypointFilterMap.set(d[p].id,new I9($p)),d[p].keypoints=this.keypointFilterMap.get(d[p].id).apply(d[p].keypoints,r,1);c=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach(function(e,t){c.has(t)||f.keypointFilterMap.delete(t)})}return[2,d]}})})},e.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),r=this.cropRegionFilterXMin.apply(e.xMin),n=this.cropRegionFilterYMax.apply(e.yMax),a=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:r,yMax:n,xMax:a,height:n-t,width:a-r}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},e.prototype.dispose=function(){this.moveNetModel.dispose()},e.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},e.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},e}(),$x={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},$b=["MobileNetV1","ResNet50"],$v={MobileNetV1:[8,16],ResNet50:[16]},$w=[8,16,32],$S={MobileNetV1:[.5,.75,1],ResNet50:[1]},$k=[1,2,4],$C={maxPoses:1,flipHorizontal:!1},$I={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},$T=[-123.15,-115.9,-103.06];function $$(e){return Math.floor(e/2)}var $N=function(){function e(e,t){this.priorityQueue=Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return -1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less($$(e),e);)this.exchange(e,$$(e)),e=$$(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=r},e}();function $E(e,t,r,n){return{y:n.get(e,t,r),x:n.get(e,t,r+17)}}function $R(e,t,r){var n=$E(e.heatmapY,e.heatmapX,e.id,r),a=n.y,i=n.x;return{x:e.heatmapX*t+i,y:e.heatmapY*t+a}}function $A(e,t,r,n){var a=r.x,i=r.y;return e.some(function(e){var r,s,o,u,l=e.keypoints;return r=l[n].y,s=l[n].x,(o=r-i)*o+(u=s-a)*u<=t})}var $_=IN.reduce(function(e,t,r){return e[t]=r,e},{}),$O=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map(function(e){var t=e[0],r=e[1];return[$_[t],$_[r]]}),$F=$O.map(function(e){return e[1]}),$D=$O.map(function(e){return e[0]});function $P(e,t,r,n){var a,i,s,o;return{y:(a=Math.round(e.y/t),i=r-1,a<0?0:a>i?i:a),x:(s=Math.round(e.x/t),o=n-1,s<0?0:s>o?o:s)}}function $M(e,t){return{x:e.x+t.x,y:e.y+t.y}}function $L(e,t,r,n,a,i,s,o){void 0===o&&(o=2);for(var u,l,d=n.shape,h=d[0],p=d[1],c={y:t.y,x:t.x},f=$M(c,(u=$P(c,i,h,p),l=s.shape[2]/2,{y:s.get(u.y,u.x,e),x:s.get(u.y,u.x,l+e)})),m=0;m<o;m++){var g=$P(f,i,h,p),y=$E(g.y,g.x,r,a);f=$M({x:g.x*i,y:g.y*i},{x:y.x,y:y.y})}var x=$P(f,i,h,p),b=n.get(x.y,x.x,r);return{y:f.y,x:f.x,name:IN[r],score:b}}function $B(){for(var e,t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];switch(t.length){case 0:e="fn main() ";break;case 1:e="fn main(".concat(t[0]," : i32)");break;default:throw Error("Unreachable")}return e}var $z=function(){function e(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=ws.flatDispatchLayout(this.outputShape),this.dispatch=ws.computeDispatch(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return e.prototype.getUserCode=function(){return"\n        ".concat($B("index")," {\n          if (index < uniforms.size) {\n            let y = B[index * 2];\n            let x = B[index * 2 + 1];\n            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;\n            result[index] = A[outIndex];\n          }\n        }\n        ")},e}(),$U=function(){function e(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,2!==e.length||e[1]!==this.supportedLastDimension)throw Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=ws.flatDispatchLayout(t),this.dispatch=ws.computeDispatch(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return e.prototype.getUserCode=function(){return"\n    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {\n      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;\n      let outIndexX = outIndexY + uniforms.bShape.z;\n      let outY = i32(B[outIndexY]);\n      let outX = i32(B[outIndexX]);\n      return vec2<i32>(outY, outX);\n    }\n\n    ".concat($B("index")," {\n      if (index < uniforms.size) {\n        let indexY = index * ").concat(this.supportedLastDimension,";\n        let indexX = indexY + 1;\n        let heatmapY = A[indexY];\n        let heatmapX = A[indexX];\n        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);\n        result[indexY] = f32(out[0]);\n        result[indexX] = f32(out[1]);\n      }\n    }\n    ")},e}();function $V(e){var t=e.shape,r=t[0],n=t[1],a=t[2];return ak(function(){var t=sm(sQ(e,[r*n,a]),0);return uR([u_(i2(t,i7(n,"int32")),1),u_(ak(function(){var e=i2(t,i7(n,"int32"));return ss(t,i3(e,i7(n,"int32")))}),1)],1)})}var $W="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",$G="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function $H(e,t){return(e-1)%t==0?e:Math.floor(e/t)*t+1}var $j=function(){function e(e,t){this.posenetModel=e;var r,n,a=this.posenetModel.inputs[0].shape;r9.assert(-1===a[1]&&-1===a[2],function(){return"Input shape [".concat(a[1],", ").concat(a[2],"] ")+"must both be equal to or -1"});var i,s,o=(i=t.inputResolution,s=t.outputStride,{height:$H(i.height,s),width:$H(i.width,s)});r=t.outputStride,r9.assert($w.indexOf(r)>=0,function(){return"outputStride of ".concat(r," is invalid. ")+"It must be either 8 or 16."}),n=t.outputStride,r9.assert((o.height-1)%n==0,function(){return"height of ".concat(o.height," is invalid for output stride ")+"".concat(n,".")}),r9.assert((o.width-1)%n==0,function(){return"width of ".concat(o.width," is invalid for output stride ")+"".concat(n,".")}),this.inputResolution=o,this.outputStride=t.outputStride,this.architecture=t.architecture}return e.prototype.estimatePoses=function(e,t){return void 0===t&&(t=$C),II(this,void 0,void 0,function(){return IT(this,function(r){return[2,this.estimatePosesGPU(e,t,!1)]})})},e.prototype.estimatePosesGPU=function(e,t,r){return void 0===t&&(t=$C),void 0===r&&(r=!1),II(this,void 0,void 0,function(){var n,a,i,s,o,u,l,d,h,p,c,f,m,g,y,x,b,v;return IT(this,function(w){switch(w.label){case 0:return n=function(e){var t=e;if(null==t.maxPoses&&(t.maxPoses=1),t.maxPoses<=0)throw Error("Invalid maxPoses ".concat(t.maxPoses,". Should be > 0."));if(t.maxPoses>1){if((t=IC(IC({},$I),t)).scoreThreshold<0||t.scoreThreshold>1)throw Error("Invalid scoreThreshold ".concat(t.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(t.nmsRadius<=0)throw Error("Invalid nmsRadius ".concat(t.nmsRadius,"."))}return t}(t),null==e?[2,r?[[],[]]:[]]:(this.maxPoses=n.maxPoses,i=(a=IJ(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"})).imageTensor,s=a.padding,o="ResNet50"===this.architecture?i0(i,$T):IZ(i,[-1,1]),u=this.posenetModel.predict(o),"ResNet50"===this.architecture?(l=hr(u[2],[0]),d=hr(u[3],[0]),h=hr(u[0],[0]),p=hr(u[1],[0])):(l=hr(u[0],[0]),d=hr(u[1],[0]),h=hr(u[2],[0]),p=hr(u[3],[0])),c=sZ(d),1!==this.maxPoses?[3,5]:r?[4,function(e,t,r){return II(this,void 0,void 0,function(){var n;return IT(this,function(a){var i;return i=n=$V(e),[2,[ak(function(){var e=function(e,t){if(aN() instanceof wb){var r,n,a;return r=aN(),n=new $U(e.shape),a=r.runWebGPUProgram(n,[e,t],"float32"),ai.makeTensorFromTensorInfo(a)}throw Error("getOffsetVectorsGPU is not supported in this backend!")}(i,t);return i0(iQ(i3(i,i7(r,"int32")),"float32"),e)}),function(e,t){if(aN() instanceof wb){var r,n,a;return r=aN(),n=new $z(t.shape),a=r.runWebGPUProgram(n,[e,t],"float32"),ai.makeTensorFromTensorInfo(a)}throw Error("getPointsConfidenceWebGPU is not supported in this backend!")}(e,n)]]})})}(c,l,this.outputStride)]:[3,2]);case 1:return y=(m=w.sent())[0],g=m[1],f=[y,g],[3,4];case 2:return[4,function(e,t,r){return II(this,void 0,void 0,function(){var n,a,i,s,o,u,l,d,h;return IT(this,function(p){switch(p.label){case 0:return n=0,a=$V(e),[4,Promise.all([e.buffer(),t.buffer(),a.buffer()])];case 1:var c;return s=(i=p.sent())[0],o=i[1],[4,(c=u=i[2],l=ak(function(){var e=function(e,t){for(var r=[],n=0;n<IN.length;n++){var a,i,s,o=(a=e.get(n,0).valueOf(),i=e.get(n,1).valueOf(),s=n,{y:t.get(a,i,s),x:t.get(a,i,s+IN.length)}),u=o.x,l=o.y;r.push(l),r.push(u)}return ho(r,[IN.length,2])}(c,o);return i0(iQ(i3(c.toTensor(),i7(r,"int32")),"float32"),e)})).buffer()];case 2:return d=p.sent(),h=Array.from(function(e,t){for(var r=t.shape[0],n=new Float32Array(r),a=0;a<r;a++){var i=t.get(a,0),s=t.get(a,1);n[a]=e.get(i,s,a)}return n}(s,u)).map(function(e,t){return n+=e,{y:d.get(t,0),x:d.get(t,1),score:e,name:IN[t]}}),a.dispose(),l.dispose(),[2,{keypoints:h,score:n/h.length}]}})})}(c,l,this.outputStride)];case 3:f=[y=w.sent()],w.label=4;case 4:return[3,7];case 5:if(r)throw Error("GPU renderer only supports single pose!");return[4,function(e,t,r,n,a,i,s,o){return void 0===s&&(s=.5),void 0===o&&(o=20),II(this,void 0,void 0,function(){var u,l,d,h,p,c,f,m,g,y,x;return IT(this,function(b){switch(b.label){case 0:return[4,function(e){return II(this,void 0,void 0,function(){return IT(this,function(t){return[2,Promise.all(e.map(function(e){return e.buffer()}))]})})}([e,t,r,n])];case 1:for(l=(u=b.sent())[0],d=u[1],h=u[2],p=u[3],c=[],f=function(e,t,r){for(var n=r.shape,a=n[0],i=n[1],s=n[2],o=new $N(a*i*s,function(e){return e.score}),u=0;u<a;++u)for(var l=0;l<i;++l)for(var d=0;d<s;++d){var h=r.get(u,l,d);h<e||function(e,t,r,n,a,i){for(var s=i.shape,o=s[0],u=s[1],l=!0,d=Math.max(r-1,0),h=Math.min(r+1+1,o),p=d;p<h;++p){for(var c=Math.max(n-a,0),f=Math.min(n+a+1,u),m=c;m<f;++m)if(i.get(p,m,e)>t){l=!1;break}if(!l)break}return l}(d,h,u,l,1,r)&&o.enqueue({score:h,part:{heatmapY:u,heatmapX:l,id:d}})}return o}(s,0,l),m=o*o;c.length<i&&!f.empty();)$A(c,m,$R((g=f.dequeue()).part,a,d),g.part.id)||(x=function(e,t,r){return r.reduce(function(r,n,a){var i=n.y,s=n.x,o=n.score;return $A(e,t,{y:i,x:s},a)||(r+=o),r},0)/r.length}(c,m,y=function(e,t,r,n,a,i){var s=t.shape[2],o=$F.length,u=Array(s),l=e.part,d=e.score,h=$R(l,n,r);u[l.id]={score:d,name:IN[l.id],y:h.y,x:h.x};for(var p=o-1;p>=0;--p){var c=$F[p],f=$D[p];u[c]&&!u[f]&&(u[f]=$L(p,u[c],f,t,r,n,i))}for(p=0;p<o;++p)c=$D[p],f=$F[p],u[c]&&!u[f]&&(u[f]=$L(p,u[c],f,t,r,n,a));return u}(g,l,d,a,h,p)),c.push({keypoints:y,score:x}));return[2,c]}})})}(c,l,h,p,this.outputStride,this.maxPoses,n.scoreThreshold,n.nmsRadius)];case 6:f=w.sent(),w.label=7;case 7:if(r){if(!0===n.flipHorizontal)throw Error("flipHorizontal is not supported!");x=this.getCanvasInfo(IV(e),this.inputResolution,s)}else v=IV(e),b=function(e,t,r,n){var a=t.height,i=t.width,s=a/(r.height*(1-n.top-n.bottom)),o=i/(r.width*(1-n.left-n.right)),u=-n.top*r.height,l=-n.left*r.width;if(1===o&&1===s&&0===u&&0===l)return e;for(var d=0;d<e.length;d++)for(var h=0,p=e[d].keypoints;h<p.length;h++){var c=p[h];c.x=(c.x+l)*o,c.y=(c.y+u)*s}return e}(f,v,this.inputResolution,s),n.flipHorizontal&&(b=function(e,t){for(var r=0;r<e.length;r++)for(var n=0,a=e[r].keypoints;n<a.length;n++){var i=a[n];i.x=t.width-1-i.x}return e}(b,v));return i.dispose(),o.dispose(),aC(u),l.dispose(),d.dispose(),h.dispose(),p.dispose(),c.dispose(),[2,r?[f,x]:b]}})})},e.prototype.getCanvasInfo=function(e,t,r){var n=e.height,a=e.width,i=n/(t.height*(1-r.top-r.bottom)),s=a/(t.width*(1-r.left-r.right)),o=-r.top*t.height;return[-r.left*t.width,o,s,i,e.width,e.height]},e.prototype.dispose=function(){this.posenetModel.dispose()},e.prototype.reset=function(){},e}();window.isInputVideoFlipped=null,window.inputVideo=null,window.nose=null,window.leftEyeInner=null,window.leftEye=null,window.leftEyeOuter=null,window.rightEyeInner=null,window.rightEye=null,window.rightEyeOuter=null,window.leftEar=null,window.rightEar=null,window.leftMouth=null,window.mouthLeft=null,window.rightMouth=null,window.mouthRight=null,window.leftShoulder=null,window.rightShoulder=null,window.leftElbow=null,window.rightElbow=null,window.leftWrist=null,window.rightWrist=null,window.leftPinky=null,window.rightPinky=null,window.leftIndex=null,window.rightIndex=null,window.leftThumb=null,window.rightThumb=null,window.leftHip=null,window.rightHip=null,window.leftKnee=null,window.rightKnee=null,window.leftAnkle=null,window.rightAnkle=null,window.leftHeel=null,window.rightHeel=null,window.leftFootIndex=null,window.rightFootIndex=null,window.neckBase=null,window.pelvis=null,window.mouth=null,window.keypoints=[],window.inputVideoUrl=null;class $K{constructor({url:e=null,flip:t=!0}={}){this.isVideoLoaded=!1,this.isDetectorLoaded=!1,this.detector=null,isInputVideoFlipped=t,inputVideoUrl=e,createButton("Start Capture").position(10,10).mousePressed(()=>{this.initResources()})}async initResources(){var e;await (e="webgl",ai.setBackend(e)),await ai.ready(),window.inputVideoUrl?(console.log("Loading video"),inputVideo=createVideo(window.inputVideoUrl,()=>{console.log("Video loaded"),inputVideo.play(),inputVideo.loop(),inputVideo.volume(0),this.isVideoLoaded=!0,console.log("Video playing, starting detection"),this.isDetectorLoaded&&this.startDetection()}).hide()):(console.log("Loading webcam"),inputVideo=createCapture(VIDEO,()=>{this.isVideoLoaded=!0,console.log("Webcam loaded"),this.startDetection()}).hide()),(function(e,t){return II(this,void 0,void 0,function(){var r,n;return IT(this,function(a){switch(e){case $n.PoseNet:return[2,function(e){return void 0===e&&(e=$x),II(this,void 0,void 0,function(){var t,r,n;return IT(this,function(a){var i,s,o,u,l,d,h,p;switch(a.label){case 0:return"ResNet50"!==(t=function(e){var t=e||$x;if(null==t.architecture&&(t.architecture="MobileNetV1"),0>$b.indexOf(t.architecture))throw Error("Invalid architecture ".concat(t.architecture,". ")+"Should be one of ".concat($b));if(null==t.inputResolution&&(t.inputResolution={height:257,width:257}),null==t.outputStride&&(t.outputStride=16),0>$v[t.architecture].indexOf(t.outputStride))throw Error("Invalid outputStride ".concat(t.outputStride,". ")+"Should be one of ".concat($v[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.multiplier&&(t.multiplier=1),0>$S[t.architecture].indexOf(t.multiplier))throw Error("Invalid multiplier ".concat(t.multiplier,". ")+"Should be one of ".concat($S[t.architecture]," ")+"for architecture ".concat(t.architecture,"."));if(null==t.quantBytes&&(t.quantBytes=4),0>$k.indexOf(t.quantBytes))throw Error("Invalid quantBytes ".concat(t.quantBytes,". ")+"Should be one of ".concat($k," ")+"for architecture ".concat(t.architecture,"."));if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(e)).architecture?[3,2]:(i=t.outputStride,s=t.quantBytes,o="model-stride".concat(i,".json"),r=4===s?$G+"float/"+o:$G+"quant".concat(s,"/")+o,[4,vY(t.modelUrl||r)]);case 1:case 3:return[2,new $j(a.sent(),t)];case 2:return u=t.outputStride,l=t.multiplier,d=t.quantBytes,h={1:"100",.75:"075",.5:"050"},p="model-stride".concat(u,".json"),n=4===d?$W+"float/".concat(h[l],"/")+p:$W+"quant".concat(d,"/").concat(h[l],"/")+p,[4,vY(t.modelUrl||n)]}})})}(t)];case $n.BlazePose:if(n=void 0,null!=(r=t)){if("tfjs"===r.runtime)return[2,function(e){return II(this,void 0,void 0,function(){var t,r,n,a;return IT(this,function(i){switch(i.label){case 0:return r="string"==typeof(t=function(e){var t=IC({},null==e?Ti:e);if(null==t.enableSmoothing&&(t.enableSmoothing=Ti.enableSmoothing),null==t.enableSegmentation&&(t.enableSegmentation=Ti.enableSegmentation),null==t.smoothSegmentation&&(t.smoothSegmentation=Ti.smoothSegmentation),null==t.modelType&&(t.modelType=Ti.modelType),null==t.detectorModelUrl&&(t.detectorModelUrl=Ti.detectorModelUrl),null==t.landmarkModelUrl)switch(t.modelType){case"lite":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;default:t.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return t}(e)).detectorModelUrl&&t.detectorModelUrl.indexOf("https://tfhub.dev")>-1,n="string"==typeof t.landmarkModelUrl&&t.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([vY(t.detectorModelUrl,{fromTFHub:r}),vY(t.landmarkModelUrl,{fromTFHub:n})])];case 1:return[2,new $a((a=i.sent())[0],a[1],t.enableSmoothing,t.enableSegmentation,t.smoothSegmentation,t.modelType)]}})})}(t)];if("mediapipe"===r.runtime)return[2,function(e){return II(this,void 0,void 0,function(){var t;return IT(this,function(r){switch(r.label){case 0:return[4,(t=new IU(function(e){if(null==e)return IC({},IL);var t=IC({},e);return t.runtime="mediapipe",null==t.enableSegmentation&&(t.enableSegmentation=IL.enableSegmentation),null==t.enableSmoothing&&(t.enableSmoothing=IL.enableSmoothing),null==t.smoothSegmentation&&(t.smoothSegmentation=IL.smoothSegmentation),null==t.modelType&&(t.modelType=IL.modelType),t}(e))).initialize()];case 1:return r.sent(),[2,t]}})})}(t)];n=r.runtime}throw Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(n));case $n.MoveNet:return[2,function(e){return void 0===e&&(e=$d),II(this,void 0,void 0,function(){var t,r,n,a;return IT(this,function(i){switch(i.label){case 0:return t=function(e){var t,r,n=null==e?$d:IC({},e);if(null==n.modelType)n.modelType="SinglePose.Lightning";else if(0>$l.indexOf(n.modelType))throw Error("Invalid architecture ".concat(n.modelType,". ")+"Should be one of ".concat($l));if(null==n.enableSmoothing&&(n.enableSmoothing=!0),null!=n.minPoseScore&&(n.minPoseScore<0||n.minPoseScore>1))throw Error("minPoseScore should be between 0.0 and 1.0");if(null!=n.multiPoseMaxDimension&&(n.multiPoseMaxDimension%32!=0||n.multiPoseMaxDimension<32))throw Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if("MultiPose.Lightning"===n.modelType&&null==n.enableTracking&&(n.enableTracking=!0),"MultiPose.Lightning"===n.modelType&&!0===n.enableTracking){if(null==n.trackerType&&(n.trackerType=$r.BoundingBox),n.trackerType===$r.Keypoint)null!=n.trackerConfig?n.trackerConfig=((r=$g($c,t=n.trackerConfig)).keypointTrackerParams=IC({},$c.keypointTrackerParams),null!=t.keypointTrackerParams&&(null!=t.keypointTrackerParams.keypointConfidenceThreshold&&(r.keypointTrackerParams.keypointConfidenceThreshold=t.keypointTrackerParams.keypointConfidenceThreshold),null!=t.keypointTrackerParams.keypointFalloff&&(r.keypointTrackerParams.keypointFalloff=t.keypointTrackerParams.keypointFalloff),null!=t.keypointTrackerParams.minNumberOfKeypoints&&(r.keypointTrackerParams.minNumberOfKeypoints=t.keypointTrackerParams.minNumberOfKeypoints)),r):n.trackerConfig=$c;else{if(n.trackerType!==$r.BoundingBox)throw Error("Tracker type not supported by MoveNet");null!=n.trackerConfig?n.trackerConfig=$g($f,n.trackerConfig):n.trackerConfig=$f}}return n}(e),n=!0,t.modelUrl?(n="string"==typeof t.modelUrl&&t.modelUrl.indexOf("https://tfhub.dev")>-1,[4,vY(t.modelUrl,{fromTFHub:n})]):[3,2];case 1:return r=i.sent(),[3,4];case 2:return a=void 0,"SinglePose.Lightning"===t.modelType?a="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":"SinglePose.Thunder"===t.modelType?a="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":"MultiPose.Lightning"===t.modelType&&(a="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,vY(a,{fromTFHub:n})];case 3:r=i.sent(),i.label=4;case 4:return"webgl"===aT()&&ey.set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new $y(r,t)]}})})}(t)];default:throw Error("".concat(e," is not a supported model name."))}})})})($n.BlazePose,{runtime:"mediapipe",modelType:"full",enableSegmentation:!0,maxPoses:1,solutionPath:"https://cdn.jsdelivr.net/npm/@mediapipe/pose"}).then(e=>{this.detector=e,this.isDetectorLoaded=!0,console.log("Detector loaded"),this.startDetection()})}startDetection(){this.isVideoLoaded&&this.isDetectorLoaded&&this.detectPose()}async detectPose(){if(this.isVideoLoaded&&this.isDetectorLoaded)try{let e=await this.detector.estimatePoses(inputVideo.elt,{enableSmoothing:!0});e.length>0&&(keypoints=[],e[0].keypoints.forEach(e=>{let t=e.name.replace(/(_\w)/g,e=>e[1].toUpperCase());if(e.score>.7){let r=width/inputVideo.width,n=height/inputVideo.height,a=e.x*r,i=e.y*n;isInputVideoFlipped&&(a=width-a),"mouthLeft"===t&&(t="leftMouth"),"mouthRight"===t&&(t="rightMouth"),window[t]={x:a,y:i},keypoints.push({x:a,y:i,name:t})}else window[t]=null}),leftShoulder&&rightShoulder?(neckBase={x:(leftShoulder.x+rightShoulder.x)/2,y:(leftShoulder.y+rightShoulder.y)/2},keypoints.push({x:neckBase.x,y:neckBase.y,name:"neckBase"})):neckBase=null,leftHip&&rightHip?(pelvis={x:(leftHip.x+rightHip.x)/2,y:(leftHip.y+rightHip.y)/2},keypoints.push({x:pelvis.x,y:pelvis.y,name:"pelvis"})):pelvis=null,leftMouth&&rightMouth?(mouth={x:(leftMouth.x+rightMouth.x)/2,y:(leftMouth.y+rightMouth.y)/2},keypoints.push({x:mouth.x,y:mouth.y,name:"mouth"})):mouth=null),aC(e),requestAnimationFrame(this.detectPose.bind(this))}catch(e){console.error("Error detecting pose:",e)}}}window.drawVideo=(e=0,t=0,r=width,n=height)=>{inputVideo&&(push(),imageMode(CORNER),isInputVideoFlipped?(translate(width,0),scale(-1,1),image(inputVideo,width-(e+r),t,r,n)):image(inputVideo,e,t,r,n),pop())},window.drawKeypoints=({size:e=8,color:t="white"}={})=>{keypoints&&(push(),fill(t),noStroke(),keypoints.forEach(t=>{"leftEyeInner"===t.name||"leftEyeOuter"===t.name||"rightEyeInner"===t.name||"rightEyeOuter"===t.name||"leftMouth"===t.name||"rightMouth"===t.name||"leftPinky"===t.name||"rightPinky"===t.name||"leftThumb"===t.name||"rightThumb"===t.name||circle(t.x,t.y,e)}),pop())},window.drawSkeleton=({thickness:e=2,color:t="white"}={})=>{keypoints&&(push(),stroke(t),strokeWeight(e),noFill(),line(neckBase?.x,neckBase?.y,mouth?.x,mouth?.y),line(leftShoulder?.x,leftShoulder?.y,rightShoulder?.x,rightShoulder?.y),line(leftShoulder?.x,leftShoulder?.y,leftElbow?.x,leftElbow?.y),line(rightShoulder?.x,rightShoulder?.y,rightElbow?.x,rightElbow?.y),line(leftElbow?.x,leftElbow?.y,leftWrist?.x,leftWrist?.y),line(rightElbow?.x,rightElbow?.y,rightWrist?.x,rightWrist?.y),line(leftShoulder?.x,leftShoulder?.y,leftHip?.x,leftHip?.y),line(rightShoulder?.x,rightShoulder?.y,rightHip?.x,rightHip?.y),line(leftHip?.x,leftHip?.y,leftKnee?.x,leftKnee?.y),line(rightHip?.x,rightHip?.y,rightKnee?.x,rightKnee?.y),line(leftHip?.x,leftHip?.y,rightHip?.x,rightHip?.y),line(leftKnee?.x,leftKnee?.y,leftAnkle?.x,leftAnkle?.y),line(leftAnkle?.x,leftAnkle?.y,leftHeel?.x,leftHeel?.y),line(rightAnkle?.x,rightAnkle?.y,rightHeel?.x,rightHeel?.y),line(leftHeel?.x,leftHeel?.y,leftFootIndex?.x,leftFootIndex?.y),line(rightHeel?.x,rightHeel?.y,rightFootIndex?.x,rightFootIndex?.y),line(rightKnee?.x,rightKnee?.y,rightAnkle?.x,rightAnkle?.y),line(leftWrist?.x,leftWrist?.y,leftIndex?.x,leftIndex?.y),line(rightWrist?.x,rightWrist?.y,rightIndex?.x,rightIndex?.y),line(mouth?.x,mouth?.y,nose?.x,nose?.y),line(nose?.x,nose?.y,leftEye?.x,leftEye?.y),line(nose?.x,nose?.y,rightEye?.x,rightEye?.y),line(leftEye?.x,leftEye?.y,leftEar?.x,leftEar?.y),line(rightEye?.x,rightEye?.y,rightEar?.x,rightEar?.y),pop())},window.createPoseDetector=({url:e=null,flip:t=null}={})=>(t=null!==t?t:!e,new $K({url:e,flip:t})),window.distanceBetween=(e,t)=>e&&t?Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2)):0,window.directionBetween=(e,t)=>e&&t?map(Math.atan2(t.y-e.y,t.x-e.x),-Math.PI/2,Math.PI/2,-1,1):0}();
//# sourceMappingURL=pose-detector.js.map
